[{"C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\index.js":"1","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\reportWebVitals.js":"2","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\App.js":"3","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Services\\history.js":"4","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Redux\\store.js":"5","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Redux\\types.js":"6","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Services\\apis.js":"7","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Routes\\Routes.js":"8","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\Modals\\LoginModal.js":"9","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\Modals\\DepositModal.js":"10","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\Modals\\ConfirmSlip.js":"11","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\Modals\\ViewCoupon.js":"12","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\Modals\\TipsterForm.js":"13","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Utils\\index.js":"14","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Redux\\reducers\\index.js":"15","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\NotFound.js":"16","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Routes\\SportRoutes.js":"17","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Jackpot.js":"18","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Routes\\LiveRoutes.js":"19","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Routes\\AccountRoutes.js":"20","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Virtual.js":"21","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\layout\\Account.js":"22","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\layout\\Main.js":"23","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\layout\\BecomeAnAgent.js":"24","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\layout\\InPlay.js":"25","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Auth\\Register.js":"26","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Auth\\RecoverPassword.js":"27","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Auth\\ResetPassword.js":"28","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\BecomeAnAgent\\Index.js":"29","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\BecomeAnAgent\\Benefits.js":"30","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\BecomeAnAgent\\AgentRegister.js":"31","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\BecomeAnAgent\\EasySteps.js":"32","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Utils\\helpers.js":"33","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Utils\\couponHelpers.js":"34","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\BetListOutcome.js":"35","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Utils\\Http.js":"36","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Utils\\ErrorBoundary.js":"37","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Redux\\reducers\\user.js":"38","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Redux\\reducers\\sports.js":"39","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Redux\\reducers\\coupon.js":"40","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Redux\\reducers\\login.js":"41","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\EventDetails.js":"42","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Home.js":"43","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\OddsLessThan.js":"44","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\ExploreEvents.js":"45","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\SearchResults.js":"46","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\TournamentSelector.js":"47","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\SportOdds.js":"48","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\TipsterBetslips.js":"49","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\PrintFixtures.js":"50","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Tipsters.js":"51","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\layout\\JackpotLayout.js":"52","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\CMSPages.js":"53","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\LiveEventDetails.js":"54","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\LiveBetting.js":"55","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Redux\\actions\\index.js":"56","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Account\\BetList.js":"57","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Account\\ChangePassword.js":"58","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Account\\TransactionList.js":"59","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Account\\PersonalData.js":"60","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Account\\BonusTransactionList.js":"61","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Account\\Bonuses.js":"62","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Account\\Deposit.js":"63","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\layout\\Others.js":"64","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\layout\\partials\\Header.js":"65","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\layout\\partials\\Footer.js":"66","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\layout\\partials\\RightSide.js":"67","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\layout\\partials\\LeftSide.js":"68","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\Modals\\ConfirmBonusWithdrawal.js":"69","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\Loader.js":"70","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\FixturesList.js":"71","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\Modals\\TipsterBet.js":"72","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\LiveOdd.js":"73","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Utils\\constants.js":"74","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\Tablet.js":"75","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Redux\\actions\\sports.js":"76","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Redux\\actions\\coupon.js":"77","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\Pagination.js":"78","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\BetListFilter.js":"79","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\UpcomingEvents.js":"80","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\TopBets.js":"81","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Account\\SportsFinancials.js":"82","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Account\\JackpotBetList.js":"83","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Account\\AgencyList.js":"84","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Account\\TransferFunds.js":"85","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Account\\NewUser.js":"86","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Account\\BetDetail.js":"87","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Account\\Withdrawal.js":"88","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\UserMenu.js":"89","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Utils\\laravel-echo.js":"90","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\CouponCheck.js":"91","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\SmartBet.js":"92","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\BetSlip.js":"93","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\QuickBet.js":"94","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Utils\\CouponCalculation.js":"95","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\TransferForm.js":"96","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\UserForm.js":"97","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\Coupon\\CurrentBetslip.js":"98","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Utils\\Combination.js":"99","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Utils\\CalculatedCoupon.js":"100","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Utils\\CalculatedGroup.js":"101","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Utils\\SlotKey.js":"102","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\Coupon\\BetTypes\\Combined.js":"103","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\Coupon\\BetTypes\\Split.js":"104","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\Coupon\\BetTypes\\Multiple.js":"105","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\PoolFixtures.js":"106","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\WeeklyCoupon.js":"107"},{"size":1069,"mtime":1636962656005,"results":"108","hashOfConfig":"109"},{"size":375,"mtime":1636962656007,"results":"110","hashOfConfig":"109"},{"size":2499,"mtime":1636962655688,"results":"111","hashOfConfig":"109"},{"size":89,"mtime":1636962655871,"results":"112","hashOfConfig":"109"},{"size":732,"mtime":1636962655859,"results":"113","hashOfConfig":"109"},{"size":2021,"mtime":1653668109599,"results":"114","hashOfConfig":"109"},{"size":7047,"mtime":1653665101940,"results":"115","hashOfConfig":"109"},{"size":4253,"mtime":1636962655865,"results":"116","hashOfConfig":"109"},{"size":4280,"mtime":1636962655948,"results":"117","hashOfConfig":"109"},{"size":4713,"mtime":1636962655947,"results":"118","hashOfConfig":"109"},{"size":14677,"mtime":1653690592987,"results":"119","hashOfConfig":"109"},{"size":14514,"mtime":1649779855832,"results":"120","hashOfConfig":"109"},{"size":4377,"mtime":1636962655951,"results":"121","hashOfConfig":"109"},{"size":105,"mtime":1636962655888,"results":"122","hashOfConfig":"109"},{"size":422,"mtime":1636962655853,"results":"123","hashOfConfig":"109"},{"size":121,"mtime":1636962655976,"results":"124","hashOfConfig":"109"},{"size":1905,"mtime":1653689518719,"results":"125","hashOfConfig":"109"},{"size":18408,"mtime":1636962655971,"results":"126","hashOfConfig":"109"},{"size":473,"mtime":1636962655863,"results":"127","hashOfConfig":"109"},{"size":2562,"mtime":1636962655862,"results":"128","hashOfConfig":"109"},{"size":2009,"mtime":1642738718207,"results":"129","hashOfConfig":"109"},{"size":6359,"mtime":1636962655989,"results":"130","hashOfConfig":"109"},{"size":2580,"mtime":1636962655994,"results":"131","hashOfConfig":"109"},{"size":1467,"mtime":1636962655990,"results":"132","hashOfConfig":"109"},{"size":2122,"mtime":1636962655992,"results":"133","hashOfConfig":"109"},{"size":15261,"mtime":1636962655916,"results":"134","hashOfConfig":"109"},{"size":7490,"mtime":1636962655915,"results":"135","hashOfConfig":"109"},{"size":4593,"mtime":1636962655918,"results":"136","hashOfConfig":"109"},{"size":1456,"mtime":1636962655923,"results":"137","hashOfConfig":"109"},{"size":2270,"mtime":1636962655920,"results":"138","hashOfConfig":"109"},{"size":10696,"mtime":1636962655919,"results":"139","hashOfConfig":"109"},{"size":1595,"mtime":1636962655921,"results":"140","hashOfConfig":"109"},{"size":5331,"mtime":1645193184036,"results":"141","hashOfConfig":"109"},{"size":8293,"mtime":1653690429778,"results":"142","hashOfConfig":"109"},{"size":648,"mtime":1636962655927,"results":"143","hashOfConfig":"109"},{"size":1613,"mtime":1636962655880,"results":"144","hashOfConfig":"109"},{"size":681,"mtime":1636962655879,"results":"145","hashOfConfig":"109"},{"size":1774,"mtime":1636962655857,"results":"146","hashOfConfig":"109"},{"size":3206,"mtime":1636962655856,"results":"147","hashOfConfig":"109"},{"size":4170,"mtime":1653664875403,"results":"148","hashOfConfig":"109"},{"size":978,"mtime":1636962655855,"results":"149","hashOfConfig":"109"},{"size":6324,"mtime":1636962655967,"results":"150","hashOfConfig":"109"},{"size":1346,"mtime":1636962655969,"results":"151","hashOfConfig":"109"},{"size":6142,"mtime":1636962655977,"results":"152","hashOfConfig":"109"},{"size":8046,"mtime":1636962655968,"results":"153","hashOfConfig":"109"},{"size":4013,"mtime":1636962655980,"results":"154","hashOfConfig":"109"},{"size":6497,"mtime":1636962655986,"results":"155","hashOfConfig":"109"},{"size":1653,"mtime":1636962655981,"results":"156","hashOfConfig":"109"},{"size":5401,"mtime":1636962655982,"results":"157","hashOfConfig":"109"},{"size":12499,"mtime":1653663986279,"results":"158","hashOfConfig":"109"},{"size":4566,"mtime":1636962655984,"results":"159","hashOfConfig":"109"},{"size":472,"mtime":1636962655993,"results":"160","hashOfConfig":"109"},{"size":484,"mtime":1636962655924,"results":"161","hashOfConfig":"109"},{"size":7914,"mtime":1636962655974,"results":"162","hashOfConfig":"109"},{"size":11607,"mtime":1636962655972,"results":"163","hashOfConfig":"109"},{"size":54,"mtime":1636962655848,"results":"164","hashOfConfig":"109"},{"size":12650,"mtime":1636962655894,"results":"165","hashOfConfig":"109"},{"size":8773,"mtime":1636962655899,"results":"166","hashOfConfig":"109"},{"size":28998,"mtime":1636962655910,"results":"167","hashOfConfig":"109"},{"size":25958,"mtime":1636962655907,"results":"168","hashOfConfig":"109"},{"size":29013,"mtime":1636962655896,"results":"169","hashOfConfig":"109"},{"size":9471,"mtime":1636962655897,"results":"170","hashOfConfig":"109"},{"size":13720,"mtime":1636962655901,"results":"171","hashOfConfig":"109"},{"size":311,"mtime":1636962655996,"results":"172","hashOfConfig":"109"},{"size":12613,"mtime":1653666450095,"results":"173","hashOfConfig":"109"},{"size":4414,"mtime":1636962655998,"results":"174","hashOfConfig":"109"},{"size":2490,"mtime":1636962656002,"results":"175","hashOfConfig":"109"},{"size":8138,"mtime":1636962656001,"results":"176","hashOfConfig":"109"},{"size":2804,"mtime":1636962655944,"results":"177","hashOfConfig":"109"},{"size":208,"mtime":1636962655941,"results":"178","hashOfConfig":"109"},{"size":6506,"mtime":1636962655939,"results":"179","hashOfConfig":"109"},{"size":5528,"mtime":1636962655950,"results":"180","hashOfConfig":"109"},{"size":2759,"mtime":1636962655940,"results":"181","hashOfConfig":"109"},{"size":11988,"mtime":1636962655883,"results":"182","hashOfConfig":"109"},{"size":5184,"mtime":1636962655958,"results":"183","hashOfConfig":"109"},{"size":2463,"mtime":1636962655849,"results":"184","hashOfConfig":"109"},{"size":41825,"mtime":1653665199531,"results":"185","hashOfConfig":"109"},{"size":1741,"mtime":1636962655954,"results":"186","hashOfConfig":"109"},{"size":16564,"mtime":1636962655926,"results":"187","hashOfConfig":"109"},{"size":5641,"mtime":1636962655963,"results":"188","hashOfConfig":"109"},{"size":6885,"mtime":1636962655960,"results":"189","hashOfConfig":"109"},{"size":21175,"mtime":1636962655908,"results":"190","hashOfConfig":"109"},{"size":12587,"mtime":1636962655904,"results":"191","hashOfConfig":"109"},{"size":10354,"mtime":1636962655891,"results":"192","hashOfConfig":"109"},{"size":6998,"mtime":1636962655911,"results":"193","hashOfConfig":"109"},{"size":4849,"mtime":1636962655905,"results":"194","hashOfConfig":"109"},{"size":30308,"mtime":1637035534046,"results":"195","hashOfConfig":"109"},{"size":8129,"mtime":1636962655912,"results":"196","hashOfConfig":"109"},{"size":3982,"mtime":1636962655965,"results":"197","hashOfConfig":"109"},{"size":648,"mtime":1642733436672,"results":"198","hashOfConfig":"109"},{"size":1865,"mtime":1636962655937,"results":"199","hashOfConfig":"109"},{"size":4100,"mtime":1636962655957,"results":"200","hashOfConfig":"109"},{"size":3285,"mtime":1636962655930,"results":"201","hashOfConfig":"109"},{"size":3510,"mtime":1636962655955,"results":"202","hashOfConfig":"109"},{"size":26600,"mtime":1636962655878,"results":"203","hashOfConfig":"109"},{"size":6551,"mtime":1636962655962,"results":"204","hashOfConfig":"109"},{"size":10380,"mtime":1636962655964,"results":"205","hashOfConfig":"109"},{"size":13875,"mtime":1636962655936,"results":"206","hashOfConfig":"109"},{"size":3419,"mtime":1636962655876,"results":"207","hashOfConfig":"109"},{"size":1728,"mtime":1636962655873,"results":"208","hashOfConfig":"109"},{"size":1736,"mtime":1636962655875,"results":"209","hashOfConfig":"109"},{"size":301,"mtime":1636962655881,"results":"210","hashOfConfig":"109"},{"size":5864,"mtime":1637035327768,"results":"211","hashOfConfig":"109"},{"size":4571,"mtime":1636962655935,"results":"212","hashOfConfig":"109"},{"size":1497,"mtime":1636962655933,"results":"213","hashOfConfig":"109"},{"size":16371,"mtime":1653689132006,"results":"214","hashOfConfig":"109"},{"size":13992,"mtime":1653690260167,"results":"215","hashOfConfig":"109"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},"mc8ays",{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"218"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"218"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"241","messages":"242","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"218"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"218"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"218"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"218"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"218"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"218"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"218"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"218"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"218"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"218"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"218"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"218"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"218"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"300","messages":"301","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"218"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"218"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"218"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"218"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"218"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"218"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"218"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"218"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"218"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"341","messages":"342","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"218"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"218"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"218"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"218"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"218"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"218"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"218"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"218"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"218"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"218"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"381","messages":"382","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"218"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"218"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"218"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"218"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"218"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"218"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"218"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"218"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"413","messages":"414","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"218"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"218"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"218"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"218"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"218"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"218"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"218"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"218"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439","usedDeprecatedRules":"218"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"442","usedDeprecatedRules":"218"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"445","usedDeprecatedRules":"218"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"218"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"218"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"218"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"218"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"218"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"465","usedDeprecatedRules":"218"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"472","usedDeprecatedRules":"218"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"218"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"484","usedDeprecatedRules":"218"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"487","usedDeprecatedRules":"218"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"490","usedDeprecatedRules":"218"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"493","messages":"494","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\index.js",[],["495","496"],"C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\App.js",[],"C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Services\\history.js",[],"C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Redux\\store.js",[],"C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Redux\\types.js",[],"C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Services\\apis.js",[],"C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Routes\\Routes.js",["497","498","499"],"import React, { Fragment } from \"react\";\r\n\r\n/**\r\n * packages\r\n */\r\nimport {BrowserRouter as Router, Switch, Route, Redirect} from \"react-router-dom\";\r\nimport { useIdleTimer } from 'react-idle-timer'\r\n\r\nimport NotFound from \"../Views/NotFound\";\r\n\r\nimport SportRoutes from \"./SportRoutes\";\r\nimport Main from \"../Views/layout/Main\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useEffect} from \"react\";\r\nimport {authDetails, sendLogout} from \"../Services/apis\";\r\nimport {REMOVE_USER_DATA, UPDATE_USER_DATA} from \"../Redux/types\";\r\nimport Jackpot from \"../Views/Jackpot\";\r\nimport Register from \"../Views/Auth/Register\";\r\nimport RecoverPassword from \"../Views/Auth/RecoverPassword\";\r\nimport Account from \"../Views/layout/Account\";\r\nimport AccountRoutes from \"./AccountRoutes\";\r\nimport ResetPassword from \"../Views/Auth/ResetPassword\";\r\nimport InPlay from \"../Views/layout/InPlay\";\r\nimport LiveRoutes from \"./LiveRoutes\";\r\nimport BecomeAnAgent from \"../Views/layout/BecomeAnAgent\";\r\nimport AgentRegister from \"../Views/BecomeAnAgent/AgentRegister\";\r\nimport Index from \"../Views/BecomeAnAgent/Index\";\r\nimport Benefits from \"../Views/BecomeAnAgent/Benefits\";\r\nimport EasySteps from \"../Views/BecomeAnAgent/EasySteps\";\r\nimport Virtual from \"../Views/Virtual\";\r\n// import LiveRoutes from \"./LiveRoutes\";\r\n// import Live from \"../Views/Layout/Live\";\r\n\r\n\r\nexport default function Routes() {\r\n  const {isAuthenticated} = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOnIdle = event => {\r\n    if(isAuthenticated) {\r\n      sendLogout().then(res => {\r\n        dispatch({type: REMOVE_USER_DATA});\r\n        document.body.classList.add(\"Anonymous\");\r\n        document.body.classList.remove(\"Logged\");\r\n      }).catch (err => {\r\n        dispatch({type: REMOVE_USER_DATA});\r\n        document.body.classList.add(\"Anonymous\");\r\n        document.body.classList.remove(\"Logged\");\r\n      });\r\n    }\r\n  }\r\n\r\n  const handleOnActive = event => {\r\n    // console.log('user is active', event)\r\n    // console.log('time remaining', getRemainingTime())\r\n  }\r\n\r\n  const handleOnAction = (e) => {\r\n    // console.log('user did something', e)\r\n  }\r\n\r\n  const { getRemainingTime, getLastActiveTime } = useIdleTimer({\r\n    timeout: 1000 * 60 * 30,\r\n    onIdle: handleOnIdle,\r\n    onActive: handleOnActive,\r\n    onAction: handleOnAction,\r\n    debounce: 500\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      authDetails().then(resp => {\r\n        if(resp.user) {\r\n          const user = resp.user;\r\n          dispatch({\r\n            type: UPDATE_USER_DATA,\r\n            payload: user\r\n          });\r\n        }\r\n      })\r\n    }\r\n  }, [isAuthenticated]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Router>\r\n        <Switch>\r\n          <Redirect from=\"/\" to=\"/Sport/Default\" exact />\r\n          <Route path=\"/Auth/Register\" component={Register} />\r\n          <Route path=\"/Auth/RecoverPassword\" component={RecoverPassword} />\r\n          <Route path=\"/Auth/ResetPassword\" component={ResetPassword} />\r\n          <Route path=\"/Sport/Jackpot\" component={Jackpot} />\r\n          <Route path=\"/Sport/Virtual\" component={Virtual} />\r\n          <Route path=\"/Sport/:path?/:extra?\" exact>\r\n            <Main>\r\n              <SportRoutes />\r\n            </Main>\r\n          </Route>\r\n          <Route path=\"/Live/:path?/:extra?\" exact>\r\n            <InPlay>\r\n              <LiveRoutes />\r\n            </InPlay>\r\n          </Route>\r\n          <Route path=\"/Account/:path?/:extra?\" exact>\r\n            <Account>\r\n              <AccountRoutes />\r\n            </Account>\r\n          </Route>\r\n          <Route x=\"/BecomeAnAgent/:path?/:extra?\" exact>\r\n            <BecomeAnAgent>\r\n              <Switch>\r\n                <Route exact path=\"/BecomeAnAgent/register\" component={AgentRegister} />\r\n                <Route exact path=\"/BecomeAnAgent/benefits\" component={Benefits} />\r\n                <Route exact path=\"/BecomeAnAgent/how-to-start\" component={EasySteps} />\r\n                <Route exact path=\"/BecomeAnAgent\" component={Index} />\r\n              </Switch>\r\n            </BecomeAnAgent>\r\n          </Route>\r\n          <Route path={[\"/404\", \"*\"]} component={NotFound} />\r\n        </Switch>\r\n      </Router>\r\n    </Fragment>\r\n  );\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\Modals\\LoginModal.js",[],"C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\Modals\\DepositModal.js",["500","501"],"import React, {useState} from 'react';\r\nimport {SHOW_DEPOSIT_MODAL} from \"../../../Redux/types\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {sendDeposit} from \"../../../Services/apis\";\r\n\r\nexport default function DepositModal({dispatch}) {\r\n    const {SportsbookGlobalVariable} = useSelector((state) => state.sportsBook);\r\n    const [amount, setAmount] = useState('');\r\n    const [sending, setSending] = useState(false);\r\n    const [sent, setSent] = useState(false);\r\n    const [errMsg, setErrMsg] = useState(false);\r\n\r\n    const updateAmount = (value) => {\r\n        if (value === 0) {\r\n            setAmount(0);\r\n            return;\r\n        }\r\n\r\n        let currentAmount = amount;\r\n        if (currentAmount === ''){\r\n            currentAmount = 0;\r\n        }\r\n        const newAmount = currentAmount + value\r\n        setAmount(newAmount);\r\n    }\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        setSending(true);\r\n        if(amount < SportsbookGlobalVariable.MinDeposit) {\r\n            setErrMsg('The minimum deposit amount is ' + SportsbookGlobalVariable.MinDeposit);\r\n            setSending(false);\r\n            return;\r\n        }\r\n\r\n        sendDeposit({amount}).then(res => {\r\n            setSending(false);\r\n            if (res.success) {\r\n                setSent(true);\r\n            } else {\r\n                setErrMsg(res.message || res.error_message);\r\n            }\r\n            // console.log(res);\r\n        }).catch(err => {\r\n            setSending(false);\r\n            setErrMsg('Something went wrong ' + err.message);\r\n\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-popup-wrapper\" id=\"popupLogin\">\r\n            <div className=\"login-popup\">\r\n                <div className=\"close-coupon-popup\" onClick={() => dispatch({type: SHOW_DEPOSIT_MODAL})}>\r\n                    <i className=\"fa fa-times\" aria-hidden=\"true\" /></div>\r\n                <div className=\"login-content\">\r\n                    <div className=\"title\">\r\n                        <img src=\"/img/check-icon.png\" alt=\"\"\r\n                             className=\"title-icon\" />\r\n                        <span>Deposit</span>\r\n                    </div>\r\n                    {sent ?\r\n                        <div className=\"alert-bar\">\r\n                            <p>Deposit request has been sent. Please follow the instructions on your mobile device.</p>\r\n                        </div>\r\n                        :\r\n                        <form onSubmit={submit}>\r\n                            {errMsg && <div className=\"row\">\r\n                                <div className=\"info-error\">{errMsg}</div>\r\n                            </div>}\r\n                            <div className=\"row\">\r\n                                <div className=\"label\">Amount</div>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    name=\"amount\"\r\n                                    value={amount}\r\n                                    placeholder=\"0.00\"\r\n                                    autoComplete=\"off\"\r\n                                    onChange={(e) => setAmount(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"quickstake\">\r\n                                    <div className=\"quickstake__item\" onClick={() => updateAmount(0)}> Clear</div>\r\n                                    <div className=\"quickstake__item\" onClick={() => updateAmount(50)}> +50</div>\r\n                                    <div className=\"quickstake__item\" onClick={() => updateAmount(100)}> +100</div>\r\n                                    <div className=\"quickstake__item\" onClick={() => updateAmount(200)}> +200</div>\r\n                                    <div className=\"quickstake__item\" onClick={() => updateAmount(500)}> +500</div>\r\n                                    <div className=\"quickstake__item\" onClick={() => updateAmount(1000)}> +1000</div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"button-holder\">\r\n                                <input type=\"submit\" value={sending ? 'Sending Request...' : 'Deposit'} disabled={sending}/>\r\n\r\n                                <a href=\"javascript:;\" onClick={() => dispatch({type: SHOW_DEPOSIT_MODAL})}>\r\n                                    <div className=\"register-button\">Cancel</div>\r\n                                </a>\r\n                            </div>\r\n                        </form>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\Modals\\ConfirmSlip.js",["502","503","504","505"],"C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\Modals\\ViewCoupon.js",["506","507"],"import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {SET_BETSLIP_DATA} from \"../../../Redux/types\";\r\nimport {formatBetslipId, formatDate, formatNumber} from \"../../../Utils/helpers\";\r\nimport BetListOutcome from \"../BetListOutcome\";\r\nimport {reloadCoupon} from \"../../../Redux/actions\";\r\n\r\nexport default function ViewCoupon({betslip}) {\r\n    const dispatch = useDispatch();\r\n    const {loading} = useSelector(state => state.login)\r\n    const {SportsbookGlobalVariable} = useSelector((state) => state.sportsBook);\r\n\r\n    return (\r\n        <>\r\n            <div id=\"popupCC\" >\r\n                <div className=\"RiquadroPopRiserva\">\r\n                    <div className=\"RiquadroPopRiserva\">\r\n                        <div className=\"TopSX\">\r\n                            <div className=\"TopDX\"></div>\r\n                        </div>\r\n                        <div className=\"Cnt\">\r\n                            <div>\r\n                                <div className=\"divTitle\">\r\n                                    <h3>Coupon Check</h3>\r\n                                    <a id=\"popupCCClose\" onClick={() => dispatch({type: SET_BETSLIP_DATA, payload: null})}>\r\n                                        <img src=\"/img/close_black_ico.gif\" id=\"hl_w_PC_ctl10_imgClose\" />\r\n                                    </a>\r\n                                </div>\r\n                                <div className=\"bodyMainPop couponcheckdetailspopup\">\r\n                                    <div className=\"spacer9\" />\r\n                                    <table cellSpacing=\"0\" cellPadding=\"0\" width=\"100%\" align=\"center\" border=\"0\">\r\n                                        <tbody>\r\n                                        <tr>\r\n                                            <td className=\"SectionTitle\" colSpan=\"2\">\r\n                                                Betslip\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td className=\"cellaSx\">Betslip ID</td>\r\n                                            <td className=\"cellaDx\" style={{textAlign: 'right'}}>{betslip?.tipster_id ? formatBetslipId(betslip?.betslip_id) : betslip?.betslip_id}</td>\r\n                                        </tr>\r\n\r\n                                        <tr>\r\n                                            <td className=\"cellaSx\">Date</td>\r\n                                            <td className=\"cellaDx\" style={{textAlign: 'right'}}>{formatDate(betslip?.created_at, 'DD/MM/YYYY HH:mm:ss')}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td className=\"cellaSx\">Bet Type</td>\r\n                                            <td className=\"cellaDx\" style={{textAlign: 'right'}}>{betslip?.event_type === 'jackpot' ? 'Jackpot' : betslip?.bet_type_desc}</td>\r\n                                        </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                    <div className=\"spacer9\"></div>\r\n\r\n                                    <table id=\"popUp_PC_tbl_DettagliScommessa\" cellPadding=\"0\" cellSpacing=\"0\" width=\"100%\" align=\"center\"\r\n                                           className=\"safe\">\r\n                                        <tbody>\r\n                                        <tr>\r\n                                            <td className=\"SectionTitle\" colSpan=\"2\">\r\n                                                Detail\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td className=\"cellaSx\">\r\n                                                <span className=\"detScoIG\">Stakes</span>\r\n                                            </td>\r\n                                            <td className=\"cellaDx\" style={{textAlign: 'right'}}>\r\n                                                <span className=\"detScoIG\">{SportsbookGlobalVariable.Currency}&nbsp;{formatNumber(betslip?.stake)}</span>\r\n                                            </td>\r\n                                        </tr>\r\n                                        {betslip?.bet_type !== 'Jackpot' &&\r\n                                        <tr>\r\n                                            <td className=\"cellaSx\">\r\n                                                Bonus\r\n                                            </td>\r\n                                            <td className=\"cellaDx\" style={{textAlign: 'right'}}>\r\n                                                {SportsbookGlobalVariable.Currency}&nbsp;\r\n                                                {\r\n                                                    {\r\n                                                        'Split': `${formatNumber(betslip?.min_bonus)} / ${formatNumber(betslip?.bonus)}`,\r\n                                                        'Combo': `${formatNumber(betslip?.min_bonus)} / ${formatNumber(betslip?.bonus)}`\r\n                                                    }[betslip?.bet_type] || formatNumber(betslip?.bonus)\r\n                                                }\r\n                                            </td>\r\n                                        </tr>}\r\n                                        <tr>\r\n                                            <td className=\"cellaSx\">\r\n                                                <span className=\"detScoVP\">Winnings</span>\r\n                                            </td>\r\n                                            <td className=\"cellaDx\" style={{textAlign: 'right'}}>\r\n                                                <span className=\"detScoVP\">\r\n                                                    {SportsbookGlobalVariable.Currency}&nbsp;\r\n                                                    {betslip?.bet_type === 'Jackpot' && formatNumber(betslip?.winnings) }\r\n\r\n                                                    {\r\n                                                        betslip?.status === 0 ? (\r\n                                                            {\r\n                                                                'Split': `${formatNumber(betslip?.min_winnings)} / ${formatNumber(betslip?.pot_winnings)}`,\r\n                                                                'Combo': `${formatNumber(betslip?.min_winnings)} / ${formatNumber(betslip?.pot_winnings)}`\r\n                                                            }[betslip?.bet_type] || formatNumber(betslip?.pot_winnings)\r\n                                                        ) : formatNumber(betslip?.winnings)\r\n                                                    }\r\n                                                </span>\r\n                                            </td>\r\n                                        </tr>\r\n                                        {betslip?.bet_type !== 'Jackpot' &&\r\n                                        <tr id=\"ac_w_PC_PC_trQuota\">\r\n                                            <td className=\"cellaSx\"><span className=\"detScoOdd\">Odd</span></td>\r\n                                            <td className=\"cellaDx\" style={{textAlign: 'right'}}>\r\n                                                <span className=\"detScoOdd\">\r\n                                                    {\r\n                                                        {\r\n                                                            'Split': `${formatNumber(betslip?.min_oods)} / ${formatNumber(betslip?.odds)}`,\r\n                                                            'Combo': `${formatNumber(betslip?.min_odds)} / ${formatNumber(betslip?.odds)}`\r\n                                                        }[betslip?.bet_type] || formatNumber(betslip?.odds)\r\n                                                    }\r\n                                                </span>\r\n                                            </td>\r\n                                        </tr>\r\n                                        }\r\n\r\n                                        {betslip?.cashout > 0 && betslip.bet_type !== 'Jackpot' && betslip?.status === 0 &&\r\n                                        <tr>\r\n                                            <td className=\"cellaSx\">\r\n                                                <span className=\"detCashOut\">Cashout</span>\r\n                                            </td>\r\n                                            <td className=\"cellaDx txt-darkgreen \" style={{textAlign: 'right', fontWeight: 'bold'}}>\r\n                                                <span>{formatNumber(betslip?.cashout)}</span>\r\n                                            </td>\r\n                                        </tr>}\r\n                                        </tbody>\r\n                                    </table>\r\n\r\n                                    <div className=\"spacer9\" />\r\n\r\n                                    <table cellSpacing=\"0\" cellPadding=\"0\" width=\"100%\" align=\"center\" border=\"0\">\r\n                                        <tbody>\r\n                                        <tr>\r\n                                            <td className=\"SectionTitle\" colSpan=\"2\">\r\n                                                Event List\r\n                                            </td>\r\n                                        </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n\r\n                                    <div>\r\n                                        <table className=\"dgStyle\" cellSpacing=\"0\" align=\"Center\" border=\"0\"\r\n                                               style={{\r\n                                                   borderWidth: '0px',\r\n                                                   borderStyle: 'None',\r\n                                                   width: '100%',\r\n                                                   borderCollapse: 'collapse'\r\n                                               }}>\r\n                                            <tbody>\r\n                                            <tr className=\"dgSubHdrStyle\">\r\n                                                <th scope=\"col\">Event</th>\r\n                                                <th scope=\"col\">Start Date</th>\r\n                                                <th scope=\"col\">Quota Class</th>\r\n                                                <th scope=\"col\">Type</th>\r\n                                                <th scope=\"col\">Odds</th>\r\n                                                <th scope=\"col\">HT Score</th>\r\n                                                <th scope=\"col\">Result</th>\r\n                                                <th scope=\"col\">Outcome</th>\r\n                                            </tr>\r\n                                            {betslip?.selections.map((selection, i) =>\r\n                                                <tr className=\"dgItemStyle\" key={selection.provider_id}>\r\n                                                    <td>\r\n                                                        {selection.event}\r\n                                                    </td>\r\n                                                    <td align=\"center\">{formatDate(selection.start_date, 'DD/MM/YYYY HH:mm')}</td>\r\n                                                    <td align=\"center\">\r\n                                                        {betslip?.tipster_id ? '***' : selection?.market_name}\r\n                                                    </td>\r\n                                                    <td align=\"center\">{betslip?.tipster_id ? '**' : selection?.odd_name}</td>\r\n                                                    <td align=\"center\">{selection.odds}</td>\r\n                                                    <td className=\"BetDetailRisultato\" align=\"center\" style={{whiteSpace:'nowrap'}}>\r\n                                                        <span title=\"Final Result\">{selection?.ht_score}</span>\r\n                                                    </td>\r\n                                                    <td className=\"BetDetailRisultato\" align=\"center\" style={{whiteSpace:'nowrap'}}>\r\n                                                        <span title=\"Final Result\">{selection?.score}</span>\r\n                                                    </td>\r\n                                                    <td align=\"center\">\r\n                                                        <BetListOutcome outcome={selection.status} />\r\n                                                    </td>\r\n                                                </tr>\r\n                                            )}\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n\r\n                                    <div className=\"divCheckCpnDisclaimer\">\r\n                                        Bet correctly registered on {process.env.REACT_APP_NAME} Database\r\n                                    </div>\r\n\r\n                                    <div className=\"divCheckCpnRebet\">\r\n                                        {betslip?.event_type !== 'jackpot' && !betslip?.tipster_id &&\r\n                                        <input type=\"button\" name=\"popUp$PC$btnRebet\"\r\n                                               value={loading ? 'Loading Games...' : 'Rebet'} id=\"popUp_PC_btnRebet\"\r\n                                               onClick={() => dispatch(reloadCoupon(betslip?.betslip_id, 'rebet'))}\r\n                                               className=\"button\"\r\n                                        />\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"BtmSX\">\r\n                            <div className=\"BtmDX\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div id=\"backgroundPopupCC\" onClick={() => dispatch({type: SET_BETSLIP_DATA, payload:null})} />\r\n        </>\r\n    );\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\Modals\\TipsterForm.js",["508"],"import React, {useState} from 'react';\r\nimport { SHOW_TIPSTER_MODAL} from \"../../../Redux/types\";\r\nimport {saveTipsterBet} from \"../../../Services/apis\";\r\nimport {toast} from \"react-toastify\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst percentages = [\r\n    { text: '10%', value: 10 },\r\n    { text: '15%', value: 15 },\r\n    { text: '20%', value: 20 },\r\n    { text: '25%', value: 25 },\r\n    { text: '30%', value: 30 },\r\n];\r\n\r\nexport default function TipsterForm({betslip, dispatch}) {\r\n    const [tipsterForm, setTipsterForm] = useState({\r\n        percentage: 10,\r\n        minimum_stake: '',\r\n        betslip_id: betslip?.betslip_id,\r\n    });\r\n    const [errMsg, setErrMsg] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const {SportsbookGlobalVariable} = useSelector((state) => state.sportsBook);\r\n\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault();\r\n        if (tipsterForm.minimum_stake < parseFloat(SportsbookGlobalVariable.MinBetStake)) {\r\n            setErrMsg('Minimum allowed stake amount is 50');\r\n            return;\r\n        }\r\n        setLoading(true);\r\n\r\n        saveTipsterBet(tipsterForm).then(res => {\r\n            setLoading(false);\r\n            if (res.success) {\r\n                toast.success('Betslip has been added to your tipster account');\r\n                dispatch({type: SHOW_TIPSTER_MODAL});\r\n            }\r\n        }).catch(err => {\r\n            setLoading(false);\r\n            setErrMsg('Something went wrong ' + err.message);\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-popup-wrapper\" id=\"popupLogin\">\r\n            <div className=\"login-popup\">\r\n                <div className=\"close-coupon-popup\" onClick={() => dispatch({type: SHOW_TIPSTER_MODAL})}>\r\n                    <i className=\"fa fa-times\" aria-hidden=\"true\" />\r\n                </div>\r\n                <div className=\"login-content\">\r\n                    <div className=\"title\">\r\n                        <img src=\"/img/check-icon.png\" alt=\"\"\r\n                             className=\"title-icon\" />\r\n                        <span>Add betslip to tipster</span>\r\n                    </div>\r\n                    <div className=\"alert-bar\">\r\n                        <p>Becoming a Tipster allows you earn extra cash from others that play your tickets.<br/>\r\n                        You earn by making any of your betslip public, set the percentage on return you want from each person that plays your pick. <br/>\r\n                        You only earn if you betslip is a winning betslip.</p>\r\n                    </div>\r\n                    <form onSubmit={submitForm}>\r\n                        {errMsg && <div className=\"row\">\r\n                            <div className=\"info-error\">{errMsg}</div>\r\n                        </div>}\r\n                        <div className=\"row\">\r\n                            <div className=\"label\">Set the percentage you want from winnings</div>\r\n                            <select\r\n                                onChange={(e) => setTipsterForm({...tipsterForm, percentage: e.target.value})}\r\n                            >\r\n                                {percentages.map(row =>\r\n                                    <option value={row.value}>{row.text}</option>\r\n                                )}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"label\">Set the minimum stake allowed for this pick</div>\r\n                            <input\r\n                                type=\"number\"\r\n                                autoComplete=\"off\"\r\n                                value={tipsterForm.minimum_stake}\r\n                                onChange={(e) => setTipsterForm({...tipsterForm, minimum_stake: e.target.value})}\r\n                            />\r\n                        </div>\r\n                        <div className=\"button-holder\">\r\n                            <a onClick={() => dispatch({type: SHOW_TIPSTER_MODAL})}>\r\n                                <div className=\"register-button\">Cancel</div>\r\n                            </a>\r\n                            <input type=\"submit\" value={loading ? 'Saving...' : 'Submit' } />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Utils\\index.js",[],"C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Redux\\reducers\\index.js",[],"C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\NotFound.js",[],"C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Routes\\SportRoutes.js",[],"C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Jackpot.js",["509","510","511","512","513","514","515"],"import React, {useCallback, useEffect, useState} from 'react';\r\n\r\nimport JackpotLayout from \"./layout/JackpotLayout\";\r\nimport {getJackpots, getSplitProps} from \"../Services/apis\";\r\nimport {calculateExclusionPeriod, formatDate, formatNumber, isSelected} from \"../Utils/helpers\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {checkBetType, createID, groupSelections, groupTournament} from \"../Utils/couponHelpers\";\r\nimport {\r\n    LOADING,\r\n    SHOW_LOGIN_MODAL,\r\n    UPDATE_USER_BALANCE\r\n} from \"../Redux/types\";\r\nimport {toast} from \"react-toastify\";\r\nimport {Http} from \"../Utils\";\r\n\r\nexport default function Jackpot() {\r\n    const {user} = useSelector((state) => state.auth);\r\n    const [jackpots, setJackpots] = useState(null);\r\n    const [showConfirm, setShowConfirm] = useState(false);\r\n    const [isSubmitting, setSubmitting] = useState(false);\r\n    const [coupon, setCoupon] = useState({\r\n        selections: [],\r\n        totalOdds: 1,\r\n        maxBonus: 0,\r\n        minBonus: 0,\r\n        maxWin: 0,\r\n        minWin: 0,\r\n        stake: 0,\r\n        totalStake: 0,\r\n        minOdds: 1,\r\n        maxOdds: 1,\r\n        event_type: 'jackpot',\r\n        channel: 'website',\r\n        autopick: 0,\r\n        jackpot_id: null\r\n    });\r\n    const [activeJackpot, setActiveJackpot] = useState(null);\r\n    const dispatch = useDispatch();\r\n\r\n    const init = useCallback( () => {\r\n        dispatch({type: LOADING})\r\n        getJackpots().then(res => {\r\n            dispatch({type: LOADING});\r\n            // console.log(res)\r\n            if (res.length > 0) {\r\n                setJackpots(res);\r\n                setActiveJackpot(res[0]);\r\n                setCoupon({\r\n                    ...coupon,\r\n                    stake: res[0].stake,\r\n                    totalStake: res[0].stake,\r\n                    maxWin: res[0].amount,\r\n                    jackpot_id: res[0].id\r\n                })\r\n            }\r\n        })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        init();\r\n    }, [init]);\r\n\r\n    useEffect(() => {\r\n        if (coupon.autopick > 0) {\r\n            // loop through fixtures to make random selection\r\n            activeJackpot.fixtures.forEach(fixture => {\r\n                const num = Math.floor(Math.random() * (3 - 1 + 1)) + 1;\r\n                fixture.market.selections.forEach(selection => {\r\n                    if (selection.id === num) {\r\n                        addToJackpot(fixture, selection, createID(fixture.provider_id, fixture.market.market_id, selection.name, selection.id))\r\n                    }\r\n                })\r\n            });\r\n        }\r\n    }, [coupon.autopick]);\r\n\r\n    const proceed = () => {\r\n        if (coupon.selections.length && groupSelections(coupon.selections).length === activeJackpot.fixtures.length) {\r\n            setShowConfirm(true);\r\n        } else {\r\n            toast.error('You must make at least one selection from each game');\r\n        }\r\n    }\r\n\r\n    const addToJackpot = async (fixture, selection, ele_id) => {\r\n        const data = {\r\n            provider_id: fixture.provider_id,\r\n            event_id: fixture.event_id,\r\n            event_name: fixture.event_name,\r\n            market_id: fixture.market.market_id,\r\n            market_name: fixture.market.market_name,\r\n            oddname: selection.name,\r\n            odd_id: selection.id,\r\n            odds: selection.odds,\r\n            element_id: ele_id,\r\n            start_date: fixture.schedule,\r\n            tournament: fixture.sport_tournament_name,\r\n            category: fixture.sport_category_name,\r\n            sport: fixture.sport_name,\r\n            type: 'jackpot',\r\n        };\r\n\r\n        let couponData = {...coupon};\r\n        //\r\n\r\n        for (let i = 0; i < couponData.selections.length; i++) {\r\n            //check if it's same event selected and remove it\r\n            if (couponData.selections[i].element_id === data.element_id) {\r\n                //remove item\r\n                couponData.selections.splice(i, 1);\r\n                //check if couponData still has selections\r\n                if (couponData.selections.length > 0) {\r\n                    //group selections by match\r\n                    couponData.tournaments = groupTournament(couponData.selections);\r\n                    //check bet type\r\n                    couponData.bet_type = checkBetType(couponData);\r\n\r\n                    if (couponData.bet_type === 'Split') {\r\n                        couponData = await getSplitProps(couponData);\r\n                    }else { // else remove selection from total odds\r\n                        couponData.totalOdds = (parseFloat(couponData.totalOdds) / parseFloat(data.odds)).toFixed(2);\r\n                        couponData.noOfCombos = 1;\r\n                    }\r\n                    couponData.stake = parseFloat(activeJackpot.stake) * parseFloat(couponData.noOfCombos);\r\n\r\n                    return setCoupon(couponData);\r\n                } else {\r\n                    resetCoupon();\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        for (let i = 0; i < couponData.selections.length; i++) {\r\n            if(couponData.selections[i].provider_id === data.provider_id){\r\n                //remove item\r\n                couponData.selections.splice(i, 1);\r\n                // if (!couponData.noOfCombos || couponData.noOfCombos < 4) {\r\n                //     couponData.selections.push(data);\r\n                //\r\n                //     //group selections by match\r\n                //     couponData.tournaments = groupTournament(couponData.selections);\r\n                //\r\n                //     couponData.bet_type = 'Split';\r\n                //     // remove item\r\n                //     // couponData.selections.splice(i, 1);\r\n                //     couponData = await getSplitProps(couponData);\r\n                //     couponData.stake = parseFloat(activeJackpot.stake) * parseFloat(couponData.noOfCombos);\r\n                //\r\n                //     return setCoupon(couponData);\r\n                // } else {\r\n                //     return;\r\n                // }\r\n            }\r\n        }\r\n\r\n        couponData.totalOdds = (parseFloat(couponData.totalOdds) * parseFloat(data.odds)).toFixed(2);\r\n        //add selection to selections list\r\n        couponData.selections.push(data);\r\n        //group selections by match\r\n        couponData.tournaments = groupTournament(couponData.selections);\r\n        // couponData.fixtures = groupSelections(couponData.selections);\r\n        //check bet type\r\n        couponData.bet_type = checkBetType(couponData);\r\n\r\n        if (couponData.bet_type === 'Split') {\r\n            couponData = await getSplitProps(couponData);\r\n        }\r\n\r\n        return setCoupon(couponData);\r\n\r\n    }\r\n\r\n    const jackpotAutoPickup = () => {\r\n        // reset selections\r\n        setCoupon({\r\n            selections: [],\r\n            totalOdds: 1,\r\n            maxBonus: 0,\r\n            minBonus: 0,\r\n            maxWin: activeJackpot.amount,\r\n            minWin: 0,\r\n            stake: activeJackpot.stake,\r\n            totalStake: activeJackpot.stake,\r\n            minOdds: 1,\r\n            maxOdds: 1,\r\n            event_type: 'jackpot',\r\n            channel: 'website',\r\n            autopick: coupon.autopick + 1,\r\n            jackpot_id: activeJackpot.id\r\n        })\r\n\r\n    }\r\n\r\n    const resetCoupon = () => {\r\n        setCoupon({\r\n            selections: [],\r\n            totalOdds: 1,\r\n            maxBonus: 0,\r\n            minBonus: 0,\r\n            maxWin: activeJackpot.amount,\r\n            minWin: 0,\r\n            stake: activeJackpot.stake,\r\n            totalStake: activeJackpot.stake,\r\n            minOdds: 1,\r\n            maxOdds: 1,\r\n            event_type: 'jackpot',\r\n            channel: 'website',\r\n            autopick: 0,\r\n            jackpot_id: null\r\n        })\r\n    }\r\n\r\n    const closeConfirm = () => {\r\n        setShowConfirm(false);\r\n    }\r\n\r\n    const confirmCoupon = () => {\r\n        if (user.settings?.self_exclusion_period) {\r\n            toast.error(`You have been temporary locked out for the next ${calculateExclusionPeriod(user.settings?.self_exclusion_period)} days due to your responsible gaming self exclusion settings.`)\r\n            return;\r\n        }\r\n        const data = {...coupon};\r\n        data.bet_type = 'Jackpot';\r\n\r\n        setSubmitting(true);\r\n        Http.post('sports/place-bet?channel=website', data).then(res => {\r\n            setSubmitting(false);\r\n            setShowConfirm(false);\r\n            if (res.success) {\r\n                // update user balance\r\n                dispatch({type: UPDATE_USER_BALANCE, payload: res.balance});\r\n                toast.success('Your jackpot bet has been placed successfully');\r\n                // return dispatch({type: SET_BET_PLACED, payload: res});\r\n                resetCoupon();\r\n            } else if (res.message === 'auth_fail') {\r\n                return dispatch({type: SHOW_LOGIN_MODAL})\r\n            } else if (res.message === 'odds_change') {\r\n\r\n                toast.error('Attention! some odds have been changed');\r\n                setTimeout(() => {\r\n                    window.location.reload();\r\n                }, 3000)\r\n\r\n            } else {\r\n                toast.error(res.message);\r\n            }\r\n        }).catch(err => {\r\n            setSubmitting(false);\r\n\r\n            if(err.response.status === 401){\r\n                toast.error('Please login to place bets');\r\n                setShowConfirm(false);\r\n                dispatch({type: SHOW_LOGIN_MODAL});\r\n            }\r\n        });\r\n    }\r\n\r\n    const changeJackpot = (jackpot) => {\r\n        setActiveJackpot(jackpot);\r\n        setCoupon({\r\n            ...coupon,\r\n            stake: jackpot.stake,\r\n            maxWin: jackpot.amount,\r\n            jackpot_id: jackpot.id\r\n        })\r\n        resetCoupon();\r\n    }\r\n\r\n    const printJackpot = (jackpot) => {\r\n        window.open(`${process.env.REACT_APP_BASEURL}/print-jackpot/${jackpot}`, 'mywin',\r\n            ''); return false;\r\n    }\r\n\r\n    return (\r\n        <JackpotLayout>\r\n            <div className=\"jkpt-inner\">\r\n\r\n                <div className=\"jkpp-mid\">\r\n                    <ul className=\"jkpp-mid-list\" id=\"jackpotList\">\r\n                        {jackpots && jackpots.map(jackpot =>\r\n                            <li className=\"jkpp-mid-list-li\" key={jackpot?.id}>\r\n                                <a href=\"javascript:;\"\r\n                                   onClick={() => changeJackpot(jackpot) }\r\n                                   className={activeJackpot?.id === jackpot?.id ? 'active' : ''}>\r\n                                    <h1>{jackpot.title}</h1>\r\n                                </a>\r\n                            </li>\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className=\"jktxt-container\">\r\n                    <div className=\"jktxt-inner\">\r\n\r\n                        <h3 className=\"jktxt-phrase\" id=\"jname\">{activeJackpot?.title}</h3>\r\n                        <button className=\"jkpp-print\" onClick={() => printJackpot(activeJackpot.id)}>\r\n                            <i className=\"fa fa-print\"></i>\r\n                            Print\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"jkban-container\">\r\n                    <div className=\"jkban-inner\">\r\n\r\n                        <div className=\"jkban-amt\" id=\"jackpotTotal\">{formatNumber(activeJackpot?.amount)}</div>\r\n                        <h2 className=\"jkban-txt\">NGN</h2>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"jkpt-odds\">\r\n                    <div className=\"jkpt-odds-inner\">\r\n                        <table className=\"jkpt-table\">\r\n                            <tbody id=\"jackpotMatches\">\r\n                            <tr className=\"jkpt-heads\">\r\n                                <td className=\"jkpt-head\" />\r\n                                <td className=\"jkpt-head\">1</td>\r\n                                <td className=\"jkpt-head\">X</td>\r\n                                <td className=\"jkpt-head\">2</td>\r\n                            </tr>\r\n                            {activeJackpot && activeJackpot.fixtures.length > 0 &&\r\n                                activeJackpot.fixtures.map(fixture =>\r\n                                    <tr className=\"jkpt-row\" key={fixture.provider_id}>\r\n                                        <td>\r\n                                            <div className=\"jkpt-group\">\r\n                                                <div className=\"jkpt-group-a\">\r\n                                                    <a href=\"#\" className=\"\">{fixture.event_name}</a>\r\n                                                </div>\r\n                                                <div className=\"jkpt-group-b\">\r\n                                                    <span className=\"jkpt-dt\">{formatDate(fixture.schedule, 'DD/MM')}</span>\r\n                                                    <span className=\"jkpt-dt\">{fixture.event_time}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>\r\n                                        {fixture.market && fixture.market.selections.length > 0 && fixture.market.selections.map(selection =>\r\n                                        <td key={fixture.provider_id + '-' +selection.id}>\r\n                                            <a href=\"javascript:;\"\r\n                                               key={selection.id}\r\n                                               onClick={() => addToJackpot(fixture, selection, createID(fixture.provider_id, fixture.market.market_id, selection.name, selection.id))}\r\n                                               className={`jkpt-odd ${(isSelected(createID(fixture.provider_id, fixture.market.market_id, selection.name, selection.id), coupon)) ? 'selected' : ''}`}\r\n                                            >{selection.odds}</a>\r\n                                        </td>\r\n                                        )}\r\n                                    </tr>\r\n                                )}\r\n                            </tbody>\r\n                        </table>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"jkpt-cta\">\r\n                    <div className=\"jkpt-cta-inner\">\r\n                        <div className=\"jkpt-cta-a\">\r\n                            <div className=\"cxbtn\" onClick={jackpotAutoPickup}>\r\n                                <div className=\"cxbtn-ico\">\r\n                                    <i className=\"fa fa-random cxbtn-ico-src\" />\r\n                                </div>\r\n                                <input type=\"hidden\" name=\"roundId\" id=\"roundId\" value=\"0\" />\r\n                                <div className=\"cxbtn-txt\">auto pickup</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"jkpt-cta-b\">\r\n                            <span className=\"totstk\">Stake:</span>\r\n                            <div className=\"totstk-box\">\r\n                                <div className=\"totstk-cur\">NGN</div>\r\n                                <div className=\"totstk-amt\" id=\"price\">{activeJackpot?.stake}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"jkpt-cta-b\">\r\n                            <span className=\"totstk\">Comb:</span>\r\n                            <div className=\"totstk-box\">\r\n                                <div className=\"totstk-amt\" id=\"combo\">{coupon?.noOfCombos || 1}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"jkpt-cta-b\">\r\n                            <span className=\"totstk\">total stake:</span>\r\n                            <div className=\"totstk-box\">\r\n                                <div className=\"totstk-cur\">NGN</div>\r\n                                <div className=\"totstk-amt\" id=\"total\">{coupon?.stake}</div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"jkpt-cta-c\">\r\n\r\n                            <div className=\"kkxbtn kkxbtn-stop\" onClick={resetCoupon}>\r\n                                <div className=\"kkxbtn-ico\">\r\n                                    <i className=\"fa fa-times kkxbtn-ico-src\"></i>\r\n                                </div>\r\n                                <div className=\"kkxbtn-txt\">Cancel</div>\r\n                            </div>\r\n\r\n                            <div className=\"kkxbtn kkxbtn-go\" onClick={proceed}>\r\n                                <div className=\"kkxbtn-ico\">\r\n                                    <i className=\"fa fa-check-square-o kkxbtn-ico-src\"></i>\r\n                                </div>\r\n                                <div className=\"kkxbtn-txt\">Proceed</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {showConfirm &&\r\n            <div className=\"bet-confirm-popup-wrapper\">\r\n                <div className=\"bet-confirm-popup\">\r\n                    <div className=\"close-bet-confirm-popup\" onClick={closeConfirm}>\r\n                        <i className=\"fa fa-times\" aria-hidden=\"true\" />\r\n                    </div>\r\n                    <div className=\"bet-confirm-content\">\r\n                        <div className=\"title\">\r\n                            <img src=\"/img/bet-confirm-info.png\" alt=\"\" />\r\n                            <span>You are about to place a jackpot bet for <b>{coupon.stake}NGN</b>, please confirm that you would like to proceed.</span>\r\n                        </div>\r\n                        <div className=\"buttons\">\r\n                            <div className=\"cancel-button button\" onClick={closeConfirm}>\r\n                                Cancel\r\n                            </div>\r\n                            <div className=\"confirm-button button\" onClick={confirmCoupon}>\r\n                                Confirm {isSubmitting && <i className=\"fa fa-spinner fa-spin\" />}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n        </JackpotLayout>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Routes\\LiveRoutes.js",[],"C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Routes\\AccountRoutes.js",["516"],"import React, {useEffect} from \"react\";\r\n/**\r\n * packages\r\n */\r\nimport {Switch, Route, withRouter} from \"react-router-dom\";\r\nimport TransactionList from \"../Views/Account/TransactionList\";\r\nimport PersonalData from \"../Views/Account/PersonalData\";\r\nimport ChangePassword from \"../Views/Account/ChangePassword\";\r\nimport BetList from \"../Views/Account/BetList\";\r\nimport {Withdrawal} from \"../Views/Account/Withdrawal\";\r\nimport BetDetail from \"../Views/Account/BetDetail\";\r\nimport NewUser from \"../Views/Account/NewUser\";\r\nimport TransferFunds from \"../Views/Account/TransferFunds\";\r\nimport AgencyList from \"../Views/Account/AgencyList\";\r\nimport SportsFinancials from \"../Views/Account/SportsFinancials\";\r\nimport JackpotBetList from \"../Views/Account/JackpotBetList\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {Deposit} from \"../Views/Account/Deposit\";\r\nimport BonusTransactionList from \"../Views/Account/BonusTransactionList\";\r\nimport {Bonuses} from \"../Views/Account/Bonuses\";\r\n\r\nconst AccountRoutes = ({history}) => {\r\n    const {isAuthenticated} = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n        if(!isAuthenticated)\r\n            history.replace('/');\r\n\r\n    },  [isAuthenticated]);\r\n\r\n  return (\r\n      <Switch>\r\n        {/*<Redirect exact from=\"/Account\" to=\"/Account/Overview\" />*/}\r\n        <Route exact path=\"/Account/TransactionList\" component={TransactionList} />\r\n        <Route exact path=\"/Account/ActiveBonus\" component={TransactionList} />\r\n        <Route exact path=\"/Account/BonusTransactionList\" component={BonusTransactionList} />\r\n        <Route exact path=\"/Account/Bonuses\" component={Bonuses} />\r\n        <Route exact path=\"/Account/BetDetail/:betslip\" component={BetDetail} />\r\n        <Route exact path=\"/Account/BetList\" component={BetList} />\r\n        <Route exact path=\"/Account/JackpotBets\" component={JackpotBetList} />\r\n        <Route exact path=\"/Account/PersonalInfo\" component={PersonalData} />\r\n        <Route exact path=\"/Account/ChangePassword\" component={ChangePassword} />\r\n        <Route exact path=\"/Account/Withdraw\" component={Withdrawal} />\r\n        <Route exact path=\"/Account/Deposit\" component={Deposit} />\r\n        <Route exact path=\"/Account/NewUser\" component={NewUser} />\r\n        <Route exact path=\"/Account/TransferFunds\" component={TransferFunds} />\r\n        <Route exact path=\"/Account/AgencyList\" component={AgencyList} />\r\n        <Route exact path=\"/Account/SportFinancial\" component={SportsFinancials} />\r\n      </Switch>\r\n  );\r\n}\r\n\r\nexport default withRouter(AccountRoutes);\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Virtual.js",["517"],"import React, {useCallback, useEffect, useState} from 'react';\r\n\r\nimport JackpotLayout from \"./layout/JackpotLayout\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nexport default function Virtual() {\r\n    const {user} = useSelector((state) => state.auth);\r\n    const [virtualUrl, setVirtuaUrl] = useState(null)\r\n    useEffect(() => {\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript';\r\n        script.src = `${process.env.REACT_APP_GLOBALBET_PROD}/responsive/js/widgetIntegration.nocache.js`;\r\n        script.async = true\r\n        script.id = 'globalbet-script'\r\n        document.body.appendChild(script);\r\n\r\n        return () => {\r\n            document.getElementById('globalbet-script').remove();\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (user.role === 'Player') {\r\n            setVirtuaUrl(`${process.env.REACT_APP_GLOBALBET_PROD}/engine/web/autologin/account?login=${user.username}-BTK&code=${user.auth_code}&webRedirectTo=/responsive/ext/skinbs/vspro-headless.jsp%3Flocale=en_US%26agent=BTK_SHOP`);\r\n        } else if (user.role === 'Cashier') {\r\n            window.open(`${process.env.REACT_APP_GLOBALBET_PROD}/engine/shop/autologin/account?login=${user.username}-BTK&code=${user.auth_code}&shopRedirectTo=/client/shop.jsp%3Flocale=en_US`);\r\n        } else {\r\n            setVirtuaUrl(`${process.env.REACT_APP_GLOBALBET_PROD}/engine/web/autologin/account?webRedirectTo=/responsive/ext/skinbs/vspro-headless.jsp%3Flocale=en_US%26agent=BTK_SHOP`);\r\n        }\r\n    }, [user]);\r\n\r\n    useEffect(() => {\r\n        if (virtualUrl) {\r\n            const container = document.getElementById(\"globalbet\");\r\n            container.innerHTML = '';\r\n            setTimeout(() => {\r\n                window.widgetAdapter.registerVirtualSports(container, virtualUrl, {sticky: true});\r\n            }, 3000);\r\n        }\r\n    }, [virtualUrl])\r\n\r\n    return (\r\n        <JackpotLayout>\r\n            <div id=\"globalbet\" />\r\n        </JackpotLayout>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\layout\\Account.js",["518","519"],"import Header from \"./partials/Header\";\r\nimport Footer from \"./partials/Footer\";\r\nimport React, {Fragment} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport DepositModal from \"../Components/Modals/DepositModal\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {NavLink, withRouter} from \"react-router-dom\";\r\nimport {SHOW_DEPOSIT_MODAL} from \"../../Redux/types\";\r\nimport ConfirmBonusWithdrawal from \"../Components/Modals/ConfirmBonusWithdrawal\";\r\n\r\nconst Account = ({children, history}) => {\r\n    const {depositModal, bonusModal} = useSelector((state) => state.sportsData);\r\n    const dispatch = useDispatch();\r\n    const {user} = useSelector(state => state.auth);\r\n\r\n    return (\r\n        <Fragment>\r\n            <Header />\r\n            <main className=\"main-content\">\r\n                <section className=\"section-content\">\r\n                    <div className=\"logged-page\">\r\n                        <div className=\"side1 logged-menu\">\r\n                            <ul className=\"\">\r\n                                <li className=\"has-sub-menu\">My Account </li>\r\n                                <li className=\"uxr-li-link\"><NavLink title=\"Bet List\" to=\"/Account/BetList\">Bet List</NavLink></li>\r\n                                <li className=\"uxr-li-link\"><NavLink title=\"Bet List\" to=\"/Account/JackpotBets\">Jackpot Bet List</NavLink></li>\r\n                                <li className=\"uxr-li-link\"><NavLink title=\"Transactions List\" to=\"/Account/TransactionList\">Transactions List</NavLink></li>\r\n\r\n                                <li className=\"uxr-li-link\"><NavLink title=\"Transactions List\" to=\"/Account/Bonuses\">Bonuses</NavLink></li>\r\n                                <li className=\"uxr-li-link\"><NavLink title=\"Transactions List\" to=\"/Account/BonusTransactionList\">Bonus Transaction List</NavLink></li>\r\n\r\n                                {(user.role === 'Master Agent' || user.role === 'Super Agent' || user.role === 'Agent' || user.role === 'Shop') &&\r\n                                <li className=\"uxr-li-link\">\r\n                                    <NavLink to=\"/Account/SportFinancial\" className=\"level-2\">\r\n                                        Sport Financial\r\n                                    </NavLink>\r\n                                </li>}\r\n                                {user.role !== 'Cashier' &&\r\n                                <>\r\n                                    <li className=\"uxr-li-link\"><NavLink title=\"Deposit\" to=\"/Account/Deposit\">Deposit</NavLink></li>\r\n                                    <li className=\"uxr-li-link\"><NavLink title=\"Withdraw\" to=\"/Account/Withdraw\">Withdraw</NavLink></li>\r\n                                    <li className=\"uxr-li-link\"><NavLink title=\"Messages\" to=\"/Account/Messages\">Messages</NavLink></li>\r\n                                </>\r\n                                }\r\n                                {(user.role === 'Master Agent' || user.role === 'Super Agent' || user.role === 'Agent' || user.role === 'Shop') &&\r\n                                <>\r\n                                    <li className=\"has-sub-menu\">PDR</li>\r\n                                    <li className=\"uxr-li-link\">\r\n                                        <NavLink to=\"/Account/NewUser?usertype=player\">New User</NavLink>\r\n                                    </li>\r\n                                    {(user.role === 'Master Agent' || user.role === 'Super Agent') &&\r\n                                    <li className=\"uxr-li-link\">\r\n                                        <NavLink to=\"/Account/NewUser?usertype=shop\">\r\n                                            New Shop\r\n                                        </NavLink>\r\n                                    </li>}\r\n                                    {(user.role === 'Master Agent' || user.role === 'Super Agent') &&\r\n                                    <li className=\"uxr-li-link\">\r\n                                        <NavLink to=\"/Account/NewUser?usertype=agent\">\r\n                                            New Agent\r\n                                        </NavLink>\r\n                                    </li>}\r\n                                    <li className=\"uxr-li-link\">\r\n                                        <a href=\"https://globalbet.virtual-horizon.com/engine/backoffice/login_BU.htm#accounts\"\r\n                                           target=\"_blank\" className=\"level-2\">\r\n                                            Virtual Credit\r\n                                        </a>\r\n                                    </li>\r\n                                    <li className=\"uxr-li-link\">\r\n                                        <NavLink to=\"/Account/AgencyList\">\r\n                                            Agency List\r\n                                        </NavLink>\r\n                                    </li>\r\n                                    <li className=\"uxr-li-link\">\r\n                                        <NavLink to=\"/Account/TransferFunds\">\r\n                                            Transfer Funds\r\n                                        </NavLink>\r\n                                    </li>\r\n                                </>\r\n                                }\r\n\r\n                                <li className=\"has-sub-menu\">Account Detail</li>\r\n\r\n                                {user.role !== 'Cashier' && <li className=\"uxr-li-link\"><NavLink to=\"/Account/PersonalInfo\">Change Personal Data</NavLink></li>}\r\n                                <li className=\"uxr-li-link\"><NavLink to=\"/Account/ChangePassword\" >Change Password</NavLink></li>\r\n                            </ul>\r\n                        </div>\r\n\r\n                        <div className=\"logged-center full\">\r\n                            {children}\r\n                        </div>\r\n\r\n                    </div>\r\n                </section>\r\n            </main>\r\n            <Footer />\r\n            {/*<div className=\"coupon-popup-wrapper\" id=\"reservedCoupon\"></div>\r\n            <div className=\"coupon-popup-wrapper\" id=\"searchEvents\"></div>*/}\r\n            {depositModal && <DepositModal dispatch={dispatch}  />}\r\n            {bonusModal.show && <ConfirmBonusWithdrawal dispatch={dispatch} amount={bonusModal.amount}  />}\r\n\r\n        </Fragment>\r\n    )\r\n}\r\nexport default withRouter(Account);\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\layout\\Main.js",["520"],"import Header from \"./partials/Header\";\r\nimport Footer from \"./partials/Footer\";\r\nimport React, {Fragment, useState, useEffect} from \"react\";\r\nimport LeftSide from \"./partials/LeftSide\";\r\nimport RightSide from \"./partials/RightSide\";\r\nimport useSWR from \"swr/esm/use-swr\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport default function Main({children, history}) {\r\n    const [bg, setBg] = useState(null);\r\n\r\n    const {data: res, error} = useSWR('/utilities/bg-image?type=sport&position=background');\r\n\r\n    useEffect(() => {\r\n        if (res && res.image_path) {\r\n            setBg(res.image_path);\r\n        }\r\n    }, [res]);\r\n\r\n    return (\r\n        <Fragment>\r\n            <Header />\r\n            <main className=\"main-content\" style={{backgroundImage: bg ? `url(${bg})` : ''}}>\r\n                <section className=\"section-content\">\r\n                    <div className=\"side-container\">\r\n                        <NavLink to=\"/BecameAnAgent\" className=\"join-btn1\">BE AGENT</NavLink>\r\n                        <NavLink to=\"/BecameAnAgent\" className=\"join-btn2\">BE AGENT</NavLink>\r\n\r\n                        <LeftSide history={history} />\r\n\r\n                        <div className=\"side2\">\r\n                            <div className=\"sports-book\">\r\n                                <div className=\"title\">\r\n                                    <img src=\"/img/soccer-icon.png\" alt=\"\"\r\n                                         className=\"title-icon\" />\r\n                                        SPORTSBOOK\r\n                                </div>\r\n                                <div className=\"right-content\">\r\n                                    <div className=\"events-info\">\r\n                                        <div><span id=\"sportsNum\">16</span> Sports</div>\r\n                                        <div><span id=\"tournamentsNum\">159</span> Events</div>\r\n                                        <div><span id=\"eventsNum\">1081</span> Matches</div>\r\n                                        <div><span id=\"oddsNum\">561188</span> Odds</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {children}\r\n                        </div>\r\n\r\n                        <RightSide />\r\n                    </div>\r\n                </section>\r\n            </main>\r\n            <Footer />\r\n            {/*<div className=\"coupon-popup-wrapper\" id=\"reservedCoupon\"></div>\r\n            <div className=\"coupon-popup-wrapper\" id=\"searchEvents\"></div>*/}\r\n\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\layout\\BecomeAnAgent.js",["521","522"],"import React, {Fragment, useState} from \"react\";\r\n\r\nimport Header from \"./partials/Header\";\r\nimport Footer from \"./partials/Footer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport '../../Assets/scss/become-an-agent.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport default function BecomeAnAgent({\r\n                                 children,\r\n                             }) {\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Fragment>\r\n            <Header />\r\n\r\n            <div className=\"aqx-main\" id=\"becomeAnAgent\">\r\n                <div className=\"aqx-main-inner\">\r\n                    <div className=\"aqx-a\">\r\n                        <div className=\"pagesmenu\">\r\n                            <ul className=\"pagemenu\">\r\n                                <li><NavLink to=\"/BecomeAnAgent\">Become an agent</NavLink></li>\r\n                                <li><NavLink to=\"/BecomeAnAgent/benefits/\">Benefits</NavLink></li>\r\n                                <li><NavLink to=\"/BecomeAnAgent/how-to-start\">Easy steps to start</NavLink></li>\r\n                                <li><NavLink to=\"/BecomeAnAgent/register/\">Register</NavLink></li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"aqx-b\">\r\n                        {children}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n        </Fragment>\r\n    );\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\layout\\InPlay.js",[],"C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Auth\\Register.js",["523","524","525","526","527"],"import React, {useEffect} from 'react';\r\nimport Others from \"../layout/Others\";\r\nimport * as Yup from \"yup\";\r\nimport {useState} from \"react\";\r\nimport {Field, Form, Formik} from \"formik\";\r\nimport { login, register} from \"../../Services/apis\";\r\nimport {toast} from \"react-toastify\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {SET_USER_DATA} from \"../../Redux/types\";\r\nimport useSWR from \"swr/esm/use-swr\";\r\n\r\nconst error = {\r\n    border: '1px solid red',\r\n    backgroundColor: 'pink'\r\n};\r\n\r\nconst RegisterSchema = Yup.object().shape({\r\n\r\n    username: Yup.string()\r\n        .min(3, \"Minimum 3 letters\")\r\n        .required(\"Enter a username\"),\r\n    full_name: Yup.string()\r\n        .required(\"Enter a username\"),\r\n    phone: Yup.string()\r\n        .required(\"Enter a username\"),\r\n    email: Yup.string().email()\r\n        .required(),\r\n    password: Yup.string()\r\n        .min(3, \"Minimum 3 letters\")\r\n        .required(\"Enter a password\"),\r\n    term: Yup.boolean().required('You have not accepted'),\r\n    age: Yup.boolean().required('Confirm you are 18 or older'),\r\n    confirm_password: Yup.string()\r\n        .min(3, \"Minimum 4 letters\")\r\n        .oneOf([Yup.ref('password'), null], 'Passwords do not match')\r\n        .required(\"Please confirm your password\"),\r\n});\r\n\r\nexport default function Register({history}) {\r\n    const dispatch = useDispatch();\r\n    const {isAuthenticated} = useSelector((state) => state.auth);\r\n    const [bg, setBg] = useState(null);\r\n\r\n    const {data: res, error: errorData} = useSWR('/utilities/bg-image?type=registration&position=background');\r\n\r\n    useEffect(() => {\r\n        if (res && res.image_path) {\r\n            setBg(res.image_path);\r\n        }\r\n    }, [res]);\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated)\r\n            history.push('/Sport/Default');\r\n    }, [isAuthenticated]);\r\n\r\n    return (\r\n        <Others>\r\n            <div className=\"aqx-main\">\r\n                <div className=\"aqx-main-inner\">\r\n\r\n                    <div className=\"aqx-a\">\r\n\r\n                        <div className=\"aqx-banner\">\r\n                            <a href=\"#\" className=\"aqx-banner-link\">\r\n                                <div className=\"aqx-banner-img\" style={{backgroundImage: bg ? `url(${bg})` : 'http:/img/aqx-reg-banner.jpg'}} />\r\n                            </a>\r\n                        </div>\r\n\r\n                        <div className=\"aqx-sub\">\r\n                            <p className=\"aqx-txt\">ALREADY HAVE AN ACCOUNT? <a className=\"aqx-txt-link\" href=\"#\">Sign in</a> here</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"aqx-b\">\r\n                        <div className=\"aqx-b-head\">\r\n                            <h3 className=\"aqx-b-head-txt\">Registration</h3>\r\n                        </div>\r\n                        <Formik\r\n                            initialValues={{\r\n                                full_name: '',\r\n                                username: '',\r\n                                phone: '',\r\n                                email: '',\r\n                                password: '',\r\n                                confirm_password: ''\r\n                            }}\r\n                            validationSchema={RegisterSchema}\r\n                            onSubmit={(values, { setSubmitting }) => {\r\n                                register(values).then(res => {\r\n                                    setSubmitting(false);\r\n                                    if(res.success) {\r\n                                        const {username, password} = res.credentials;\r\n                                        login(username, password).then(res => {\r\n                                            dispatch({\r\n                                                type: SET_USER_DATA,\r\n                                                payload: {\r\n                                                    user: res.user,\r\n                                                    access_token: res.token,\r\n                                                    isAuthenticated: true\r\n                                                }\r\n                                            });\r\n                                            history.push('/Sport/Default');\r\n\r\n                                        }).catch(err => {\r\n                                            if (err.response.status === 401) {\r\n                                                toast.error(err.message);\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                }).catch(err=> {\r\n                                    setSubmitting(false);\r\n                                    if (err.response.status === 422){\r\n                                        let errors = Object.values(err.response.data.errors);\r\n                                        errors = errors.flat();\r\n                                        errors.forEach(error => {\r\n                                            toast.error(error);\r\n                                        })\r\n                                    } else {\r\n                                        toast.error(err.message);\r\n                                    }\r\n                                })\r\n                            }}\r\n                        >\r\n                            {({ isSubmitting, touched, errors, values }) => (\r\n                                <Form>\r\n                                <div className=\"aqx-b-content\">\r\n                                    <div className=\"aqx-b-content-inner\">\r\n\r\n                                        <div className=\"aqx-loax-a\">\r\n                                            <div className=\"dnxreg-box\">\r\n                                                <div className=\"dnxreg-box-a\">\r\n                                                    <label htmlFor=\"\" className=\"nxlabel\">Username *</label>\r\n                                                </div>\r\n                                                <div className=\"dnxreg-box-b\">\r\n                                                    <Field\r\n                                                        style={errors.username ? error : null}\r\n                                                        type=\"text\"\r\n                                                        className=\"nxfield\"\r\n                                                        name=\"username\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"dnxreg-box\">\r\n                                                <div className=\"dnxreg-box-a\">\r\n                                                    <label htmlFor=\"\" className=\"nxlabel\">Full Name *</label>\r\n                                                </div>\r\n                                                <div className=\"dnxreg-box-b\">\r\n                                                    <Field\r\n                                                        style={errors.full_name ? error : null}\r\n                                                        type=\"text\"\r\n                                                        className=\"nxfield\"\r\n                                                        placeholder=\"\"\r\n                                                        name=\"full_name\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"dnxreg-box\">\r\n                                                <div className=\"dnxreg-box-a\">\r\n                                                    <label htmlFor=\"\" className=\"nxlabel\">Email *</label>\r\n                                                </div>\r\n                                                <div className=\"dnxreg-box-b\">\r\n                                                    <Field\r\n                                                        style={errors.email ? error : null}\r\n                                                        type=\"email\"\r\n                                                        className=\"nxfield\"\r\n                                                        placeholder=\"\"\r\n                                                        name=\"email\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"dnxreg-box\">\r\n                                                <div className=\"dnxreg-box-a\">\r\n                                                    <label htmlFor=\"\" className=\"nxlabel\">Mobile Number*</label>\r\n                                                </div>\r\n                                                <div className=\"dnxreg-box-b\">\r\n                                                    <div className=\"nxmob\">\r\n                                                        <select name=\"\" id=\"\" className=\"nxmob-select\">\r\n                                                            <option value=\"+234\">+234</option>\r\n                                                        </select>\r\n                                                        <Field\r\n                                                            style={errors.phone ? error : null}\r\n                                                            type=\"text\"\r\n                                                            className=\"nxmob-num\"\r\n                                                            placeholder=\"08181234567\"\r\n                                                            name=\"phone\"\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"aqx-loax-c\">\r\n\r\n                                            <div className=\"dnxreg-box\">\r\n                                                <div className=\"dnxreg-box-a\">\r\n                                                    <label htmlFor=\"\" className=\"nxlabel\">Password*</label>\r\n                                                </div>\r\n                                                <div className=\"dnxreg-box-b\">\r\n                                                    <Field\r\n                                                        style={errors.password ? error : null}\r\n                                                        type=\"password\"\r\n                                                        id=\"dnxreg-pass1\"\r\n                                                        className=\"nxfield nx-field-pass\"\r\n                                                        placeholder=\"Password\"\r\n                                                        name=\"password\"\r\n                                                    />\r\n                                                    <span className=\"showpass\" id=\"showpass1\" />\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"dnxreg-box\">\r\n                                                <div className=\"dnxreg-box-a\">\r\n                                                    <label htmlFor=\"\" className=\"nxlabel\">Confirm Password*</label>\r\n                                                </div>\r\n                                                <div className=\"dnxreg-box-b\">\r\n                                                    <Field\r\n                                                        style={errors.confirm_password ? error : null}\r\n                                                        type=\"password\"\r\n                                                        id=\"dnxreg-pass2\"\r\n                                                        className=\"nxfield nx-field-pass\"\r\n                                                        placeholder=\"Confirm Password\"\r\n                                                        name=\"confirm_password\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n                                            <div className=\"dnxreg-age\">\r\n                                                <div className=\"check\">\r\n                                                    <Field className=\"check-term\" id=\"check-term\" type=\"checkbox\" name=\"term\" />\r\n                                                    <span className=\"checkmark\" />\r\n                                                </div>\r\n                                                <label htmlFor=\"check-term\" className=\"dnxreg-age-txt\">I accept the\r\n                                                    <a href=\"#\">Terms of use.</a>\r\n                                                    {errors.term ? (\r\n                                                        <span className=\"aqx-loax-a-info\" style={{color:'Red'}}>{errors.term}</span>\r\n                                                    ) : null}\r\n                                                </label>\r\n                                            </div>\r\n\r\n                                            <div className=\"dnxreg-age\">\r\n                                                <div className=\"check\">\r\n                                                    <Field className=\"check-age\" id=\"check-age\" type=\"checkbox\" name=\"age\" />\r\n                                                    <span className=\"checkmark\" />\r\n                                                </div>\r\n                                                <label htmlFor=\"check-age\" className=\"dnxreg-age-txt\">I am over 18 years old.\r\n                                                    {errors.age ? (\r\n                                                    <span className=\"aqx-loax-a-info\" style={{color:'Red'}}>{errors.age}</span>\r\n                                                ) : null}</label>\r\n                                            </div>\r\n\r\n                                            <div className=\"aqx-loax-c-box\">\r\n                                                <button className=\"aqx-loax-btn aqx-loax-btn-go\" type=\"submit\" disabled={isSubmitting}>\r\n                                                    Register {isSubmitting ? <i className=\"fa fa-spin fa-spinner\" /> : '' }\r\n                                                </button>\r\n                                            </div>\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                </Form>\r\n                            )}\r\n                        </Formik>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </Others>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Auth\\RecoverPassword.js",["528"],"import React, {useRef, useState} from 'react';\r\nimport Others from \"../layout/Others\";\r\nimport {confirmVerification, sendVerification} from \"../../Services/apis\";\r\nimport {toast} from \"react-toastify\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {UPDATE_USERNAME} from \"../../Redux/types\";\r\nimport {formattedPhoneNumber} from \"../../Utils/helpers\";\r\n\r\nexport default function RecoverPassword({ history}) {\r\n    const [sending, setSending] = useState(false);\r\n    const [otpStatus, setOtpStatus] = useState({loading: false, status: ''});\r\n    const [otp, setOtp] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const [otpRef, setOtpRef] = useState({\r\n        otp1: useRef(),\r\n        otp2: useRef(),\r\n        otp3: useRef(),\r\n        otp4: useRef(),\r\n        otp5: useRef(),\r\n        otp6: useRef()\r\n    });\r\n\r\n    const sendSMS = async (username) => {\r\n        if (username !== '') {\r\n            setSending(true);\r\n            await sendVerification({username}).then(res => {\r\n                setSending(false);\r\n                if (res.success) {\r\n                    setUsername(username);\r\n                    toast.success('Please check your phone for your verification code')\r\n                }\r\n                // console.log(res);\r\n            }).catch(err => {\r\n                setSending(false);\r\n\r\n                toast.error('Unable to send SMS. Please try again');\r\n            });\r\n        }\r\n    }\r\n\r\n    const confirmOtp = async (otp) => {\r\n        setOtpStatus({...otpStatus, loading: true});\r\n        await confirmVerification({otp, username}).then(res => {\r\n            setOtpStatus({...otpStatus, loading: false});\r\n            if (res.success) {\r\n                dispatch({type: UPDATE_USERNAME, payload: username});\r\n                setOtpStatus({...otpStatus, status: 'true'});\r\n                setTimeout(() => {\r\n                    history.push('/Auth/ResetPassword');\r\n                }, 2000);\r\n            } else {\r\n                setOtpStatus({...otpStatus, status: 'false'});\r\n                toast.error(res.message);\r\n            }\r\n        }).catch(err => {\r\n            setOtpStatus({...otpStatus, loading: false});\r\n            toast.error('Invalid verification code.');\r\n        });\r\n    }\r\n\r\n    const otpController = (e, next, prev, index) => {\r\n\r\n        if (e.target.value.length < 1 && prev) {\r\n            const code = otp.slice(0, -1);\r\n            if (index === 1) {\r\n                setOtp(code);\r\n            } else {\r\n                setOtp('');\r\n            }\r\n            prev.current.focus();\r\n        } else if (next && e.target.value.length > 0) {\r\n            const code = otp + e.target.value;\r\n            // add value to code\r\n            setOtp(code);\r\n            next.current.focus();\r\n        } else {\r\n            const code = otp + e.target.value;\r\n            // add value to code\r\n            setOtp(code);\r\n            if (index === 5) {\r\n                confirmOtp(parseInt(code));\r\n            }\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Others>\r\n            <div className=\"forgot-password-page\">\r\n                <div className=\"grid\">\r\n                    <div className=\"forgot-password-holder\">\r\n                        <div className=\"block-title\">\r\n                            <img src=\"/img/arrow-down.png\" alt=\"\" className=\"title-icon\" />\r\n                            <span>Forgot Password?</span>\r\n                        </div>\r\n                        <div className=\"forgot-password-content\">\r\n                            <p>Enter your registered phone number to reset your password </p>\r\n                            <div className=\"form-holder\">\r\n                                <div className=\"input-group\">\r\n                                    <p className=\"label\">Phone Number:</p>\r\n                                    <input type=\"text\" name=\"username\" onChange={(e) => setUsername(e.target.value)} />\r\n                                    {/* <p className=\"aqx-loax-a-info\">\r\n                                        <i className=\"fa fa-info-circle aqx-loax-a-info-ico\" /> Do not include 0 when\r\n                                        entering your number; start with 7 or 1</p> */}\r\n                                </div>\r\n                                <div className=\"aqx-loax-b\">\r\n                                    <button\r\n                                        className=\"aqx-loax-btn\"\r\n                                        onClick={() => sendSMS(formattedPhoneNumber(username))}\r\n                                        disabled={sending}\r\n                                    >Send code {sending && <i className=\"fa fa-spin fa-spinner\" /> }</button>\r\n                                </div>\r\n                                <div className=\"input-group\">\r\n                                    <div className=\"dnxreg-box\">\r\n                                        <div className=\"dnxreg-box-a\">\r\n                                            <label htmlFor=\"\" className=\"nxlabel\">Code from SMS*</label>\r\n                                        </div>\r\n                                        <div className=\"dnxreg-box-b smsx-code\">\r\n                                            <input type=\"text\" ref={otpRef.otp1} className=\"nxfield\" onChange={(e) => otpController(e, otpRef.otp2, '', 0)} placeholder=\"-\" maxLength={1} />\r\n                                            <input type=\"text\" ref={otpRef.otp2} className=\"nxfield\" onChange={(e) => otpController(e, otpRef.otp3, otpRef.otp1, 1)} placeholder=\"-\" maxLength={1} />\r\n                                            <input type=\"text\" ref={otpRef.otp3} className=\"nxfield\" onChange={(e) => otpController(e, otpRef.otp4, otpRef.otp2, 2)} placeholder=\"-\" maxLength={1} />\r\n                                            <input type=\"text\" ref={otpRef.otp4} className=\"nxfield\" onChange={(e) => otpController(e, otpRef.otp5, otpRef.otp3, 3)} placeholder=\"-\" maxLength={1} />\r\n                                            <input type=\"text\" ref={otpRef.otp5} className=\"nxfield\" onChange={(e) => otpController(e, otpRef.otp6, otpRef.otp4, 4)} placeholder=\"-\" maxLength={1} />\r\n                                            <input type=\"text\" ref={otpRef.otp6} className=\"nxfield\" onChange={(e) => otpController(e, '', otpRef.otp5, 5)} placeholder=\"-\" maxLength={1} />\r\n                                            <div style={{margin: 'auto'}}>\r\n                                                {otpStatus.loading ?\r\n                                                    <i className=\"fa fa-spin fa-spinner\" style={{color: 'white'}} />\r\n                                                    :\r\n                                                    {\r\n                                                        'true': <i className=\"fa fa-check\" style={{color: 'green'}} />,\r\n                                                        'false': <i className=\"fa fa-times\" style={{color: 'red'}} />\r\n                                                    }[otpStatus.status]\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Others>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Auth\\ResetPassword.js",["529"],"import React, {useEffect} from 'react';\r\nimport Others from \"../layout/Others\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {toast} from \"react-toastify\";\r\nimport {resetPassword} from \"../../Services/apis\";\r\nimport {Field, Form, Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {SHOW_LOGIN_MODAL} from \"../../Redux/types\";\r\n\r\nconst error = {\r\n    border: '1px solid red',\r\n    backgroundColor: 'pink'\r\n};\r\nconst FormSchema = Yup.object().shape({\r\n    password: Yup.string()\r\n        .min(3, \"Minimum 4 letters\")\r\n        .required(\"Enter a password\"),\r\n    confirm_password: Yup.string()\r\n        .min(3, \"Minimum 4 letters\")\r\n        .oneOf([Yup.ref('password'), null], 'Passwords do not match')\r\n        .required(\"Please confirm your password\"),\r\n});\r\n\r\nexport default function ResetPassword({history}) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {username} = useSelector((state) => state.auth);\r\n\r\n    useEffect(() => {\r\n        if (!username) {\r\n            toast.error('Something went wrong. Please resend verification code');\r\n            history.push('/Auth/RecoverPassword');\r\n        }\r\n    }, [username]);\r\n\r\n    const submit = (values, {setSubmitting}) => {\r\n        values.username = username;\r\n\r\n        resetPassword(values).then(res => {\r\n            setSubmitting(false);\r\n            if (res.success) {\r\n                dispatch({type: SHOW_LOGIN_MODAL});\r\n                history.push('/')\r\n            } else {\r\n                toast.error(res.message);\r\n            }\r\n        }).catch(err => {\r\n            setSubmitting(false);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Others>\r\n            <div className=\"forgot-password-page\">\r\n                <div className=\"grid\">\r\n                    <div className=\"forgot-password-holder\">\r\n                        <div className=\"block-title\">\r\n                            <img src=\"/img/arrow-down.png\" alt=\"\" className=\"title-icon\" />\r\n                            <span>Reset your Password</span>\r\n                        </div>\r\n                        <div className=\"forgot-password-content\">\r\n                            <p>Enter your new password </p>\r\n                            <Formik\r\n                                initialValues={{ password: '', confirm_password: '' }}\r\n                                validationSchema={FormSchema}\r\n                                onSubmit={submit}\r\n                            >\r\n                                {({ isSubmitting,  errors }) => (\r\n                                    <Form className=\"form-holder\">\r\n                                        <div className=\"input-group\">\r\n                                            <p className=\"label\">New Password:</p>\r\n                                            <Field\r\n                                                style={errors.password ? error : null}\r\n                                                type=\"password\"\r\n                                                id=\"password\"\r\n                                                placeholder=\"*********\"\r\n                                                name=\"password\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"input-group\">\r\n                                            <p className=\"label\">Confirm Password:</p>\r\n                                            <Field\r\n                                                style={errors.confirm_password ? error : null}\r\n                                                type=\"password\"\r\n                                                id=\"confirm_password\"\r\n                                                placeholder=\"*********\"\r\n                                                name=\"confirm_password\"\r\n                                            />\r\n                                        </div>\r\n                                        <br />\r\n                                        <button\r\n                                            className=\"aqx-loax-btn\"\r\n                                            type=\"submit\"\r\n                                            disabled={isSubmitting}\r\n                                        >Change Password {isSubmitting && <i className=\"fa fa-spin fa-spinner\" /> }</button>\r\n\r\n                                    </Form>\r\n                                )}\r\n                            </Formik>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Others>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\BecomeAnAgent\\Index.js",[],"C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\BecomeAnAgent\\Benefits.js",[],"C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\BecomeAnAgent\\AgentRegister.js",["530"],"import React from \"react\";\r\nimport {Formik, Field} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport moment from \"moment\";\r\nimport {saveNewAgent} from \"../../Services/apis\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nconst FormSchema = Yup.object().shape({\r\n    first_name: Yup.string()\r\n        .required(\"Please provide a name\"),\r\n    last_name: Yup.string()\r\n        .required(\"Please provide a last name\"),\r\n    email: Yup.string()\r\n        .required(\"An email is requires\")\r\n        .email('Please provide a valid email'),\r\n    phone: Yup.string().required(\"A phone number is required\"),\r\n    state: Yup.string().required(\"Please provide your state of residence\"),\r\n    shop_address: Yup.string().required(\"What is your shop address\"),\r\n    personal_address: Yup.string().required(\"Please provide your address\"),\r\n});\r\n\r\nexport default function AgentRegister({history}) {\r\n\r\n    const submitForm = (values, {setSubmitting, resetForm}) => {\r\n        const data = {...values}\r\n        data.date_of_birth = moment(values.date_of_birth).format('YYYY-MM-DD');\r\n\r\n        saveNewAgent(data).then(res => {\r\n            setSubmitting(false);\r\n            if (res.success) {\r\n                resetForm({});\r\n                toast.success('Your details has been submitted successfully. We would be in touch shortly.');\r\n            } else {\r\n                toast.error(res.message);\r\n            }\r\n        }).catch (err => {\r\n            toast.error(err.message);\r\n        })\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"entry-content\">\r\n            <div className=\"aqx-b-head\">\r\n                <h3 className=\"aqx-b-head-txt\">Register</h3>\r\n            </div>\r\n            <div className=\"pagescontent\">\r\n                <div id=\"s_w_PC_PC_upDati\">\r\n                    <Formik\r\n                        enableReinitialize={true}\r\n                        initialValues={{\r\n                            first_name: '',\r\n                            last_name: '',\r\n                            email: '',\r\n                            phone: '',\r\n                            state: '',\r\n                            shop_address: '',\r\n                            personal_address: '',\r\n                            gender: 'Male',\r\n                            date_of_birth: moment().subtract(18, 'years').toDate()\r\n                        }}\r\n                        validationSchema={FormSchema}\r\n                        children={(props) => <AgentForm {...props} />}\r\n                        onSubmit={submitForm}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AgentForm = ({\r\n    errors,\r\n    touched,\r\n    handleSubmit,\r\n    setFieldValue,\r\n    isSubmitting,\r\n    isValid,\r\n    values,\r\n}) => {\r\n    const {first_name, last_name, gender, email, phone, state, shop_address, personal_address, date_of_birth} = values;\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n        <table width=\"100%\" cellSpacing=\"0\" className=\"tblDatiUser\">\r\n            <tbody>\r\n            <tr>\r\n                <td className=\"cellaSx\">Name</td>\r\n                <td className=\"cellaSx\"><b>*</b></td>\r\n                <td className=\"cellaDx\">\r\n                    <Field\r\n                        name=\"first_name\"\r\n                        type=\"text\"\r\n                        className=\"textbox\"\r\n                        value={first_name}\r\n                    />\r\n                </td>\r\n                <td className=\"rfv\">\r\n                    {errors.first_name && touched.first_name ? (\r\n                        <span id=\"s_w_PC_PC_reqEmail\" style={{color:'Red'}}>\r\n                            <span className=\"imgError\">{errors.first_name}</span>\r\n                        </span>\r\n                    ) : null}\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td className=\"cellaSx\">Surname</td>\r\n                <td className=\"cellaSx\"><b>*</b></td>\r\n                <td className=\"cellaDx\">\r\n                    <Field\r\n                        name=\"last_name\"\r\n                        type=\"text\"\r\n                        className=\"textbox\"\r\n                        value={last_name}\r\n                    />\r\n                </td>\r\n                <td className=\"rfv\">\r\n                    {errors.last_name && touched.last_name ? (\r\n                        <span id=\"s_w_PC_PC_reqEmail\" style={{color:'Red'}}>\r\n                            <span className=\"imgError\">{errors.last_name}</span>\r\n                        </span>\r\n                    ) : null}\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td className=\"cellaSx\">Date of Birth</td>\r\n                <td className=\"cellaSx\"><b>*</b></td>\r\n                <td className=\"cellaDx\">\r\n                    <DatePicker\r\n                        dateFormat=\"dd/MM/yyyy\"\r\n                        className=\"textbox\"\r\n                        name=\"date_of_birth\"\r\n                        selected={date_of_birth}\r\n                        onChange={date => setFieldValue('date_of_birth', date)} />\r\n                </td>\r\n                <td className=\"rfv\">\r\n                    {errors.date_of_birth && touched.date_of_birth ? (\r\n                        <span id=\"s_w_PC_PC_reqEmail\" style={{color:'Red'}}>\r\n                            <span className=\"imgError\">{errors.date_of_birth}</span>\r\n                        </span>\r\n                    ) : null}\r\n                </td>\r\n            </tr>\r\n            <tr id=\"rowEmailAddress\">\r\n                <td className=\"cellaSx\">Gender</td>\r\n                <td className=\"cellaSx\"><b>*</b></td>\r\n                <td className=\"cellaDx\">\r\n                    <label>\r\n                        <Field type=\"radio\" name=\"gender\" value=\"Male\" />\r\n                        Male\r\n                    </label>\r\n                    <label>\r\n                        <Field type=\"radio\" name=\"gender\" value=\"Female\" />\r\n                        Female\r\n                    </label>\r\n                </td>\r\n            </tr>\r\n            <tr id=\"rowEmailAddress\">\r\n                <td className=\"cellaSx\">Email</td>\r\n                <td className=\"cellaSx\"><b>*</b></td>\r\n                <td className=\"cellaDx\">\r\n                    <Field\r\n                        name=\"email\"\r\n                        type=\"text\"\r\n                        value={email}\r\n                        className=\"textbox\" />\r\n                </td>\r\n                <td className=\"rfv\">\r\n                    {errors.email && touched.email ? (\r\n                        <span id=\"s_w_PC_PC_reqEmail\" style={{color:'Red'}}>\r\n                            <span className=\"imgError\">{errors.email}</span>\r\n                        </span>\r\n                    ) : null}\r\n                </td>\r\n            </tr>\r\n            <tr id=\"rowEmailAddress\">\r\n                <td className=\"cellaSx\">Phone Number</td>\r\n                <td className=\"cellaSx\"><b>*</b></td>\r\n                <td className=\"cellaDx\">\r\n                    <Field\r\n                        name=\"phone\"\r\n                        type=\"text\"\r\n                        value={phone}\r\n                        className=\"textbox\" />\r\n                </td>\r\n                <td className=\"rfv\">\r\n                    {errors.phone && touched.phone ? (\r\n                        <span id=\"s_w_PC_PC_reqEmail\" style={{color:'Red'}}>\r\n                            <span className=\"imgError\">{errors.phone}</span>\r\n                        </span>\r\n                    ) : null}\r\n                </td>\r\n            </tr>\r\n\r\n            <tr id=\"rowEmailAddress\">\r\n                <td className=\"cellaSx\">State</td>\r\n                <td className=\"cellaSx\"><b>*</b></td>\r\n                <td className=\"cellaDx\">\r\n                    <Field\r\n                        name=\"state\"\r\n                        type=\"text\"\r\n                        value={state}\r\n                        className=\"textbox\" />\r\n                </td>\r\n                <td className=\"rfv\">\r\n                    {errors.state && touched.state ? (\r\n                        <span id=\"s_w_PC_PC_reqEmail\" style={{color:'Red'}}>\r\n                            <span className=\"imgError\">{errors.state}</span>\r\n                        </span>\r\n                    ) : null}\r\n                </td>\r\n            </tr>\r\n            <tr id=\"rowEmailAddress\">\r\n                <td className=\"cellaSx\">Shop Address</td>\r\n                <td className=\"cellaSx\"><b>*</b></td>\r\n                <td className=\"cellaDx\">\r\n                    <Field\r\n                        name=\"shop_address\"\r\n                        type=\"text\"\r\n                        value={shop_address}\r\n                        className=\"textbox\" />\r\n                </td>\r\n                <td className=\"rfv\">\r\n                    {errors.shop_address && touched.shop_address ? (\r\n                        <span id=\"s_w_PC_PC_reqEmail\" style={{color:'Red'}}>\r\n                            <span className=\"imgError\">{errors.shop_address}</span>\r\n                        </span>\r\n                    ) : null}\r\n                </td>\r\n            </tr>\r\n            <tr id=\"rowEmailAddress\">\r\n                <td className=\"cellaSx\">Personal Address</td>\r\n                <td className=\"cellaSx\"><b>*</b></td>\r\n                <td className=\"cellaDx\">\r\n                    <Field\r\n                        name=\"personal_address\"\r\n                        type=\"text\"\r\n                        value={personal_address}\r\n                        className=\"textbox\" />\r\n                </td>\r\n                <td className=\"rfv\">\r\n                    {errors.personal_address && touched.personal_address ? (\r\n                        <span id=\"s_w_PC_PC_reqEmail\" style={{color:'Red'}}>\r\n                            <span className=\"imgError\">{errors.personal_address}</span>\r\n                        </span>\r\n                    ) : null}\r\n                </td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td colSpan=\"4\">\r\n                    <div className=\"spacer5\"/>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td align=\"right\" colSpan=\"3\">\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"button\"\r\n                        disabled={!isValid}\r\n                    >{isSubmitting ? 'Submitting' : 'Submit' }</button>\r\n                </td>\r\n                <td></td>\r\n            </tr>\r\n            <tr>\r\n                <td colSpan=\"4\">\r\n                    <div className=\"spacer5\"></div>\r\n                </td>\r\n            </tr>\r\n            </tbody>\r\n        </table>\r\n        </form>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\BecomeAnAgent\\EasySteps.js",[],"C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Utils\\helpers.js",["531","532","533"],"import moment from \"moment\";\r\nimport * as _ from 'lodash';\r\nimport { unslugify } from \"unslugify\";\r\n\r\nexport const getStats = (fixture) => {\r\n    const statWrapper = document.getElementById(`SingleInsideStats_${fixture.provider_id}`);\r\n\r\n    if(statWrapper.innerHTML === '') {\r\n        statWrapper.innerHTML = 'Loading...';\r\n        statWrapper.style.color = '#000';\r\n        statWrapper.style.backgroundColor = '#fff';\r\n        window.SRLive.addWidget(\"widgets.matchhead2head\", {\r\n            matchId: fixture.provider_id,\r\n            showTitle: !1,\r\n            container: `#SingleInsideStats_${fixture.provider_id}`\r\n        });\r\n    } else {\r\n        statWrapper.innerHTML = '';\r\n    }\r\n};\r\n\r\nexport const slugify = (text) => {\r\n    if(!text)\r\n        return false;\r\n\r\n    return text\r\n        .toString()\r\n        .toLowerCase()\r\n        .replace(/\\s+/g, '-')\r\n        .replace(/[^\\w\\-]+/g, '')\r\n        .replace(/\\-\\-+/g, '-')\r\n        .replace(/^-+/, '')\r\n        .replace(/-+$/, '');\r\n}\r\n\r\nexport const unSlugify = (text = '') =>\r\n    _.capitalize(unslugify(text))\r\n\r\nexport const groupFixtures = (data) => {\r\n    let ArrKeyHolder = [];\r\n    let Arr = [];\r\n    data.forEach(function(item){\r\n        ArrKeyHolder[item.event_date] = ArrKeyHolder[item.event_date]||{};\r\n        let obj = ArrKeyHolder[item.event_date];\r\n\r\n        if(Object.keys(obj).length === 0)\r\n            Arr.push(obj);\r\n\r\n        obj.event_date = item.event_date;\r\n        obj.events  = obj.events || [];\r\n\r\n        obj.events.push(item);\r\n    });\r\n    return Arr;\r\n}\r\n\r\nexport const groupBy = (data, field) => {\r\n    if(data.length) {\r\n        return data.reduce(function (rv, x) {\r\n            (rv[x[field]] = rv[x[field]] || []).push(x);\r\n            return rv;\r\n        }, []);\r\n    }else {\r\n        return [];\r\n    }\r\n}\r\n\r\nexport const formatDate = (str, format = 'YYYY-MM-DD HH:mm') =>\r\n    moment(str).format(format);\r\n\r\nexport const goBack = (history) => {\r\n    history.goBack();\r\n}\r\n\r\nexport const isSelected = (ele_id, coupon) => {\r\n\r\n    let isExist = false;\r\n\r\n    if(coupon.selections.length > 0) {\r\n        let count = coupon.selections.find((selection) => selection.element_id === ele_id);\r\n        if (count) {\r\n            isExist = true\r\n        }\r\n    }\r\n    return isExist;\r\n}\r\n\r\nexport const formatNumber = (number) =>\r\n    !number ? 0 : parseFloat(number).toLocaleString(undefined, {minimumFractionDigits:2, maximumFractionDigits: 2});\r\n\r\n\r\nexport const toggleAccountMenu = (e) => {\r\n   const ele = document.getElementById('account-menu');\r\n   ele.classList.toggle('show');\r\n}\r\n\r\nexport const toggleExtraMarket = (id) => {\r\n    const ele = document.getElementById(id);\r\n    if (ele)\r\n        ele.classList.toggle('show');\r\n}\r\n\r\nexport const getOdds = (prediction, outcomes) => {\r\n    let odd = '';\r\n    _.each(outcomes, (outcome) => {\r\n        if(outcome.id === prediction.odd_id && outcome.name === prediction.odd_name){\r\n            odd = outcome.odds\r\n        }\r\n    })\r\n\r\n    if(odd !== ''){\r\n        return odd;\r\n    }else{\r\n        return '-';\r\n    }\r\n}\r\n\r\nexport const getLiveOdds = (eventMarkets, market, selection) => {\r\n    let odd = 0;\r\n    if (eventMarkets.length) {\r\n        _.each(eventMarkets, function (value, key) {\r\n            if (value.TypeId === market.id) {\r\n                _.each(value.Selections, function (item, index) {\r\n                    if (item.TypeId === selection.id && item.Name === selection.name) {\r\n                        item.MarketId = value.Id;\r\n                        odd = item;\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    return odd;\r\n}\r\n\r\nexport const getSpread = (eventMarkets, market) => {\r\n    let specialValue = 0;\r\n    if (eventMarkets.length) {\r\n        _.each(eventMarkets, function (value, key) {\r\n            if (value.TypeId === market.id) {\r\n                specialValue = value.SpecialValue;\r\n            }\r\n        });\r\n    }\r\n\r\n    return specialValue;\r\n}\r\n\r\nexport const formatOdd = (odd) => {\r\n    if (odd > 0 && odd % 1 === 0) {\r\n        return odd + \".00\";\r\n    } else {\r\n        return odd;\r\n    }\r\n}\r\n\r\nexport const openFastCode = () => {\r\n    let url = process.env.REACT_APP_BASEURL+'/Sport/ShortCodes';\r\n    window.open(url, 'mywin','left=5,width=558,height=500,toolbar=1,resizable=0');\r\n}\r\n\r\nexport const sortTeams = (teams) => {\r\n    return teams.slice().sort((a, b) => a.ItemOrder - b.ItemOrder);\r\n}\r\n\r\nexport const formattedPhoneNumber = (phoneNumber) => {\r\n    const pNumber = phoneNumber.toString();\r\n    const first = pNumber.charAt(0);\r\n    if (first === '0') {\r\n        return  pNumber.substring(1);\r\n    }\r\n    return pNumber;\r\n}\r\n\r\nexport const formatBetslipId = id => {\r\n    if (id) {\r\n        const splitText = id.split('-');\r\n        return '**********-' + splitText[1];\r\n    }\r\n}\r\n\r\nexport const formatName = name => {\r\n    const first3 = name.substring(0, 3);\r\n    const last2  = name.substring(7);\r\n    return first3+'****'+last2;\r\n}\r\n\r\nexport const calculateExclusionPeriod = (date) => {\r\n    return moment(date).diff(moment(), 'days');\r\n}\r\n\r\nexport const checkNoOfDraws = (selections) => {\r\n    let no_of_draws = 0;\r\n    selections.forEach(selection => {\r\n        if (selection.oddname === 'X')\r\n            no_of_draws++\r\n    })\r\n    return no_of_draws === selections.length && no_of_draws > 5;\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Utils\\couponHelpers.js",["534"],"C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\BetListOutcome.js",["535","536","537","538","539"],"import React from \"react\";\r\n\r\nexport default function BetListOutcome({outcome}) {\r\n    return (\r\n        <>\r\n        {\r\n            {\r\n                0: <img src=\"/img/ScommesseEsito_3.gif\" style={{borderWidth: '0px' }} />,\r\n                1: <img src=\"/img/ScommesseEsito_1.gif\" style={{borderWidth: '0px' }} />,\r\n                2: <img src=\"/img/ScommesseEsito_2.gif\" style={{borderWidth: '0px' }} />,\r\n                3: <img src=\"/img/ScommesseEsito_4.gif\" style={{borderWidth: '0px' }} />,\r\n                4: <img src=\"/img/ScommesseEsito_5.gif\" style={{borderWidth: '0px' }} />,\r\n            }[outcome]\r\n        }\r\n        </>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Utils\\Http.js",[],"C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Utils\\ErrorBoundary.js",[],"C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Redux\\reducers\\user.js",[],"C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Redux\\reducers\\sports.js",[],"C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Redux\\reducers\\coupon.js",["540","541"],"C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Redux\\reducers\\login.js",[],"C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\EventDetails.js",["542","543","544"],"import React, {useCallback, useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getFixture} from \"../Services/apis\";\r\nimport {formatDate, isSelected} from \"../Utils/helpers\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {addToCoupon} from \"../Redux/actions\";\r\nimport {createID} from \"../Utils/couponHelpers\";\r\n\r\n\r\nexport default function EventDetails({location}) {\r\n    const urlParam = new URLSearchParams(location.search);\r\n    const eventID = urlParam.get('EventID');\r\n    const [fixture, setFixture] = useState(null);\r\n    const dispatch = useDispatch();\r\n    const coupon = useSelector(({couponData}) => couponData.coupon);\r\n\r\n    const fetchFixture = useCallback(() => {\r\n        getFixture(eventID).then(res => {\r\n            setFixture(res);\r\n        }).catch(err => {\r\n            // setLoading(false)\r\n        })\r\n    }, [eventID]);\r\n\r\n    useEffect(() => {\r\n        fetchFixture();\r\n    }, [fetchFixture]);\r\n\r\n    const getClass = len => {\r\n        if (len <= 2) {\r\n            return 'c2';\r\n        } else if(len === 3) {\r\n            return 'c3';\r\n        } else if (len === 4 || len === 8){\r\n            return 'c4';\r\n        } else if (len === 5 || len === 10) {\r\n            return 'c5';\r\n        } else if (len === 6 || len === 12) {\r\n            return 'c6';\r\n        } else if (len === 9 || len === 18) {\r\n            return 'c9'\r\n        } else {\r\n            return 'c4';\r\n        }\r\n    }\r\n\r\n    const toggleMarket = e => {\r\n        e.target.parentElement.classList.toggle('closed');\r\n    }\r\n\r\n    const toggleInfo = e => {\r\n        e.target.classList.toggle('sel');\r\n        e.target.nextElementSibling.classList.toggle('sel');\r\n    }\r\n\r\n    const getStats = (e) => {\r\n        const statWrapper = document.getElementById(`SingleInsideStats_${fixture.provider_id}`);\r\n        statWrapper.classList.toggle('brClosed');\r\n\r\n        if(statWrapper.innerHTML === '') {\r\n            statWrapper.innerHTML = 'Loading...';\r\n            statWrapper.style.color = '#000';\r\n            statWrapper.style.backgroundColor = '#fff';\r\n            window.SRLive.addWidget(\"widgets.matchhead2head\", {\r\n                matchId: fixture.provider_id,\r\n                showTitle: !1,\r\n                container: `#SingleInsideStats_${fixture.provider_id}`\r\n            });\r\n        } else {\r\n            statWrapper.innerHTML = '';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div id=\"MainContent\" className=\"championship-page\">\r\n                <div id=\"divDett\">\r\n                    <div id=\"SEOddsDataSE\" >{ formatDate(fixture?.schedule, 'DD/MM/YYYY HH:mm') }</div>\r\n                    <div id=\"SEOddsDescSE\" className=\"OddsDetailsSE\">{fixture?.event_name}</div>\r\n                    <div className=\"OddsBreadbrum\">\r\n                        <ul>\r\n                            <li className=\"sportItem\">\r\n                                <a title={fixture?.sport_name}>{fixture?.sport_name} </a>\r\n                            </li>\r\n                            <li className=\"groupItem\">\r\n                                <a title={fixture?.sport_category_name} >{fixture?.sport_category_name}</a>\r\n                            </li>\r\n                            <li className=\"eventItem\">\r\n                                <NavLink to={`/Sport/Odds?tid=${fixture?.sport_tournament_id}&sid=${fixture?.sport_id}`} title={fixture?.sport_tournament_name}>{fixture?.sport_tournament_name}</NavLink>\r\n                            </li>\r\n                            <li className=\"subeventItem\">\r\n                                <a title={fixture?.event_name}>{fixture?.event_name}</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"subeventWidgets\">\r\n                        <div className=\"starters\">\r\n                            <div className=\"HeadToHead\" onClick={getStats} />\r\n                        </div>\r\n                        <div className=\"widgetBody HeadToHead brClosed\" id={`SingleInsideStats_${fixture?.provider_id}`} />\r\n                    </div>\r\n                    <div className=\"SETQCon stats\">\r\n                        {fixture?.markets.map((row, i) =>\r\n                            <div className=\"SEItem\" key={`market-${i}`}>\r\n                                <div className=\"SECQ\" onClick={(e) => toggleMarket(e)}>\r\n                                    <span className=\"btnOpenClose\"  />\r\n                                    {row.market?.name}\r\n                                </div>\r\n                                <div className=\"DescPuls \" onClick={(e) => toggleInfo(e)}>open</div>\r\n                                <div className=\"DescInfo\">\r\n                                    {row.market?.description}\r\n                                </div>\r\n                                <div className={`SEOdds ${getClass(row.selections.length)}`}>\r\n                                    {row.selections.map((selection, s) =>\r\n                                        <div title=\"Singles\" className={`SEOdd g1 \r\n                                            ${(selection.odds === '-' || selection.odds == null) ? 'disabled' : ''}\r\n                                            ${(isSelected(createID(fixture.provider_id, row.market?.id, selection.name, selection.id), coupon)) ? 'sel' : ''}`}\r\n                                             key={`selection-${s}`}>\r\n                                            <div className=\"SEOddsTQ \">{selection.name}</div>\r\n                                            <div className=\"SEOddLnk\"\r\n                                                 onClick={() => dispatch(addToCoupon(fixture, row.market?.id, row.market.name, selection.odds, selection.id, selection.name,\r\n                                                     createID(fixture.provider_id, row.market?.id, selection.name, selection.id), fixture.fixture_type))}>\r\n                                                {selection.odds}\r\n                                            </div>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Home.js",["545","546"],"import React, { useEffect, useState} from 'react';\r\nimport TopBets from \"./Components/TopBets\";\r\nimport UpcomingEvents from \"./Components/UpcomingEvents\";\r\nimport {Carousel} from \"react-responsive-carousel\";\r\nimport 'react-responsive-carousel/lib/styles/carousel.css';\r\nimport useSWR from \"swr/esm/use-swr\";\r\n\r\nexport default function Home() {\r\n    const [sliders, setSliders] = useState([]);\r\n\r\n    const {data: res, error} = useSWR('/sports/banners?banner_type=web');\r\n\r\n    useEffect(() => {\r\n        if (res) {\r\n            setSliders(res.sliders);\r\n        }\r\n    }, [res]);\r\n\r\n    return (\r\n        <div className=\"App-header\">\r\n            {sliders.length &&\r\n            <Carousel\r\n                className=\"banner-container\"\r\n                autoPlay\r\n                infiniteLoop={true}\r\n                showStatus={false}\r\n                showThumbs={false}\r\n                showArrows={false}\r\n                interval={res?.slider_speed}\r\n            >\r\n                {sliders.map(slider =>\r\n                    <div key={slider.id}>\r\n                    <a href=\"#\" >\r\n                        <img src={slider.image_path} alt=\"home banner\" />\r\n                    </a>\r\n                    </div>\r\n                )}\r\n            </Carousel>}\r\n            <TopBets />\r\n\r\n            <UpcomingEvents />\r\n        </div>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\OddsLessThan.js",["547","548"],"import React, {useEffect, useState} from 'react';\r\nimport {oddsLessThan, oddsLessThanFixtures} from \"../Services/apis\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {toast} from \"react-toastify\";\r\nimport FixturesList from \"./Components/FixturesList\";\r\nimport {LOADING} from \"../Redux/types\";\r\n\r\nexport default function OddsLessThan({history}) {\r\n    const [fixtures, setFixtures] = useState([]);\r\n    const [predictions, setPredictions] = useState([]);\r\n    const [selectedMarkets, setSelectedMarkets] = useState([]);\r\n    const [sports, setSports] = useState(null);\r\n    const [activeSport, setActiveSport] = useState(null);\r\n    const [activeOdds, setActiveOdds] = useState(null);\r\n    const [range, setRange] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const coupon = useSelector(({couponData}) => couponData.coupon);\r\n    const dispatch = useDispatch();\r\n\r\n    const getSports = () => {\r\n            setLoading(true);\r\n        oddsLessThan({maxOdds: activeOdds, range}).then(res => {\r\n            setLoading(false);\r\n            setSports(res);\r\n            if(res.length)\r\n                setActiveSport(res[0]);\r\n        }).catch(err => {\r\n            toast.error('Unable to fetch results');\r\n        });\r\n    }\r\n\r\n    const getFixtures = () => {\r\n        dispatch({type: LOADING});\r\n        oddsLessThanFixtures({maxOdds: activeOdds, range, sport: activeSport?.sport_id})\r\n            .then(res => {\r\n                dispatch({type: LOADING});\r\n                setFixtures(res.fixtures);\r\n                setPredictions(res.predictions);\r\n                setSelectedMarkets(res.market_def);\r\n        }).catch(err => {\r\n            dispatch({type: LOADING});\r\n            toast.error('Unable to fetch fixtures');\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (activeOdds && range) {\r\n            getSports();\r\n        }\r\n    }, [activeOdds, range]);\r\n\r\n    useEffect(() => {\r\n        getFixtures();\r\n    }, [activeSport]);\r\n\r\n    return (\r\n        <div className=\"odds-less-wrapper\">\r\n            <div className=\"ranges\">\r\n                <div className=\"range\">\r\n                    <div className=\"label\">Select your odds less than:</div>\r\n                    <div className=\"ranges-holder\">\r\n                        <div className={`single-range index0 ${activeOdds === 1.25 ? 'selected' : ''}`}\r\n                             onClick={() => setActiveOdds(1.25)}>\r\n                            <span>1.25</span>\r\n                        </div>\r\n                        <div className={`single-range index1 ${activeOdds === 1.50 ? 'selected' : ''}`}\r\n                             onClick={() => setActiveOdds(1.50)}>\r\n                            <span>1.50</span></div>\r\n                        <div className={`single-range index2 ${activeOdds === 1.75 ? 'selected' : ''}`}\r\n                             onClick={() => setActiveOdds(1.75)}>\r\n                            <span>1.75</span></div>\r\n                        <div className={`single-range index3 ${activeOdds === 2.00 ? 'selected' : ''}`}\r\n                             onClick={() => setActiveOdds(2.00)}><span>2.00</span></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"range\">\r\n                    <div className=\"label\">Select the time range to show:</div>\r\n                    <div className=\"ranges-holder\">\r\n                        <div className={`single-range index0 ${range === '1hr' ? 'selected' : ''}`}\r\n                             onClick={() => setRange('1hr')}>\r\n                            <span>1 hr</span>\r\n                        </div>\r\n                        <div className={`single-range index1 ${range === '3hrs' ? 'selected' : ''}`}\r\n                             onClick={() => setRange('3hrs')}>\r\n                            <span>3 hrs</span>\r\n                        </div>\r\n                        <div className={`single-range index2 ${range === 'today' ? 'selected' : ''}`}\r\n                             onClick={() => setRange('today')}>\r\n                            <span>Today</span>\r\n                        </div>\r\n                        <div className={`single-range index3 ${range === '3days' ? 'selected' : ''}`}\r\n                             onClick={() => setRange('3days')}>\r\n                            <span>3 days</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"sports\">\r\n                {loading ? <div style={{margin: 'auto', textAlign: 'center'}}><i className=\"fa fa-spin fa-spinner fa-2x\" /></div>\r\n                    :\r\n                    (sports &&\r\n                    <>\r\n                        <div className=\"label\">Choose the sports you would like to view:</div>\r\n                        <div className=\"sports-holder\">\r\n                            {sports.map(sport =>\r\n                            <div\r\n                                onClick={() => setActiveSport(sport)}\r\n                                className={`single-sport-button ${sport.sport_id === activeSport?.sport_id ? 'selected' : ''}`}\r\n                                key={`sport-${sport.sport_id}`}>\r\n                                <span>{sport.name}</span>\r\n                            </div>\r\n                            )}\r\n                        </div>\r\n                    </>)\r\n                }\r\n            </div>\r\n            {fixtures.length > 0 &&\r\n            <div className=\"oddsViewPanel \">\r\n                <div className={`divOdds ${predictions.length <= 9 ? 'r1 c'+predictions.length : 'r5 c6'}`}>\r\n\r\n                    <div className=\"SEs\">\r\n                        <FixturesList\r\n                            fixtures={fixtures}\r\n                            predictions={predictions}\r\n                            selectedMarkets={selectedMarkets}\r\n                            coupon={coupon}\r\n                            dispatch={dispatch}\r\n                            history={history}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\ExploreEvents.js",["549"],"import React, {useEffect, useState} from 'react';\r\nimport moment from \"moment\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {fetchFixturesByDate, fetchFixturesByDateSport, getMarkets} from \"../Services/apis\";\r\nimport Loader from \"./Components/Loader\";\r\nimport FixturesList from \"./Components/FixturesList\";\r\nimport {LOADING} from \"../Redux/types\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nconst getDays = () => {\r\n    const days = [];\r\n    const today = moment();\r\n    days.push({\r\n        date: today.format('YYYY-MM-DD'),\r\n        label: `Today ${today.format('DD.MM')}`\r\n    })\r\n    for (let i = 1; i < 5; i++) {\r\n        const data = {date: moment().add(i, 'days').format('YYYY-MM-DD'), label: ''};\r\n        if (i === 1) {\r\n            data.label = 'Tomorrow ' + moment().add(i, 'day').format('DD.MM');\r\n        } else {\r\n            data.label = moment().add(i, 'days').format('ddd DD.MM');\r\n        }\r\n        days.push(data);\r\n    }\r\n    return days;\r\n}\r\n\r\nexport default function ExploreEvents({history}) {\r\n\r\n    const [activeDate, setActiveDate] = useState(getDays()[0]);\r\n    const [sports, setSports] = useState([]);\r\n    const [fixtures, setFixtures] = useState([]);\r\n    const [predictions, setPredictions] = useState([]);\r\n    const [activeSport, setActiveSport] = useState(null);\r\n    const [activeMarket, setActiveMarket] = useState(null);\r\n    const [activeGroup, setActiveGroup] = useState(null);\r\n    const [groups, setGroups] = useState([]);\r\n    const [markets, setMarkets] = useState([]);\r\n    const [selectedMarkets, setSelectedMarkets] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const coupon = useSelector(({couponData}) => couponData.coupon);\r\n\r\n    const displayWeekDay = (curr) => {\r\n        const today = moment();\r\n\r\n        if(today.format('YYYY-MM-DD') === curr){\r\n            return 'Today\\'s';\r\n        } else if (moment(curr).diff(today, 'days') === 1) {\r\n            return 'Tomorrow\\'s';\r\n        }\r\n        return moment(curr).format('dddd')+'\\'s';\r\n    }\r\n\r\n    const getSports = () => {\r\n        setLoading(true);\r\n        fetchFixturesByDate(activeDate.date).then(res => {\r\n            setLoading(false);\r\n            setSports(res.sports);\r\n            setActiveSport(res.sports[0]);\r\n            setFixtures(res.data.fixtures);\r\n            setPredictions(res.data.predictions);\r\n            setGroups(res.data.groups);\r\n            setActiveGroup(res.data.groups[0]);\r\n            setActiveMarket(res.data.markets[0]);\r\n            setMarkets(res.data.markets);\r\n            setSelectedMarkets(res.data.market_def);\r\n            setActiveMarket(res.data.selected_market);\r\n        }).catch(err => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const getFixtures = (date, sport, market) => {\r\n        dispatch({type: LOADING})\r\n        fetchFixturesByDateSport(date, sport, market).then(res => {\r\n            dispatch({type: LOADING})\r\n            setFixtures(res.fixtures);\r\n            setPredictions(res.predictions);\r\n            setGroups(res.groups);\r\n            setActiveGroup(res.groups[0]);\r\n            setMarkets(res.markets);\r\n            setSelectedMarkets(res.market_def);\r\n            setActiveMarket(res.markets[0]);\r\n        }).catch(err => {\r\n            dispatch({type: LOADING})\r\n\r\n            toast.error('Unable to fetch fixtures');\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (activeDate) {\r\n            getSports();\r\n        }\r\n    }, [activeDate]);\r\n\r\n\r\n    const setSport = (sport) => {\r\n        setActiveSport(sport)\r\n        getFixtures(activeDate.date, sport.sport_id);\r\n    }\r\n\r\n    const toggleInfo = e => {\r\n        const parent = e.target.parentElement;\r\n        parent.classList.toggle('show');\r\n    }\r\n\r\n    const changeMarket = (market) => {\r\n        dispatch({type: LOADING});\r\n        market.market_group_id = market.group_id;\r\n        setActiveMarket(market);\r\n        getMarkets(0, activeSport.sport_id, market.id, activeDate.date).then(res => {\r\n            dispatch({type: LOADING});\r\n            setPredictions(res.predictions);\r\n            setFixtures(res.fixtures);\r\n            setSelectedMarkets(res.market_def);\r\n        }).catch(err => {\r\n            dispatch({type: LOADING});\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"explore-matches-page\">\r\n            <div className=\"title\">\r\n                <div className=\"explore-days\">\r\n                    <span>Show events for:</span>\r\n                    {getDays().map((day, i) =>\r\n                        <span className={`explore-day ${activeDate.label === day.label ? 'active' : ''}`}\r\n                              key={i} onClick={() => setActiveDate(day)}>{day.label}</span>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <div className=\"choose-sports-holder\">\r\n                {loading ? <Loader/>\r\n                    :\r\n                    <div className=\"choose-sports\">\r\n                        <span>Choose the sport for which you would like to view {displayWeekDay(activeDate?.date)} Fixture:</span>\r\n                        {sports?.map(sport =>\r\n                            <div onClick={() => setSport(sport)}\r\n                               key={`st${sport.sport_id}`}\r\n                               className={`choose-sport ${sport.sport_id === activeSport?.sport_id ? 'active' : ''}`}\r\n                            >{sport.sport_name}</div>\r\n                        )}\r\n                    </div>\r\n                }\r\n            </div>\r\n            {!loading &&\r\n            <div className=\"oddsViewPanel \">\r\n                <div className={`divOdds ${predictions.length <= 9 ? 'r1 c'+predictions.length : 'r5 c6'}`}>\r\n                    <ul className={`CGQ t${groups?.length}`}>\r\n                        {groups.map((group, g) =>\r\n                            <li\r\n                                key={`group-${group.id}`}\r\n                                onClick={() => setActiveGroup(group)}\r\n                                className={`itm${g+1} ${group.id === activeGroup?.id ? 'sel preSel' : ''}`}\r\n                            >\r\n                                <span>{group.name}</span>\r\n                                {group.id === activeGroup?.id &&\r\n                                <ul className=\"CQ\">\r\n                                    {markets.map(market =>\r\n                                        market.group_id === activeGroup?.id &&\r\n                                        <li key={`event-markets-${market.id}`}\r\n                                            className={activeMarket?.id === market.id ? 'sel' : ''}\r\n                                            onClick={() => changeMarket(market)}>\r\n                                            <span >{market.name}</span>\r\n                                        </li>\r\n                                    )}\r\n                                </ul>}\r\n                            </li>\r\n                        )}\r\n                    </ul>\r\n                    <div className=\"oddClass\" >\r\n                        <div className=\"btnDisplay\" onClick={toggleInfo} />\r\n                        <div className=\"\">\r\n                            <div>\r\n                                <span className=\"ng-binding\">{activeMarket?.name}</span>\r\n                                <span className=\"ng-binding\">{activeMarket?.info}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"SEs\">\r\n                        <FixturesList\r\n                            fixtures={fixtures}\r\n                            predictions={predictions}\r\n                            selectedMarkets={selectedMarkets}\r\n                            coupon={coupon}\r\n                            dispatch={dispatch}\r\n                            history={history}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\SearchResults.js",["550","551","552","553","554"],"import React, { useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {findFixtures} from \"../Services/apis\";\r\nimport {LOADING} from \"../Redux/types\";\r\nimport {formatDate} from \"../Utils/helpers\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nexport default function SearchResults({location}) {\r\n    const urlParam = new URLSearchParams(location.search);\r\n    const q = urlParam.get('q');\r\n    const [results, setResults] = useState([]);\r\n    const {loading} = useSelector((state) => state.login);\r\n    const dispatch = useDispatch();\r\n\r\n    const find = () => {\r\n        dispatch({type: LOADING});\r\n        findFixtures(q).then(res => {\r\n            dispatch({type: LOADING});\r\n            setResults(res);\r\n        }).catch(err => dispatch({type: LOADING}))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (q) {\r\n            find();\r\n        }\r\n    }, [q]);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div id=\"MainContent\" className=\"sport\">\r\n                {!loading && results.length === 0 &&\r\n                <div className=\"iSBox ctrl_oddsView\" >\r\n                    <div className=\"oddsViewPanel\">\r\n                        <div className=\"empty\">\r\n                            <span>No Results Found</span>\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n                {!loading && results.length > 0 &&\r\n                <div className=\"Riquadro\">\r\n                    <div className=\"CntSX\">\r\n                        <div className=\"CntDX\">\r\n                            <div id=\"s_w_PC_PC_panelSquare\">\r\n                                <div className=\"groupsDivMain\">\r\n                                    <div>\r\n                                        <table\r\n                                            className=\"dgStyle\" cellSpacing=\"0\" border=\"0\"\r\n                                            style={{borderWidth:'0px', borderStyle:'None', width:'100%',borderCollapse: 'collapse'}}>\r\n                                            <tbody>\r\n                                                <tr className=\"dgHdrStyle\">\r\n                                                <th scope=\"col\">\r\n                                                    <a href=\"javascript:;\">Description</a>\r\n                                                </th>\r\n                                                <th align=\"center\" scope=\"col\">\r\n                                                    <a href=\"javascript:;\">Start Date</a>\r\n                                                </th>\r\n                                            </tr>\r\n                                                {results.map((result, i) =>\r\n                                                    <tr className=\"dgItemStyle\" key={`match-${result.provider_id}`}>\r\n                                                        <td className=\"ricercaSE\">\r\n                                                            <div className=\"ricercaEevento\">{result.sport_tournament_name}</div>\r\n                                                            <NavLink to={`/Sport/EventDetail?EventID=${result.provider_id}`}>{result.event_name}</NavLink>\r\n                                                        </td>\r\n                                                        <td className=\"ricercaData\">\r\n                                                            <span id=\"s_w_PC_PC_gridSottoEventi_ctl02_lblData\">{formatDate(result.schedule, 'DD/MM/YYYY HH:mm:ss')}</span>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                )}\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\TournamentSelector.js",["555"],"import React, {useEffect, useState} from 'react';\r\nimport {unSlugify} from \"../Utils/helpers\";\r\nimport {useSelector} from \"react-redux\";\r\nimport * as _ from 'lodash';\r\n\r\n\r\nexport default function TournamentSelector({history}) {\r\n    const {sport} = useSelector((state) => state.sportsData);\r\n    const [selections, setSelections] = useState([]);\r\n\r\n\r\n    const checkAll = () => {\r\n        const container = document.getElementById('tournaments');\r\n        const checkboxes = container.querySelectorAll('input[type=\"checkbox\"]');\r\n        const newSelections = [...selections];\r\n        _.each(checkboxes, (checkbox) => {\r\n            const id = checkbox.value;\r\n            if(checkbox.checked){\r\n                let index = newSelections.findIndex(item => item === id);\r\n                newSelections.splice(index, 1);\r\n                setSelections(newSelections);\r\n                checkbox.checked = false;\r\n            }else {\r\n                newSelections.push(id);\r\n                setSelections(newSelections);\r\n                checkbox.checked = true;\r\n            }\r\n        })\r\n    }\r\n\r\n    const checkChild = (cid) => {\r\n        const container = document.getElementById(cid);\r\n        const checkboxes = container.querySelectorAll('input[type=\"checkbox\"]');\r\n        const newSelections = [...selections];\r\n        _.each(checkboxes, (checkbox) => {\r\n            const id = checkbox.value;\r\n            if(checkbox.checked){\r\n                let index = newSelections.findIndex(item => item === id);\r\n                newSelections.splice(index, 1);\r\n                setSelections(newSelections);\r\n                checkbox.checked = false;\r\n            }else {\r\n                newSelections.push(id);\r\n                setSelections(newSelections);\r\n                checkbox.checked = true;\r\n            }\r\n        });\r\n    }\r\n\r\n    const handleSingleClick = e => {\r\n        const newSelections = [...selections];\r\n        const id = e.target.value;\r\n        console.log(e.target.checked);\r\n        if(e.target.checked){\r\n            newSelections.push(id);\r\n            setSelections(newSelections);\r\n        }else {\r\n            let index = newSelections.findIndex(item => item === id);\r\n            newSelections.splice(index, 1);\r\n            setSelections(newSelections);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!sport)\r\n            history.push('/');\r\n\r\n    }, [sport]);\r\n\r\n    return (\r\n        <div className=\"sports-book-page\">\r\n            <div className=\"filters-holder\">\r\n                <span>\r\n                    Filter\r\n                    <div className=\"filters-icon\">\r\n                        <img src=\"/img/star-icon.png\" alt=\"\" />\r\n                    </div>\r\n                </span>\r\n                <div className=\"search-form\">\r\n                    <input type=\"submit\" value=\"\"/>\r\n                    <input type=\"text\" placeholder=\"Filter Tournament\"/>\r\n                </div>\r\n                <div className=\"buttons-holder\">\r\n                    <div className=\"single-button\">\r\n                        <img src=\"/img/star-icon.png\" alt=\"\" />\r\n                        Add To Favourites\r\n                    </div>\r\n                    <div className=\"single-button\" onClick={() => {\r\n                        console.log(selections)}}>\r\n                        <img src=\"/img/proceed-button.png\" alt=\"\" />\r\n                        Proceed\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"title\">\r\n                <div className=\"title-icon\">\r\n                    <img src=\"/img/arrow-down.png\" alt=\"\"/>\r\n                </div>\r\n                <span>{unSlugify(sport?.name)}</span>\r\n                <div className=\"select-events\">\r\n                    <div className=\"check\" onClick={checkAll}>\r\n                        <input id=\"sf1\" className=\"sportFlag\" type=\"checkbox\"/>\r\n                        <span className=\"checkmark\" />\r\n                    </div>\r\n                    Select All\r\n                </div>\r\n            </div>\r\n            <table className=\"championship-table\" id=\"tournaments\">\r\n                <tbody>\r\n                {sport && sport.categories.map((category, index) =>\r\n                    <tr key={`sport-category-${index}`}>\r\n                        <td>\r\n                            <div className=\"single-tournament\">\r\n                                <div className=\"check\" onClick={(e) => checkChild(`c-${category.sport_category_id}`)}>\r\n                                    <input\r\n                                        id={`cat-${category.sport_category_id}`}\r\n                                        className=\"sportFlag\"\r\n                                        type=\"checkbox\"\r\n                                    />\r\n                                    <span className=\"checkmark\" />\r\n                                </div>\r\n                                <label htmlFor={`cat-${category.sport_category_id}`} className=\"tournament-name\">{category.name}</label>\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            <div className=\"tournaments-group\" id={`c-${category.sport_category_id}`}>\r\n                                {category.tournaments.map((tournament, t) =>\r\n                                    <div className=\"single-tournament\" key={`sport-t-${t}`}>\r\n                                        <div className=\"check\" >\r\n                                            <input\r\n                                                id={`t-${tournament.sport_tournament_id}`}\r\n                                                className=\"sportFlag\"\r\n                                                type=\"checkbox\"\r\n                                                onChange={(e) => handleSingleClick(e)}\r\n                                                value={tournament.sport_tournament_id}\r\n                                            />\r\n                                            <span className=\"checkmark\" />\r\n                                        </div>\r\n                                        <label htmlFor={`t-${tournament.sport_tournament_id}`} className=\"tournament-name\">{tournament.name}</label>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\SportOdds.js",["556"],"import React, {useEffect} from \"react\";\r\nimport Tablet from \"./Components/Tablet\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setTournaments} from \"../Redux/actions\";\r\n\r\nexport default function SportOdds({location, history}) {\r\n    const urlParam = new URLSearchParams(location.search);\r\n    const tid = urlParam.get('tid');\r\n    const sid = urlParam.get('sid');\r\n    const dispatch = useDispatch();\r\n\r\n    const {tournaments } = useSelector(state => state.sportsData);\r\n\r\n    useEffect(() => {\r\n        if(tid) {\r\n            const tournament = tournaments.find(tournament => tournament.sport_tournament_id === parseInt(tid));\r\n\r\n            if (!tournament) { // if new tournament, add to store\r\n                dispatch(setTournaments({tid, sid}));\r\n            }\r\n        }\r\n    }, [dispatch, sid, tid]);\r\n    \r\n\r\n    return (\r\n        <>\r\n            <div id=\"MainContent\" className=\"sport\">\r\n                {tournaments.length === 0 ? (\r\n                    <div className=\"iSBox ctrl_oddsView\" >\r\n                        <div className=\"oddsViewPanel\">\r\n                            <div className=\"empty\">\r\n                                <span>No Events Selected</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ):(\r\n                    tournaments.map((tournament, i) => <Tablet\r\n                        key={`tournament-${tournament.sport_tournament_id}`}\r\n                        index={i}\r\n                        history={history}\r\n                        tournament={tournament}/>)\r\n                )}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\TipsterBetslips.js",["557","558","559","560","561","562","563","564","565","566","567","568","569"],"import React, { useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getTipsterBetslips} from \"../Services/apis\";\r\nimport {SET_BETSLIP_DATA, SHOW_TIPSTER_BET} from \"../Redux/types\";\r\nimport Loader from \"./Components/Loader\";\r\nimport {formatName} from \"../Utils/helpers\";\r\nimport TipsterBet from \"./Components/Modals/TipsterBet\";\r\n\r\nexport default function TipsterBetslips({match}) {\r\n    const user_id = match.params.id;\r\n    const { tipsterBet} = useSelector((state) => state.sportsData);\r\n    const { user} = useSelector((state) => state.auth);\r\n    const [tipster, setTipster] = useState(null);\r\n    const [betslip, setBetslip] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const findTipster = () => {\r\n        setLoading(true);\r\n        getTipsterBetslips(user_id).then(res => {\r\n            setLoading(false);\r\n            setTipster(res);\r\n        }).catch(err => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (user_id)\r\n            findTipster();\r\n    }, [user_id]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div id=\"MainContent\" className=\"sport\">\r\n                {loading ?\r\n                    <Loader />\r\n                    :\r\n                    (tipster &&\r\n                        <div className=\"oddsViewPanel \">\r\n                            <div className={`divOdds`}>\r\n                                <div className=\"title\" style={{paddingLeft: '10px'}}>\r\n                                    <span>Open Tickets for { formatName(tipster.username) }</span>\r\n                                </div>\r\n                            </div>\r\n                            <table\r\n                                className=\"dgStyle\" cellSpacing=\"0\" border=\"0\"\r\n                                style={{borderWidth:'0px', borderStyle:'None', width:'100%',borderCollapse: 'collapse'}}>\r\n                                <tbody>\r\n                                    <tr className=\"dgHdrStyle\">\r\n                                        <th scope=\"col\" style={{textAlign: 'left'}}>\r\n                                            <a href=\"javascript:;\">Betslip ID</a>\r\n                                        </th>\r\n                                        <th scope=\"col\">\r\n                                            <a href=\"javascript:;\">Total Odds</a>\r\n                                        </th>\r\n                                        <th scope=\"col\">\r\n                                            <a href=\"javascript:;\">Minimum Stake</a>\r\n                                        </th>\r\n                                        <th scope=\"col\">\r\n                                            <a href=\"javascript:;\">Percentage</a>\r\n                                        </th>\r\n                                        <th align=\"center\" scope=\"col\">\r\n                                            <a href=\"javascript:;\">Action</a>\r\n                                        </th>\r\n                                    </tr>\r\n                                    {tipster.betslips.map((betslip, i) =>\r\n                                        (\r\n                                            betslip.length > 0 &&\r\n                                            <tr style={{padding: '10px', borderBottom: '1px solid'}} key={i}>\r\n                                                <td className=\"pl5\">\r\n                                                    <a href=\"javascript:;\" className=\"text-13 text-info\"\r\n                                                       onClick={() => {\r\n                                                           dispatch({type: SET_BETSLIP_DATA, payload: betslip})\r\n                                                       }}\r\n                                                    >{ `***********-${tipster.code}` } ({ betslip.selections.length } Events)</a>\r\n                                                </td>\r\n                                                <td style={{textAlign: 'center'}}>{betslip.odds}</td>\r\n                                                <td style={{textAlign: 'center'}}>{betslip.minimum_stake}</td>\r\n                                                <td style={{textAlign: 'center'}}>{betslip.percentage}</td>\r\n                                                <td className=\"\" style={{textAlign: 'center'}}>\r\n                                                    <button\r\n                                                        className=\"button btn-green\"\r\n                                                        disabled={user?.id === tipster.id}\r\n                                                        onClick={() => {\r\n                                                        dispatch({type: SHOW_TIPSTER_BET});\r\n                                                        setBetslip(betslip)\r\n                                                    }}>Rebet</button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>)\r\n                }\r\n            </div>\r\n            {tipsterBet && <TipsterBet dispatch={dispatch} betslip={betslip} reset={() => setBetslip(null)} />}\r\n        </>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\PrintFixtures.js",["570","571","572"],"C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Tipsters.js",["573"],"import React, { useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { getTipsters} from \"../Services/apis\";\r\nimport {LOADING} from \"../Redux/types\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {formatName} from \"../Utils/helpers\";\r\n\r\n\r\nexport default function Tipsters({location}) {\r\n\r\n    const [results, setResults] = useState([]);\r\n    const {loading} = useSelector((state) => state.login);\r\n    const dispatch = useDispatch();\r\n\r\n    const find = () => {\r\n        dispatch({type: LOADING});\r\n        getTipsters().then(res => {\r\n            dispatch({type: LOADING});\r\n            setResults(res.data);\r\n        }).catch(err => {\r\n\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        find();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div id=\"MainContent\" className=\"sport\">\r\n                {!loading && results.length === 0 &&\r\n                <div className=\"iSBox ctrl_oddsView\" >\r\n                    <div className=\"oddsViewPanel\">\r\n                        <div className=\"empty\">\r\n                            <span>No tipster available yet</span>\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n                {!loading && results.length > 0 &&\r\n                <div className=\"Riquadro\">\r\n                    <div className=\"CntSX\">\r\n                        <div className=\"CntDX\">\r\n                            <div id=\"s_w_PC_PC_panelSquare\">\r\n                                <div className=\"groupsDivMain\">\r\n                                    <p>Choose your tipster based on the most profitable, the most consistent or a combination. <br />\r\n                                        Played (P), Won (W), Lost (L), Open Ticket (OT) stats all available to help you to choose the best tipster for you.<br />\r\n                                        Click on the tipster name below for their current tips.\r\n                                    </p>\r\n                                    <div>\r\n                                        <table\r\n                                            className=\"dgStyle\" cellSpacing=\"0\" border=\"0\"\r\n                                            style={{borderWidth:'0px', borderStyle:'None', width:'100%',borderCollapse: 'collapse'}}>\r\n                                            <tbody>\r\n                                                <tr className=\"dgHdrStyle\">\r\n                                                    <th>POS</th>\r\n                                                    <th className=\"l-table__team\">Tipster Name</th>\r\n                                                    <th>P</th>\r\n                                                    <th>W</th>\r\n                                                    <th>L</th>\r\n                                                    <th>OT</th>\r\n                                                </tr>\r\n                                                {results.map((item, i) =>\r\n                                                    (parseInt(item.ongoing) !== 0 &&\r\n                                                    <tr className=\"dgItemStyle \" key={`match-${item.id}`} style={{textAlign: 'center'}}>\r\n                                                        <td>{i +1 }</td>\r\n                                                        <td className=\"text-left\">\r\n                                                            <NavLink to={`/Sport/Tipsters/${item.user_id}`}>\r\n                                                                <strong>{(item.user) ? formatName(item.user.username) : ' - '}</strong>\r\n                                                            </NavLink>\r\n                                                        </td>\r\n                                                        <td>{item.played}</td>\r\n                                                        <td>{item.won}</td>\r\n                                                        <td>({item.lost})</td>\r\n                                                        <td>{item.ongoing}</td>\r\n                                                    </tr>\r\n                                                    )\r\n                                                )}\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\layout\\JackpotLayout.js",[],"C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\CMSPages.js",["574"],"import React from \"react\";\r\nimport useSWR from \"swr/esm/use-swr\";\r\n\r\nexport default function CMSPages({match}) {\r\n    const slug = match.params.slug;\r\n\r\n    const {data, error} = useSWR(`/utilities/cms/page/${slug}`);\r\n\r\n    return (\r\n        <>\r\n            <div id=\"MainContent\" className=\"sport\" style={{padding: '10px'}}>\r\n                <h2>{data?.title}</h2>\r\n                <div  dangerouslySetInnerHTML={{ __html: data?.body}} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\LiveEventDetails.js",["575","576","577","578"],"import React, {useEffect, useState} from \"react\";\r\nimport '../Assets/scss/_live-details.scss';\r\nimport {getLiveFixtureData} from \"../Services/apis\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faChevronLeft} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {matchStatus} from \"../Utils/constants\";\r\nimport {formatOdd, isSelected, sortTeams} from \"../Utils/helpers\";\r\nimport {addToCoupon} from \"../Redux/actions\";\r\nimport {createID} from \"../Utils/couponHelpers\";\r\n\r\nexport function LiveEventDetails ({location, history}) {\r\n    const urlParam = new URLSearchParams(location.search);\r\n    const eventId = urlParam.get('EventID');\r\n    const [sport, setSport] = useState(null);\r\n    const [fixture, setFixture] = useState(null);\r\n    const [markets, setMarkets] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const dispatch = useDispatch();\r\n    const coupon = useSelector(({couponData}) => couponData.coupon);\r\n\r\n    const fetchFixture = () => {\r\n        getLiveFixtureData(eventId).then(res => {\r\n            setLoading(false);\r\n            if (res.Id === 0)\r\n                history.push('/Live/LiveDefault');\r\n\r\n            setSport(res);\r\n            setFixture(res.Tournaments[0].Events[0]);\r\n        }).catch(err => {\r\n            setLoading(false)\r\n            // console.log(err);\r\n        })\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        fetchFixture();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        const interval = setInterval(() => {\r\n            fetchFixture();\r\n        }, 5000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if(markets){\r\n            let newMarkets = fixture.Markets;\r\n\r\n            newMarkets.forEach((item, key) => {\r\n                // if(item.Status !== 0){\r\n                    item.Selections.forEach((selection, s) => {\r\n                        if (markets[key]) {\r\n                            let oldOdd = (markets[key].Selections[s]) ? parseFloat(markets[key].Selections[s].Odds[0].Value) : 0;\r\n                            let oldOddChange = (markets[key].Selections[s]) ? markets[key].Selections[s].OddChanged : '';\r\n                            let newOdd = parseFloat(selection.Odds[0].Value);\r\n\r\n                            if (newOdd > oldOdd) {\r\n                                selection.OddChanged = 'Increased';\r\n                                selection.Animate = true;\r\n                            } else if (newOdd < oldOdd) {\r\n                                selection.OddChanged = 'Decreased'\r\n                                selection.Animate = true;\r\n                            } else if (newOdd === 0) {\r\n                                selection.OddChanged = '';\r\n                            } else {\r\n                                selection.OddChanged = oldOddChange;\r\n                            }\r\n\r\n                            // if (coupon.selections.length) {\r\n                            //     checkOddsChange(coupon, fixture, selection, dispatch, SportsbookGlobalVariable, SportsbookBonusList);\r\n                            // }\r\n                        }\r\n                    });\r\n                // }\r\n                // console.log(item);\r\n            });\r\n\r\n            setMarkets(newMarkets);\r\n        } else {\r\n            setMarkets(fixture?.Markets);\r\n        }\r\n    }, [fixture]);\r\n\r\n\r\n    const selectOdds = (market, selection) => {\r\n        fixture.TournamentName = sport.Tournaments[0]?.Name;\r\n        fixture.SportName = sport.Name;\r\n        dispatch(addToCoupon(fixture, market.Id, market.Name, selection.Odds[0].Value, selection.Id, selection.Name,\r\n                createID(fixture.ProviderId, market.Id, selection.Name, selection.Id),'live'))\r\n    }\r\n\r\n    return (\r\n        <div id=\"eventContainer\">\r\n            <div className=\"headerItem\">\r\n                <div className=\"arrow-icon\" onClick={() => history.push('/Live/LiveDefault')}>\r\n                    <FontAwesomeIcon icon={faChevronLeft} />\r\n                </div>\r\n                {sport && <div className=\"breadcrumb\">\r\n                    {sport?.Name} / {sport?.Tournaments[0]?.Events[0]?.CategoryName} / {sport.Tournaments[0]?.Name}\r\n                </div> }\r\n                {fixture && <div className=\"event-details\">\r\n                    <div className=\"time-status\">\r\n                        {fixture?.MatchTime !== 0 && <span className=\"time\">{fixture.MatchTime}<span className=\"timeFlash\">'</span></span>}\r\n                        &nbsp;<span className=\"status\">{matchStatus(fixture?.MatchStatus)}</span>\r\n                    </div>\r\n                    <div className=\"event-name-score\">\r\n                        <span className=\"event-name home\">{sortTeams(fixture?.Teams)[0]?.Name}</span>\r\n                        <span className=\"score\">\r\n                            <span className=\"home\">{fixture?.HomeGameScore}</span>\r\n                            <span> - </span>\r\n                            <span className=\"away\">{fixture?.AwayGameScore}</span>\r\n                        </span>\r\n                        <span className=\"event-name away\">{sortTeams(fixture?.Teams)[1]?.Name}</span>\r\n                    </div>\r\n                </div>}\r\n            </div>\r\n            <ol id=\"live-bets-grid\" style={{letterSpacing: '-4px'}}>\r\n                {markets?.map(market =>\r\n                <li className=\"Bet\"\r\n                    style={{paddingLeft: '0px', paddingRight: '0px', marginLeft: '0px', marginRight: '0px', width: '100%', letterSpacing: 'normal'}}\r\n                    key={market.Id}\r\n                >\r\n                    <div className=\"BetContainer\">\r\n                        <div className=\"Header Relative\">\r\n                            <div className=\"Content\">\r\n                                <h4 data-bind=\"text: Caption\">{market.Name}</h4>\r\n                                <div className=\"ToggleButton\" title=\"Collapse All Bets\" />\r\n                                <div className=\"ToggleButton Toggled\" title=\"Expand All Bet\" style={{display: 'none'}} />\r\n                                <div className=\"FavoriteButton\" title=\"preferred\" />\r\n                            </div>\r\n                        </div>\r\n                        <ol style={{letterSpacing: '-4px'}}>\r\n                            {market.Status !== 0 && market.Selections && market.Selections.map(selection =>\r\n                                <li className={`Odds Relative ${market.Selections.length === 2 ? 'col-2' : 'col-3'}\r\n                                    ${isSelected(createID(fixture.ProviderId, market.Id, selection.Name, selection.Id), coupon) ? 'sel' : ''}\r\n                                `}\r\n                                    key={selection.Id}\r\n                                >\r\n                                <div\r\n                                    className={`Content ${selection.Odds[0].Status === 0 ? 'Lock' : ''}`}\r\n                                    onClick={() => selectOdds(market, selection)}\r\n                                >\r\n                                    <div className=\"Playability Ellipsed\">\r\n                                        <h5 title=\"1 (single)\" className=\"Single\">{selection.Name}</h5>\r\n                                    </div>\r\n                                    <div className=\"Trend Ellipsed\">\r\n                                        <h6 title=\"37.00\" className={`${selection.OddChanged} ${selection.Animate ? 'Animate' : ''}`}>{formatOdd(selection.Odds[0].Value)}</h6>\r\n                                    </div>\r\n                                </div>\r\n                            </li>)}\r\n\r\n                        </ol>\r\n                    </div>\r\n                </li>)}\r\n                <li id=\"live-bets-empty\" style={{display: 'none' }}>NoBets</li>\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\LiveBetting.js",["579","580"],"import React, {useEffect, useState} from \"react\";\r\nimport {getLiveFixtures} from \"../Services/apis\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faTrophy} from '@fortawesome/free-solid-svg-icons'\r\nimport {getLiveOdds, getSpread, slugify} from \"../Utils/helpers\";\r\nimport {LiveEventsOverview, matchStatus} from \"../Utils/constants\";\r\nimport {LiveOdd} from \"./Components/LiveOdd\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nexport function LiveBetting ({history}) {\r\n    const [availableSports, setAvailableSports] = useState([]);\r\n    const [sports, setSports] = useState([]);\r\n    const [filteredSports, setFilteredSports] = useState([]);\r\n    const [activeSport, setActiveSport] = useState('all');\r\n    const coupon = useSelector(({couponData}) => couponData.coupon);\r\n    const {SportsbookGlobalVariable, SportsbookBonusList} = useSelector((state) => state.sportsBook);\r\n\r\n    const getData = () => {\r\n        getLiveFixtures().then(response => {\r\n            // console.log(response);\r\n            setAvailableSports(response.AvailableSports);\r\n            let sports = response.Sports;\r\n            if(sports.length > 0){\r\n                sports.forEach((item, key) => {\r\n                    item.headers = LiveEventsOverview.find(sport => sport.id === item.Id);\r\n                });\r\n                setSports(sports)\r\n            }else{\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getLiveFixtures().then(response => {\r\n            setAvailableSports(response.AvailableSports)\r\n            let sports = response.Sports;\r\n            if(sports.length > 0){\r\n                sports.forEach((item, key) => {\r\n                    item.headers = LiveEventsOverview.find(sport => sport.id === item.Id);\r\n                });\r\n                setSports(sports);\r\n            }else{\r\n\r\n            }\r\n        })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        const interval = setInterval(() => {\r\n            getData();\r\n        }, 5000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        filterSports(activeSport);\r\n    }, [sports]);\r\n\r\n    const togglePanel = (e) => {\r\n        const parent = e.currentTarget.parentElement;\r\n        parent.classList.toggle('closed');\r\n    }\r\n\r\n    const filterSports = (sport)  => {\r\n        if (sport === 'all') {\r\n            setFilteredSports(sports);\r\n            setActiveSport('all');\r\n        } else {\r\n            const filter = sports.filter(el => el.Name === sport);\r\n            if (filter) {\r\n                setFilteredSports(filter);\r\n                setActiveSport(sport);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"topHeader panel-heading\">\r\n                <div className=\"sport-menu\">\r\n                    <div\r\n                        onClick={() => filterSports('all')}\r\n                        className={`menu all ${activeSport === 'all' ? 'selected' : ''}`}>\r\n                        <FontAwesomeIcon icon={faTrophy} />\r\n                        <span>All</span>\r\n                    </div>\r\n                    {availableSports.length > 0 && availableSports.map(sport =>\r\n                    <div\r\n                        onClick={() => filterSports(sport.Name)}\r\n                        className={`menu sport_${sport.Id} ${activeSport === sport.Name ? 'selected' : ''}`} key={sport.Id}>\r\n                        <span className={`live-item-icon icon_${sport.Id}`} />\r\n                        <span>{sport.Name}</span>\r\n                        <span className=\"sport-count\">{sport.EventCount}</span>\r\n                    </div>)}\r\n                </div>\r\n            </div>\r\n            <div id=\"live-grouped-odds\">\r\n                <div id=\"CNWrapper\">\r\n                    <div className=\"wrapper\">\r\n                        <div className=\"content\" id=\"divMainContentLive\">\r\n                            <div id=\"divPanelInPlayEvents\">\r\n                                <div id=\"divMainEventsLive\">\r\n                                    {filteredSports.map(sport =>\r\n                                        <div className=\"tipoSport\" key={sport.Id}>\r\n                                            <div\r\n                                                onClick={togglePanel}\r\n                                                className=\"sport\"\r\n                                                style={{backgroundImage: `url(/img/sports/live/${slugify(sport.Name)}.png)`}}\r\n                                            >\r\n                                                <span className=\"arrow\"  />\r\n                                                <div className=\"count\">({sport.EventCount})</div>\r\n                                                {sport.Name}\r\n                                            </div>\r\n                                            {sport.Tournaments.map(tournament =>\r\n                                            <div className=\"groups\" key={tournament.Id}>\r\n                                                <div className=\"group\">\r\n                                                    <div className=\"titleGroup\" onClick={togglePanel}>\r\n                                                        {tournament.Name}\r\n                                                        <span className=\"arrow\"  />\r\n                                                        <div className=\"count\">({tournament.Events.length})</div>\r\n                                                    </div>\r\n                                                    <div className=\"events\">\r\n                                                        {tournament.Events.map(match =>\r\n                                                            <div className=\"item\" key={match.Id}>\r\n                                                                <a className=\"codPub\">{match.SelectionCount} </a>\r\n                                                                <div className=\"evento\">\r\n                                                                    <span onClick={() => history.push(`/Live/LiveEventDetail?EventID=${match.Id}`)}>\r\n                                                                        {match.Name}\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                                <div className=\"time\">\r\n                                                                    {match.MatchTime !== 0 && <span className=\"min\">{match.MatchTime} min </span> }\r\n                                                                    <span className=\"fase\">{matchStatus(match.MatchStatus)}</span>\r\n                                                                </div>\r\n                                                                <div className=\"risultato over\">\r\n                                                                    <span className=\"c1\">{match.HomeGameScore}</span>&nbsp;-&nbsp;\r\n                                                                    <span className=\"c2\">{match.AwayGameScore}</span>\r\n                                                                </div>\r\n                                                                <div className=\"pnlQuote\">\r\n                                                                    <div className=\"container\">\r\n                                                                        <div className=\"quote\">\r\n                                                                            {sport.headers && sport.headers.markets.map(market =>\r\n                                                                            <div className={`mainSE o${market.outcomes.length}`} key={`${slugify(sport.Name)}-${market.id}`}>\r\n                                                                                <div className=\"SE\">{market.name}</div>\r\n                                                                                <div className={market.hasSpread ? 'hndItem' : ''}>\r\n                                                                                    {market.hasSpread &&\r\n                                                                                    <div className=\"hnd\">\r\n                                                                                        <div className=\"hndTitle\">hnd\r\n                                                                                        </div>\r\n                                                                                        <div className=\"hndValue\">{getSpread(match.Markets, market)}\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                    }\r\n                                                                                    {market.outcomes.map(outcome =>\r\n                                                                                    <div className={`OddsQuotaItemStyleTQ ${market.hasSpread ? 'hndItem' : ''} g1`} key={`${slugify(sport.Name)}-${market.id}-${outcome.id}`}>\r\n                                                                                        <LiveOdd\r\n                                                                                            newOdds={getLiveOdds(match.Markets, market, outcome)}\r\n                                                                                            outcome={outcome}\r\n                                                                                            market={market}\r\n                                                                                            fixture={match}\r\n                                                                                            tournament={tournament.Name}\r\n                                                                                            sport={sport.Name}\r\n                                                                                            coupon={coupon}\r\n                                                                                            globalVars={SportsbookGlobalVariable}\r\n                                                                                            bonusList={SportsbookBonusList}\r\n                                                                                        />\r\n                                                                                    </div>)}\r\n                                                                                </div>\r\n                                                                            </div> )}\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        )}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>)}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Redux\\actions\\index.js",[],"C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Account\\BetList.js",["581"],"import React, {useEffect, useState} from \"react\";\r\nimport moment from \"moment\";\r\nimport {cancelTicket, getBetList} from \"../../Services/apis\";\r\nimport {formatDate, formatNumber} from \"../../Utils/helpers\";\r\nimport BetListFilter from \"../Components/BetListFilter\";\r\nimport BetListOutcome from \"../Components/BetListOutcome\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Pagination from \"../Components/Pagination\";\r\nimport {LOADING} from \"../../Redux/types\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nexport default function BetList({match, history}) {\r\n    const [isCancel, setCancel] = useState({show: false, ticketId: ''});\r\n    const dispatch = useDispatch();\r\n\r\n    const [filterData, setFilterData] = useState({\r\n        from: moment().subtract(1, 'w').toDate(),\r\n        to: moment().toDate(),\r\n        period: '',\r\n        status: '',\r\n        betslip_id:'',\r\n        page_size: 15,\r\n    });\r\n\r\n    const [pagination, setPagination] = useState({\r\n        total: 0,\r\n        per_page: 2,\r\n        from: 1,\r\n        to: 0,\r\n        current_page: 1,\r\n        last_page: 0\r\n    });\r\n\r\n    const [totalStake, setTotalStake] = useState(0);\r\n    const [totalWinnings, setTotalWinnings] = useState(0);\r\n    const [loading, setLoading] = useState(true);\r\n    const [bets, setBets] = useState([]);\r\n    const {user} = useSelector(state => state.auth);\r\n\r\n    const fetchBetList = (page) => {\r\n        setLoading(true);\r\n        const data = {\r\n            type: filterData.type,\r\n            from: moment(filterData.from).format('DD/MM/YYYY'),\r\n            to: moment(filterData.to).format('DD/MM/YYYY'),\r\n            page_size: filterData.page_size,\r\n            betslip_id: filterData.betslip_id,\r\n            status: filterData.status\r\n        }\r\n        getBetList(data, page).then(res => {\r\n            setPagination({\r\n                total: res.tickets.total,\r\n                per_page: res.tickets.per_page,\r\n                from: res.tickets.from,\r\n                to: res.tickets.to,\r\n                current_page: res.tickets.current_page,\r\n                last_page: res.tickets.last_page\r\n            })\r\n            setBets(res.tickets.data);\r\n            setTotalWinnings(res.totalWon);\r\n            setTotalStake(res.totalSales);\r\n            setLoading(false);\r\n\r\n        }).catch(err => {\r\n            setLoading(false);\r\n\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchBetList(1);\r\n    }, []);\r\n\r\n    const handleChange = (name, value) => {\r\n        setFilterData({...filterData, [name]: value });\r\n    }\r\n\r\n    const confirmCancel = (ticketId) => {\r\n        setCancel({\r\n            ...isCancel,\r\n            show: true,\r\n            ticketId\r\n        });\r\n    }\r\n\r\n    const doCancel = () => {\r\n        dispatch({type: LOADING});\r\n        cancelTicket(isCancel.ticketId).then(res => {\r\n            dispatch({type: LOADING});\r\n            closeModal();\r\n            if(res.success) {\r\n                toast.success('Ticket has been canceled');\r\n                fetchBetList(pagination.current_page);\r\n            } else {\r\n                toast.error(res.message);\r\n            }\r\n        })\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setCancel({...isCancel, show: false});\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div id=\"MainContent\" className=\"\">\r\n                <div className=\"Riquadro\">\r\n                    <div className=\"CntSX\">\r\n                        <div className=\"CntDX\">\r\n                            <div className=\"betlist\">\r\n                                <BetListFilter filterData={filterData} handleChange={handleChange} fetchResult={fetchBetList} ticketsLength={bets.length} />\r\n                                <div className=\"divDg\">\r\n\r\n                                    {/*<div>\r\n                                        <table\r\n                                            className=\"dgStyle\" cellSpacing=\"0\" border=\"0\"\r\n                                            id=\"ac_w_PC_PC_BetList_grid\"\r\n                                            style={{\r\n                                                borderWidth:'0px',\r\n                                                borderStyle:'None',\r\n                                                width: '100%',\r\n                                                borderCollapse:'collapse'\r\n                                            }}>\r\n                                            <tbody>\r\n                                            <tr className=\"dgEmptyStyle\">\r\n                                                <td colSpan=\"12\">\r\n                                                    No record found\r\n                                                </td>\r\n                                            </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>*/}\r\n                                    <div>\r\n                                        <table className=\"dgStyle\" cellSpacing=\"0\" border=\"0\" id=\"ac_w_PC_PC_grid\"\r\n                                               style={{borderWidth:'0px', borderStyle:'None', width:'100%',borderCollapse: 'collapse'}}>\r\n                                            <tbody>\r\n                                            <tr className=\"dgHdrStyle\">\r\n                                                {user.role === 'Cashier' && <th></th> }\r\n                                                <th scope=\"col\" style={{textAlign: 'left'}}>Betslip</th>\r\n                                                <th scope=\"col\">User</th>\r\n                                                <th scope=\"col\">Bet Type</th>\r\n                                                <th scope=\"col\">Date</th>\r\n                                                <th scope=\"col\">Result Date</th>\r\n                                                <th className=\"dgHdrImporti\" scope=\"col\">Amount</th>\r\n                                                <th scope=\"col\">Outcome</th>\r\n                                                <th className=\"dgHdrImporti\" scope=\"col\">Winnings</th>\r\n                                            </tr>\r\n                                            {loading ? (\r\n                                                <tr className=\"dgItemStyle\">\r\n                                                    <td colSpan=\"12\">Loading...Please wait!</td>\r\n                                                </tr>\r\n                                            ):(\r\n                                                bets.length > 0 ? (\r\n                                                    bets.map((bet, i) =>\r\n                                                        <tr className=\"dgItemStyle\" key={bet.betslip_id}>\r\n                                                            {user.role === 'Cashier' && bet.status === 0 && (bet.active_selections.length === bet.selections.length) &&\r\n                                                            <td onClick={() => confirmCancel(bet.id)} style={{cursor: 'pointer'}}>\r\n                                                                <img src=\"/img/cancel-button.png\" alt=\"\" />\r\n                                                            </td>}\r\n                                                            <td className=\"btnsec codcoupon\">\r\n                                                                <NavLink\r\n                                                                   title=\"Dislpay Betslip\"\r\n                                                                   to={`/Account/BetDetail/${bet.betslip_id}`}>{bet.betslip_id}</NavLink>\r\n                                                            </td>\r\n                                                            <td align=\"center\">{bet.username}</td>\r\n                                                            <td align=\"center\">{bet.bet_type}</td>\r\n                                                            <td align=\"center\">{formatDate(bet.created_at, 'DD/MM/YYYY HH:mm:ss')}</td>\r\n                                                            <td align=\"center\">{bet.settled_at ? formatDate(bet.settled_at,  'DD/MM/YYYY HH:mm:ss') : ''}</td>\r\n                                                            <td align=\"right\">{formatNumber(bet.stake)}</td>\r\n                                                            <td align=\"center\">\r\n                                                                <BetListOutcome outcome={bet.status} />\r\n                                                            </td>\r\n                                                            <td align=\"right\">{bet.status === 0 ? formatNumber(bet.pot_winnings) : formatNumber(bet.winnings)}</td>\r\n                                                        </tr>\r\n                                                    )\r\n                                                ):(\r\n                                                    <tr className=\"dgEmptyStyle\">\r\n                                                        <td colSpan=\"12\">\r\n                                                            No record found\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                )\r\n                                            )}\r\n\r\n                                            <tr className=\"dgTotalsStyle\">\r\n                                                <td className=\"btnsec\" colSpan=\"4\" style={{width: '100%'}}>- Total Page -\r\n                                                </td>\r\n                                                <td className=\"dgTotalsImpPos\" colSpan=\"2\" style={{whiteSpace:'nowrap'}}>{formatNumber(totalStake)}</td>\r\n                                                <td colSpan=\"1\"></td>\r\n                                                <td className=\"dgTotalsImpNeg\" colSpan=\"1\" style={{whiteSpace:'nowrap'}}>{formatNumber(totalWinnings)}</td>\r\n                                                <td colSpan=\"4\"></td>\r\n                                            </tr>\r\n                                            {/*<tr className=\"dgTotalsStyle\">\r\n                                                <td className=\"btnsec\" colSpan=\"4\" style={{width: '100%'}}>- Total -</td>\r\n                                                <td className=\"dgTotalsImpPos\" colSpan=\"2\" style={{whiteSpace:'nowrap'}}></td>\r\n                                                <td colSpan=\"1\"></td>\r\n                                                <td className=\"dgTotalsImpNeg\" colSpan=\"1\" style={{whiteSpace:'nowrap'}}></td>\r\n                                                <td colSpan=\"4\"></td>\r\n                                            </tr>*/}\r\n                                            <Pagination\r\n                                                colspan={9}\r\n                                                data={pagination}\r\n                                                offset={10}\r\n                                                changePage={fetchBetList} />\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {isCancel.show && <div className=\"bet-confirm-popup-wrapper\">\r\n            <div className=\"bet-confirm-popup\">\r\n                <div className=\"close-bet-confirm-popup\" onClick={closeModal}>\r\n                    <i className=\"fa fa-times\" aria-hidden=\"true\" />\r\n                </div>\r\n                <div className=\"bet-confirm-content\">\r\n                    <div className=\"title\">\r\n                        <img src=\"/img/bet-confirm-info.png\" alt=\"\" />\r\n                        <span>Are you sure you want to cancel this ticket?<br />\r\n                        <small style={{color: 'red'}}>Note: You can only cancel tickets within 5 mins after registering the ticket</small>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"buttons\">\r\n                        <div className=\"cancel-button button\" onClick={closeModal}>\r\n                            No\r\n                        </div>\r\n                        <div className=\"confirm-button button\" onClick={doCancel}>\r\n                            Yes\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>}\r\n        </>\r\n    );\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Account\\ChangePassword.js",["582"],"import React, {useState} from \"react\";\r\nimport {Formik, Field} from \"formik\";\r\nimport {changePassword} from \"../../Services/apis\";\r\nimport * as Yup from \"yup\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {LOADING, REMOVE_USER_DATA, SHOW_MODAL} from \"../../Redux/types\";\r\n\r\nconst ChangePasswordSchema = Yup.object().shape({\r\n    old_password: Yup.string()\r\n        .min(3, \"Minimum 4 letters\")\r\n        .required(\"Enter your old password\"),\r\n    new_password: Yup.string()\r\n        .min(3, \"Minimum 4 letters\")\r\n        .required(\"Enter a new password\"),\r\n    conf_password: Yup.string()\r\n        .min(3, \"Minimum 4 letters\")\r\n        .oneOf([Yup.ref('new_password'), null], 'Passwords must match')\r\n        .required(\"Confirm your new password\"),\r\n});\r\n\r\nexport default function ChangePassword({match, history}) {\r\n    const [errMsgs, setErrMsgs] = useState([]);\r\n    const dispatch = useDispatch();\r\n\r\n    const submitForm = (values, {setSubmitting}) => {\r\n        dispatch({type: LOADING});\r\n\r\n        changePassword(values).then(res => {\r\n            setSubmitting(false);\r\n            dispatch({type: LOADING});\r\n\r\n            if(res.success) {\r\n                // dispatch({type: SHOW_MODAL, payload: {show: true, type: 'message', title: 'Password Change Successful', message: 'Your password has been changed successfully. Login to continue'}})\r\n                setTimeout(() => {\r\n                    dispatch({type: REMOVE_USER_DATA});\r\n                    history.push('/');\r\n                }, 2000);\r\n            } else {\r\n                setErrMsgs([...errMsgs, res.message]);\r\n            }\r\n        }).catch(err=> {\r\n            setSubmitting(false);\r\n            dispatch({type: LOADING});\r\n\r\n            if (err.response.status === 422){\r\n                let errors = Object.values(err.response.data.errors);\r\n                errors = errors.flat();\r\n                setErrMsgs(errors);\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div id=\"MainContent\" className=\"\">\r\n                <div className=\"Riquadro\">\r\n                    <div className=\"CntSX\">\r\n                        <div className=\"CntDX\">\r\n                            <div id=\"s_w_PC_PC_panelSquare\">\r\n                                <div className=\"RiquadroNews Reg\">\r\n                                    <div className=\"Cnt\">\r\n                                        <div>\r\n                                            <div id=\"s_w_PC_PC_upDati\">\r\n                                                <div id=\"s_w_PC_PC_panelPwd\">\r\n                                                    <Formik\r\n                                                        enableReinitialize={true}\r\n                                                        initialValues={{\r\n                                                            old_password: '',\r\n                                                            new_password: '',\r\n                                                            conf_password: '',\r\n                                                        }}\r\n                                                        validationSchema={ChangePasswordSchema}\r\n                                                        children={(props) => <ChangePasswordForm {...props} />}\r\n                                                        onSubmit={submitForm}\r\n                                                    />\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport function ChangePasswordForm({\r\n                                       errors,\r\n                                       touched,\r\n                                       setFieldValue,\r\n                                       handleSubmit,\r\n                                       isSubmitting,\r\n                                       isValid,\r\n                                       values,\r\n                                   }) {\r\n    const {new_password, old_password, conf_password} = values;\r\n\r\n    return (\r\n        <form className=\"account form p15\" id=\"change-password\" onSubmit={handleSubmit} noValidate=\"novalidate\">\r\n            <table width=\"100%\" cellSpacing=\"0\" className=\"tblPP\">\r\n                <tbody>\r\n                <tr>\r\n                    <td colSpan=\"4\" className=\"cellaInfo\">In this section you\r\n                        will be able to modify your password you insert a\r\n                        different new password that or from the precedence.\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td className=\"cellaSx\" width=\"100%\">Current Password</td>\r\n                    <td className=\"cellaSx\"><b>*</b></td>\r\n                    <td className=\"cellaDx\">\r\n                        <Field\r\n                            name=\"old_password\"\r\n                            type=\"password\"\r\n                            maxLength=\"32\"\r\n                            value={old_password}\r\n                            id=\"s_w_PC_PC_CurrentPassword\"\r\n                            className=\"textbox\"\r\n                            style={{width: '150px' }}\r\n                        />\r\n                        {errors.old_password && touched.old_password ? (\r\n                            <span id=\"s_w_PC_PC_reqCurrentPassword\" style={{color:'Red'}}>\r\n                                <span className=\"imgError\">{errors.old_password}</span>\r\n                            </span>\r\n                        ) : null}\r\n                    </td>\r\n                    <td className=\"rfv\">\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td className=\"cellaSx\">Password</td>\r\n                    <td className=\"cellaSx\"><b>*</b></td>\r\n                    <td className=\"cellaDx\">\r\n                        <Field\r\n                            name=\"new_password\"\r\n                            type=\"password\"\r\n                            maxLength=\"32\"\r\n                            value={new_password}\r\n                            id=\"s_w_PC_PC_Password\"\r\n                            className=\"textbox\"\r\n                            style={{width: '150px'}}\r\n                        />\r\n                        {errors.password && touched.password ? (\r\n                            <span id=\"s_w_PC_PC_reqPassword\" style={{color:'Red'}}>\r\n                                <span className=\"imgError\">{errors.password}</span>\r\n                            </span>\r\n                        ) : null}\r\n                    </td>\r\n                    <td className=\"rfv\">\r\n\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td className=\"cellaSx\">Confirm Password</td>\r\n                    <td className=\"cellaSx\"><b>*</b></td>\r\n                    <td className=\"cellaDx\">\r\n                        <Field\r\n                            name=\"conf_password\"\r\n                            type=\"password\"\r\n                            value={conf_password}\r\n                            maxLength=\"32\"\r\n                            id=\"s_w_PC_PC_Confirm\"\r\n                            className=\"textbox\"\r\n                            style={{width:'150px'}}\r\n                        />\r\n                        {errors.conf_password && touched.conf_password ? (\r\n                            <span id=\"s_w_PC_PC_reqConfirmPassword\" style={{color:'Red'}}>\r\n                                <span className=\"imgError\">{errors.conf_password}</span>\r\n                            </span>\r\n                        ) : null}\r\n                    </td>\r\n                    <td className=\"rfv\">\r\n\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td colSpan=\"4\">\r\n                        <div className=\"spacer5\"/>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td align=\"right\" colSpan=\"3\">\r\n                        <input\r\n                            type=\"button\"\r\n                            name=\"s$w$PC$PC$btnResetPwd\"\r\n                            value=\"Clear\" id=\"s_w_PC_PC_btnResetPwd\"\r\n                            className=\"button\"\r\n                        />\r\n                        <button type=\"submit\" disabled={isSubmitting} className=\"button\" id=\"updatePassword\">Confirm</button>\r\n                    </td>\r\n                    <td></td>\r\n                </tr>\r\n                </tbody>\r\n            </table>\r\n        </form>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Account\\TransactionList.js",["583","584","585","586"],"import React, {useEffect, useState} from \"react\";\r\nimport moment from \"moment\";\r\nimport {getTransactions} from \"../../Services/apis\";\r\nimport {formatDate, formatNumber} from \"../../Utils/helpers\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport Pagination from \"../Components/Pagination\";\r\n\r\nexport default function TransactionList() {\r\n    const [filterData, setFilterData] = useState({\r\n        type: '',\r\n        from: moment().subtract(1, 'w').toDate(),\r\n        to: moment().toDate(),\r\n        page_size: 15,\r\n    });\r\n\r\n    const [pagination, setPagination] = useState({\r\n        total: 0,\r\n        per_page: 2,\r\n        from: 1,\r\n        to: 0,\r\n        current_page: 1,\r\n        last_page: 0\r\n    });\r\n\r\n    const [totalCredit, setTotalCredit] = useState(0);\r\n    const [loading, setLoading] = useState(true);\r\n    const [totalDebit, setTotalDebit] = useState(0);\r\n    const [transactions, setTransactions] = useState([]);\r\n\r\n    const fetchTransactions = (page) => {\r\n        setLoading(true);\r\n        const data = {\r\n            type: filterData.type,\r\n            from: moment(filterData.from).format('DD/MM/YYYY'),\r\n            to: moment(filterData.to).format('DD/MM/YYYY'),\r\n            page_size: filterData.page_size\r\n        }\r\n        getTransactions(data, page).then(res => {\r\n            setPagination({\r\n                total: res.transactions.total,\r\n                per_page: res.transactions.per_page,\r\n                from: res.transactions.from,\r\n                to: res.transactions.to,\r\n                current_page: res.transactions.current_page,\r\n                last_page: res.transactions.last_page\r\n            })\r\n            setTransactions(res.transactions.data);\r\n            setTotalCredit(res.page_credit);\r\n            setTotalDebit(res.page_debit);\r\n            setLoading(false);\r\n\r\n        }).catch(err => {\r\n            setLoading(false);\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchTransactions(1);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div id=\"MainContent\">\r\n                <div className=\"Riquadro\">\r\n                    <div className=\"CntSX\">\r\n                        <div className=\"CntDX\">\r\n                            <div className=\"transactionList\">\r\n                                <div className=\"RiquadroSrc\">\r\n                                    <div className=\"Cnt\">\r\n                                        <div>\r\n                                            <table className=\"SearchContainerStyle\">\r\n                                                <tbody>\r\n                                                <tr className=\"SearchSectionStyle\">\r\n                                                    <td className=\"SearchDescStyle\">\r\n                                                        Amounts\r\n                                                    </td>\r\n                                                    <td className=\"SearchControlsStyle\">\r\n                                                        <table width=\"100%\">\r\n                                                            <tbody>\r\n                                                            <tr>\r\n                                                                <td width=\"19%\" align=\"left\">\r\n                                                                    Type\r\n                                                                </td>\r\n                                                                <td width=\"81%\" align=\"left\" colSpan=\"3\">\r\n                                                                    <table id=\"ac_w_PC_PC_rblTipoImporto\" border=\"0\">\r\n                                                                        <tbody>\r\n                                                                        <tr>\r\n                                                                            <td>\r\n                                                                                <input\r\n                                                                                    id=\"ac_w_PC_PC_rblTipoImporto_0\"\r\n                                                                                    type=\"radio\"\r\n                                                                                    name=\"ac$w$PC$PC$rblTipoImporto\"\r\n                                                                                    value=\"-1\" />\r\n                                                                                <label htmlFor=\"ac_w_PC_PC_rblTipoImporto_0\">All</label>\r\n                                                                            </td>\r\n                                                                            <td>\r\n                                                                                <input\r\n                                                                                    id=\"ac_w_PC_PC_rblTipoImporto_1\"\r\n                                                                                    type=\"radio\"\r\n                                                                                    name=\"ac$w$PC$PC$rblTipoImporto\"\r\n                                                                                    value=\"1\" />\r\n                                                                                <label htmlFor=\"ac_w_PC_PC_rblTipoImporto_1\">Credits</label>\r\n                                                                            </td>\r\n                                                                            <td>\r\n                                                                                <input\r\n                                                                                    id=\"ac_w_PC_PC_rblTipoImporto_2\"\r\n                                                                                    type=\"radio\"\r\n                                                                                    name=\"ac$w$PC$PC$rblTipoImporto\"\r\n                                                                                    value=\"2\" />\r\n                                                                                <label htmlFor=\"ac_w_PC_PC_rblTipoImporto_2\">Debits</label>\r\n                                                                            </td>\r\n                                                                        </tr>\r\n                                                                        </tbody>\r\n                                                                    </table>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr className=\"SearchSectionStyle\">\r\n                                                    <td className=\"SearchDescStyle\">\r\n                                                        Transaction\r\n                                                    </td>\r\n                                                    <td className=\"SearchControlsStyle\">\r\n                                                        <table width=\"100%\">\r\n                                                            <tbody>\r\n                                                            <tr>\r\n                                                                <td width=\"20%\" align=\"left\">\r\n                                                                    Type\r\n                                                                </td>\r\n                                                                <td width=\"30%\" align=\"left\">\r\n                                                                    <select name=\"ac$w$PC$PC$ddlCausale\"\r\n                                                                        id=\"ac_w_PC_PC_ddlCausale\"\r\n                                                                        value={filterData.type}\r\n                                                                        onChange={(e) => setFilterData({...filterData, type: e.target.value})}\r\n                                                                        className=\"dropdown\" style={{width: '150px'}}>\r\n                                                                        <option selected=\"selected\" value=\"\"></option>\r\n                                                                        <option value=\"Bet Deposit\">Sports Deposit</option>\r\n                                                                        <option value=\"Deposit\">Deposits</option>\r\n                                                                        <option value=\"Withdrawal\">Withdrawals</option>\r\n                                                                    </select>\r\n                                                                </td>\r\n                                                                <td width=\"20%\"></td>\r\n                                                                <td width=\"30%\"></td>\r\n                                                            </tr>\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr className=\"SearchSectionStyle\">\r\n                                                    <td className=\"SearchDescStyle\">\r\n                                                        Transaction Type\r\n                                                    </td>\r\n                                                    <td className=\"SearchControlsStyle\">\r\n                                                        <table width=\"100%\">\r\n                                                            <tbody>\r\n                                                            <tr>\r\n                                                                <td width=\"20%\" align=\"left\">\r\n                                                                    Type\r\n                                                                </td>\r\n                                                                <td width=\"30%\" align=\"left\">\r\n                                                                    <table id=\"ac_w_PC_PC_chklTipoCausale\" border=\"0\">\r\n                                                                        <tbody>\r\n                                                                        <tr>\r\n                                                                            <td>\r\n                                                                                <input id=\"ac_w_PC_PC_chklTipoCausale_0\"\r\n                                                                                       type=\"checkbox\"\r\n                                                                                       name=\"ac$w$PC$PC$chklTipoCausale$0\"\r\n                                                                                       checked=\"checked\" />\r\n                                                                                <label htmlFor=\"ac_w_PC_PC_chklTipoCausale_0\">Normal</label>\r\n                                                                            </td>\r\n                                                                        </tr>\r\n                                                                        <tr>\r\n                                                                            <td>\r\n                                                                                <input\r\n                                                                                    id=\"ac_w_PC_PC_chklTipoCausale_1\"\r\n                                                                                    type=\"checkbox\"\r\n                                                                                    name=\"ac$w$PC$PC$chklTipoCausale$1\"\r\n                                                                                    checked=\"checked\" />\r\n                                                                                <label htmlFor=\"ac_w_PC_PC_chklTipoCausale_1\">Virtual Bets</label></td>\r\n                                                                        </tr>\r\n                                                                        </tbody>\r\n                                                                    </table>\r\n                                                                </td>\r\n                                                                <td width=\"20%\">\r\n\r\n                                                                </td>\r\n                                                                <td width=\"30%\">\r\n\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr className=\"SearchSectionStyle\">\r\n                                                    <td className=\"SearchDescStyle\">\r\n                                                        Transaction Date\r\n                                                    </td>\r\n                                                    <td className=\"SectionControlStyle\">\r\n                                                        <table width=\"100%\">\r\n                                                            <tbody>\r\n                                                            <tr>\r\n                                                                <td width=\"20%\" align=\"left\"\r\n                                                                    className=\"SearchControlsStyleFrom\">\r\n                                                                    From\r\n                                                                </td>\r\n                                                                <td width=\"30%\" align=\"left\">\r\n                                                                    <DatePicker\r\n                                                                        dateFormat=\"dd/MM/yyyy\"\r\n                                                                        selected={filterData.from}\r\n                                                                        className=\"textbox\"\r\n                                                                        style={{width:'75px' }}\r\n                                                                        onChange={date => setFilterData({...filterData, from: date})} />\r\n                                                                </td>\r\n                                                                <td width=\"20%\" align=\"right\"\r\n                                                                    className=\"SearchControlsStyleTo\">\r\n                                                                    To\r\n                                                                </td>\r\n                                                                <td width=\"30%\" align=\"left\">\r\n                                                                    <DatePicker\r\n                                                                        dateFormat=\"dd/MM/yyyy\"\r\n                                                                        selected={filterData.to}\r\n                                                                        className=\"textbox\"\r\n                                                                        style={{width:'75px' }}\r\n                                                                        onChange={date => setFilterData({...filterData, to: date})} />\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"SearchDescStyle\">\r\n                                                        Page Size\r\n                                                    </td>\r\n                                                    <td className=\"SearchControlsStyle\">\r\n                                                        <table className=\"SearchControlsContainerStyle\">\r\n                                                            <tbody>\r\n                                                            <tr>\r\n                                                                <td width=\"20%\" className=\"SearchControlDesc\">\r\n                                                                    &nbsp;\r\n                                                                </td>\r\n                                                                <td width=\"80%\" colSpan=\"3\">\r\n                                                                    <select name=\"ac$w$PC$PC$ddlPageSize\"\r\n                                                                            id=\"ac_w_PC_PC_ddlPageSize\"\r\n                                                                            value={filterData.page_size}\r\n                                                                            onChange={(e) => setFilterData({...filterData, page_size: e.target.value})}\r\n                                                                            className=\"dropdown\" style={{width: '75px' }}>\r\n                                                                        <option value={15}>15</option>\r\n                                                                        <option value={50}>50</option>\r\n                                                                        <option value={100}>100</option>\r\n\r\n                                                                    </select>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                            <table className=\"SearchButtonsStyle\">\r\n                                                <tbody>\r\n                                                <tr>\r\n                                                    <td>\r\n\r\n                                                    </td>\r\n                                                    <td className=\"tdSrcSX\">\r\n                                                        <input type=\"button\"\r\n                                                               name=\"ac$w$PC$PC$btnCancella\"\r\n                                                               value=\"Cancel\"\r\n                                                               className=\"button\" />\r\n                                                    </td>\r\n                                                    <td className=\"tdSrcDX\">\r\n                                                        <input\r\n                                                            onClick={() => fetchTransactions(1)}\r\n                                                            type=\"button\"\r\n                                                            name=\"ac$w$PC$PC$btnAvanti\"\r\n                                                            value=\"Continue\"\r\n                                                            id=\"ac_w_PC_PC_btnAvanti\" className=\"button\"\r\n                                                        />\r\n                                                    </td>\r\n                                                </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <table id=\"tblSearch2\" className=\"SearchContainerStyle RiepilogoMovimenti\">\r\n                                    <tbody>\r\n                                    <tr className=\"SearchSectionStyle\">\r\n                                        <td className=\"SearchDescStyle\">\r\n                                            <div style={{position:'relative'}}>\r\n                                                Credit\r\n                                                <div className=\"Dati\">\r\n                                                    <span id=\"ac_w_PC_PC_lblDare\">{formatNumber(totalCredit)}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td className=\"SearchControlsStyle\"></td>\r\n                                    </tr>\r\n                                    <tr className=\"SearchSectionStyle\">\r\n                                        <td className=\"SearchDescStyle\">\r\n                                            <div style={{position:'relative'}}>\r\n                                                Debit\r\n                                                <div className=\"Dati\">\r\n                                                    <span id=\"ac_w_PC_PC_lblAvere\">{formatNumber(totalDebit)}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td className=\"SearchControlsStyle\"></td>\r\n                                    </tr>\r\n                                    <tr className=\"SearchSectionStyle\">\r\n                                        <td className=\"SearchDescStyle\">\r\n                                            <div style={{position:'relative'}}>\r\n                                                Total Balance\r\n                                                <div className=\"Dati\">\r\n                                                    <span id=\"ac_w_PC_PC_lblTotale\">{formatNumber(parseFloat(totalCredit) - parseFloat(totalDebit))}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td className=\"SearchControlsStyle\"></td>\r\n                                    </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                                <br />\r\n                                <div className=\"divDg\">\r\n                                    <div>\r\n                                        {transactions.length > 0 &&\r\n                                        <table className=\"dgStyle\" cellSpacing=\"0\" border=\"0\" id=\"ac_w_PC_PC_grid\"\r\n                                               style={{borderWidth:'0px', borderStyle:'None', width:'100%',borderCollapse: 'collapse'}}>\r\n                                            <tbody>\r\n                                            <tr className=\"dgHdrStyle\">\r\n                                                <th scope=\"col\">&nbsp;</th>\r\n                                                <th align=\"center\" scope=\"col\">ID</th>\r\n                                                <th align=\"center\" scope=\"col\">Date</th>\r\n                                                <th align=\"center\" scope=\"col\">Transaction</th>\r\n                                                <th align=\"center\" scope=\"col\">Betslip</th>\r\n                                                <th className=\"dgHdrImporti\" scope=\"col\">Credit</th>\r\n                                                <th className=\"dgHdrImporti\" scope=\"col\">Debit</th>\r\n                                                <th align=\"center\" scope=\"col\">Subject</th>\r\n                                                <th className=\"dgHdrImporti\" scope=\"col\">Balance</th>\r\n                                            </tr>\r\n                                            {!loading && transactions.map(transaction =>\r\n                                            <tr className=\"dgItemStyle\" key={transaction.reference_no}>\r\n                                                <td align=\"center\">\r\n                                                    <a title=\"See detail\"\r\n                                                       href=\"#\">\r\n                                                        <img title=\"See detail\" src=\"/img/Dettagli.gif\"\r\n                                                        style={{ borderWidth:'0px'}} />\r\n                                                     </a>\r\n                                                </td>\r\n                                                <td align=\"center\">{transaction.reference_no}</td>\r\n                                                <td align=\"center\">\r\n                                                    <span id=\"ac_w_PC_PC_grid_ctl02_lblData\">{formatDate(transaction.created_at, 'DD/MM/YYYY HH:mm:ss')}</span>\r\n                                                </td>\r\n                                                <td align=\"center\">{transaction.subject}</td>\r\n                                                <td align=\"center\">\r\n                                                    {(transaction.subject === 'Bet Deposit' || transaction.subject === 'Sport Win') &&\r\n                                                    <a title=\"See coupon\" href=\"#\">{transaction.description}</a>}\r\n                                                </td>\r\n                                                <td align=\"right\">{transaction.tranx_type === 'credit' ? formatNumber(transaction.amount) : ''}</td>\r\n                                                <td align=\"right\">{transaction.tranx_type === 'debit' ? formatNumber(transaction.amount) : ''}</td>\r\n                                                <td align=\"center\">{transaction.description}</td>\r\n                                                <td className=\"dgHdrImporti\" align=\"right\">{(transaction.tranx_type === 'credit')? transaction.to_user_balance : transaction.from_user_balance}</td>\r\n                                            </tr>)}\r\n                                            <Pagination\r\n                                                colspan={10}\r\n                                                data={pagination}\r\n                                                offset={10}\r\n                                                changePage={fetchTransactions}\r\n                                            />\r\n\r\n                                            {loading && <tr className=\"dgItemStyle\">\r\n                                                <td colSpan=\"10\">Loading...Please wait!</td>\r\n                                            </tr>}\r\n\r\n                                            </tbody>\r\n                                        </table> }\r\n                                        {transactions.length === 0 && !loading &&\r\n                                        <table className=\"dgStyle\" cellSpacing=\"0\" border=\"0\" id=\"ac_w_PC_PC_grid\"\r\n                                               style={{borderWidth:'0px', borderStyle:'None', width:'100%',borderCollapse: 'collapse'}}>\r\n                                        <tbody>\r\n                                            <tr className=\"dgEmptyStyle\">\r\n                                                <td colSpan=\"10\" align=\"center\">\r\n                                                No record found\r\n                                                </td>\r\n                                            </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                        }\r\n                                    </div>\r\n                                    <br />\r\n                                    <br />\r\n                                    <div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Account\\PersonalData.js",["587","588","589","590"],"import React, {useCallback, useEffect, useState} from \"react\";\r\nimport { formatNumber} from \"../../Utils/helpers\";\r\nimport {getPersonalData} from \"../../Services/apis\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nexport default function PersonalData({history}) {\r\n    const {SportsbookGlobalVariable} = useSelector((state) => state.sportsBook);\r\n\r\n    const [personalData, setPersonalData] = useState({\r\n        first_name: '',\r\n        code: '',\r\n        last_name: '',\r\n        date_of_birth: '',\r\n        gender: '',\r\n        country_id: '',\r\n        state_id: '',\r\n        city: '',\r\n        address: '',\r\n        phone_number: '',\r\n        username: '',\r\n        email: '',\r\n        balance: 0\r\n    });\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n\r\n    const init = useCallback(() => {\r\n        getPersonalData().then(res => {\r\n            setPersonalData({\r\n                ...personalData,\r\n                code: res.user.code,\r\n                first_name: res.user.details.first_name,\r\n                last_name: res.user.details.last_name,\r\n                date_of_birth: res.user.details.date_of_birth,\r\n                gender: res.user.details.gender,\r\n                country_id: res.user.details.country_id,\r\n                state_id: res.user.details.state_id,\r\n                city: res.user.details.city,\r\n                address: res.user.details.address,\r\n                phone_number: res.user.details.phone_number,\r\n                username: res.user.username,\r\n                email: res.user.email,\r\n                balance: res.user.balance,\r\n            });\r\n            setCountries(res.countries);\r\n            setStates(res.states);\r\n        }).catch(err => {});\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        init();\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div id=\"MainContent\" className=\"\">\r\n                <div className=\"Riquadro\">\r\n                    {/*<div className=\"TopSX\">\r\n                        <div className=\"TopDX\"><h3>User Details</h3></div>\r\n                    </div>*/}\r\n                    <div className=\"CntSX\">\r\n                        <div className=\"CntDX\">\r\n                            <div id=\"s_w_PC_PC_panelSquare\">\r\n                                <div className=\"RiquadroNews Reg\">\r\n                                    <div className=\"Cnt\">\r\n                                        <div>\r\n                                            <div id=\"s_w_PC_PC_upDati\">\r\n                                                <table width=\"100%\" cellSpacing=\"0\" className=\"tblDatiUser\">\r\n                                                    <tbody>\r\n                                                    <tr>\r\n                                                        <td className=\"cellaSx\" width=\"100%\">ID</td>\r\n                                                        <td className=\"cellaSx\">&nbsp;</td>\r\n                                                        <td className=\"cellaDx\">\r\n                                                            <input\r\n                                                                name=\"s$w$PC$PC$txtIDUtente\"\r\n                                                                type=\"text\" value={personalData.code}\r\n                                                                id=\"s_w_PC_PC_txtIDUtente\"\r\n                                                                disabled=\"disabled\"\r\n                                                                className=\"textbox\"\r\n                                                            />\r\n                                                        </td>\r\n                                                        <td className=\"rfv\" style={{width: '15px'}}/>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className=\"cellaSx\">Username</td>\r\n                                                        <td className=\"cellaSx\"><b>*</b></td>\r\n                                                        <td className=\"cellaDx\">\r\n                                                            <input\r\n                                                                name=\"s$w$PC$PC$Username\"\r\n                                                                type=\"text\" value={personalData.username}\r\n                                                                maxLength=\"20\"\r\n                                                                id=\"s_w_PC_PC_Username\"\r\n                                                                disabled=\"disabled\"\r\n                                                                className=\"textbox\"\r\n                                                            />\r\n                                                            </td>\r\n                                                            <td className=\"rfv\"/>\r\n                                                        </tr>\r\n                                                        <tr id=\"rowEmailAddress\">\r\n                                                            <td className=\"cellaSx\">Email</td>\r\n                                                            <td className=\"cellaSx\"><b>*</b></td>\r\n                                                            <td className=\"cellaDx\">\r\n                                                                <input\r\n                                                                    name=\"s$w$PC$PC$Email\" type=\"text\"\r\n                                                                    value={personalData.email} maxLength=\"50\"\r\n                                                                    id=\"s_w_PC_PC_Email\" disabled=\"disabled\"\r\n                                                                    className=\"textbox\" />\r\n                                                            </td>\r\n                                                            <td className=\"rfv\">\r\n                                                                <span id=\"s_w_PC_PC_reqEmail\" style={{color:'Red', display:'none'}}>\r\n                                                                    <span className=\"imgError\"/>\r\n                                                                </span>\r\n                                                                <span id=\"s_w_PC_PC_cvFormatoEmail\" style={{color:'Red', display:'none'}}>\r\n                                                                    <span className=\"imgError\"/>\r\n                                                                </span>\r\n                                                            </td>\r\n                                                        </tr>\r\n\r\n                                                        <tr>\r\n                                                            <td className=\"cellaSx\">Name</td>\r\n                                                            <td className=\"cellaSx\"><b>*</b></td>\r\n                                                            <td className=\"cellaDx\">\r\n                                                                <input\r\n                                                                    name=\"s$w$PC$PC$txtNome\"\r\n                                                                    type=\"text\" value={personalData.first_name}\r\n                                                                    maxLength=\"50\"\r\n                                                                    id=\"s_w_PC_PC_txtNome\"\r\n                                                                    disabled=\"disabled\"\r\n                                                                    className=\"textbox\" />\r\n                                                            </td>\r\n                                                            <td className=\"rfv\">\r\n                                                                <span id=\"s_w_PC_PC_reqNome\" style={{color:'Red', display:'none'}}>\r\n                                                                    <span className=\"imgError\"/>\r\n                                                                </span>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                            <td className=\"cellaSx\">Surname</td>\r\n                                                            <td className=\"cellaSx\"><b>*</b></td>\r\n                                                            <td className=\"cellaDx\">\r\n                                                                <input\r\n                                                                    name=\"s$w$PC$PC$txtCognome\"\r\n                                                                    type=\"text\" value={personalData.last_name}\r\n                                                                    maxLength=\"50\"\r\n                                                                    id=\"s_w_PC_PC_txtCognome\"\r\n                                                                    disabled=\"disabled\"\r\n                                                                    className=\"textbox\" />\r\n                                                            </td>\r\n                                                            <td className=\"rfv\">\r\n                                                                <span id=\"s_w_PC_PC_reqCognome\" style={{color:'Red', display:'none'}}>\r\n                                                                    <span className=\"imgError\"/>\r\n                                                                </span>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                            <td className=\"cellaSx\">Date of birth</td>\r\n                                                            <td className=\"cellaSx\"><b>*</b></td>\r\n                                                            <td className=\"cellaDx\">\r\n                                                                <input\r\n                                                                    name=\"s$w$PC$PC$txtDataNascita\" type=\"text\"\r\n                                                                    value={personalData.date_of_birth} maxLength=\"10\"\r\n                                                                    id=\"s_w_PC_PC_txtDataNascita\" disabled=\"disabled\"\r\n                                                                    className=\"textbox\" />\r\n                                                            </td>\r\n                                                            <td className=\"rfv\">\r\n                                                                <span id=\"s_w_PC_PC_reqDate\" style={{color:'Red', display:'none'}}>\r\n                                                                    <span className=\"imgError\"></span>\r\n                                                                </span>\r\n                                                                <span id=\"s_w_PC_PC_cmpDate\" style={{color:'Red', display:'none'}}>\r\n                                                                    <span className=\"imgError\"></span>\r\n                                                                </span>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                            <td className=\"cellaSx\">Gender</td>\r\n                                                            <td className=\"cellaSx\"><b>*</b></td>\r\n                                                            <td className=\"cellaDx\">\r\n                                                                <select\r\n                                                                    name=\"s$w$PC$PC$ddlSx\"\r\n                                                                    id=\"s_w_PC_PC_ddlSx\"\r\n                                                                    disabled=\"disabled\"\r\n                                                                    className=\"dropdown\"\r\n                                                                    style={{width: '40px'}}>\r\n                                                                    <option selected=\"selected\" value=\"M\">M</option>\r\n                                                                    <option value=\"F\">F</option>\r\n                                                                </select>\r\n                                                            </td>\r\n                                                            <td className=\"rfv\"></td>\r\n                                                        </tr>\r\n\r\n                                                        <tr>\r\n                                                            <td className=\"cellaSx\" width=\"100%\">Country</td>\r\n                                                            <td className=\"cellaSx\"><b>*</b></td>\r\n                                                            <td className=\"cellaDx\">\r\n                                                                <select\r\n                                                                    name=\"s$w$PC$PC$ddlPaese\"\r\n                                                                    id=\"s_w_PC_PC_ddlPaese\"\r\n                                                                    disabled=\"disabled\"\r\n                                                                    className=\"dropdown\"\r\n                                                                    style={{width: '150px'}}>\r\n\r\n                                                                </select>\r\n                                                            </td>\r\n                                                            <td className=\"rfv\" style={{width: '15px'}}>\r\n                                                                <span id=\"s_w_PC_PC_reqPaese\" style={{color:'Red', visibility:'hidden' }}>\r\n                                                                    <span className=\"imgError\"></span>\r\n                                                                </span>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                        <tr id=\"s_w_PC_PC_trLinguaMessaggi\">\r\n                                                            <td className=\"cellaSx\">Message Lang.</td>\r\n                                                            <td className=\"cellaSx\"><b>*</b></td>\r\n                                                            <td className=\"cellaDx\">\r\n                                                                <select\r\n                                                                    name=\"s$w$PC$PC$ddlLinguaMessaggi\"\r\n                                                                    id=\"s_w_PC_PC_ddlLinguaMessaggi\"\r\n                                                                    className=\"dropdown\"\r\n                                                                    style={{width:'150px'}}>\r\n                                                                    <option selected=\"selected\" value=\"2\">English</option>\r\n\r\n                                                                </select>\r\n                                                            </td>\r\n                                                            <td className=\"rfv\"></td>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                            <td className=\"cellaSx\">Address</td>\r\n                                                            <td className=\"cellaSx\"><b>*</b></td>\r\n                                                            <td className=\"cellaDx\">\r\n                                                                <input\r\n                                                                    name=\"s$w$PC$PC$txtIndirizzo\"\r\n                                                                    type=\"text\" value={personalData.address}\r\n                                                                    maxLength=\"50\"\r\n                                                                    id=\"s_w_PC_PC_txtIndirizzo\"\r\n                                                                    disabled=\"disabled\"\r\n                                                                    className=\"textbox\"\r\n                                                                />\r\n                                                            </td>\r\n                                                            <td className=\"rfv\">\r\n                                                                <span id=\"s_w_PC_PC_reqIndirizzo\" style={{color:'Red', display:'none'}}>\r\n                                                                    <span className=\"imgError\"></span>\r\n                                                                </span>\r\n                                                            </td>\r\n                                                        </tr>\r\n\r\n                                                        <tr>\r\n                                                            <td className=\"cellaSx\">City</td>\r\n                                                            <td className=\"cellaSx\"><b>*</b></td>\r\n                                                            <td className=\"cellaDx\">\r\n                                                                <input\r\n                                                                    name=\"s$w$PC$PC$txtCitta\"\r\n                                                                    type=\"text\"\r\n                                                                    value={personalData.city}\r\n                                                                    maxLength=\"50\"\r\n                                                                    id=\"s_w_PC_PC_txtCitta\"\r\n                                                                    disabled=\"disabled\"\r\n                                                                    className=\"textbox\" />\r\n                                                            </td>\r\n                                                            <td className=\"rfv\">\r\n                                                                <span id=\"s_w_PC_PC_reqCitta\" style={{color:'Red', display:'none'}}>\r\n                                                                    <span className=\"imgError\"></span>\r\n                                                                </span>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                            <td className=\"cellaSx\">State</td>\r\n                                                            <td className=\"cellaSx\"><b>*</b></td>\r\n                                                            <td className=\"cellaDx\">\r\n                                                                <input\r\n                                                                    name=\"s$w$PC$PC$txtProvincia\"\r\n                                                                    type=\"text\" value=\"\"\r\n                                                                    maxLength=\"50\"\r\n                                                                    id=\"s_w_PC_PC_txtProvincia\"\r\n                                                                    disabled=\"disabled\"\r\n                                                                    className=\"textbox\" />\r\n                                                            </td>\r\n                                                            <td className=\"rfv\">\r\n                                                                <span id=\"s_w_PC_PC_reqProvincia\" style={{color:'Red', display:'none'}}>\r\n                                                                    <span className=\"imgError\"></span>\r\n                                                                </span>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                            <td className=\"cellaSx\">Tel.:</td>\r\n                                                            <td className=\"cellaSx\">\r\n                                                                <div id=\"s_w_PC_PC_lbTelObbligatorio\"><b>*</b></div>\r\n                                                            </td>\r\n                                                            <td className=\"cellaDx\">\r\n                                                                <input\r\n                                                                    name=\"s$w$PC$PC$txtTelefono\"\r\n                                                                    type=\"text\" maxLength=\"50\"\r\n                                                                    id=\"s_w_PC_PC_txtTelefono\"\r\n                                                                    disabled=\"disabled\"\r\n                                                                    value={personalData.phone_number}\r\n                                                                    className=\"textbox\" />\r\n                                                            </td>\r\n                                                            <td className=\"rfv\"/>\r\n                                                        </tr>\r\n\r\n                                                        <tr>\r\n                                                            <td className=\"cellaSx\">Balance</td>\r\n                                                            <td className=\"cellaSx\">&nbsp;</td>\r\n                                                            <td className=\"cellaDx\">\r\n                                                                <span id=\"s_w_PC_PC_lblSaldo\" className=\"lblSaldo\">\r\n                                                                    {formatNumber(personalData.balance)} {SportsbookGlobalVariable.Currency}\r\n                                                                </span>\r\n                                                            </td>\r\n                                                            <td className=\"rfv\"/>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                            <td colSpan=\"4\">\r\n                                                                <div className=\"spacer5\"/>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                            <td align=\"right\" colSpan=\"3\">\r\n                                                                <input\r\n                                                                    type=\"submit\" name=\"s$w$PC$PC$btnReset\"\r\n                                                                    value=\"Cancel\"\r\n                                                                    onClick={() => history.goBack()}\r\n                                                                    id=\"s_w_PC_PC_btnReset\" className=\"button\" />\r\n                                                                <input\r\n                                                                    type=\"submit\"\r\n                                                                    name=\"s$w$PC$PC$btnCreateUser\"\r\n                                                                    value=\"Confirm\"\r\n                                                                    id=\"s_w_PC_PC_btnCreateUser\"\r\n                                                                    className=\"button\"\r\n                                                                />\r\n                                                            </td>\r\n                                                            <td></td>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                            <td colSpan=\"4\">\r\n                                                                <div className=\"spacer5\"></div>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"BtmSX\">\r\n                                        <div className=\"BtmDX\"></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"BtmSX\">\r\n                        <div className=\"BtmDX\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Account\\BonusTransactionList.js",["591","592","593","594"],"import React, {useEffect, useState} from \"react\";\r\nimport moment from \"moment\";\r\nimport {getBonusTransactions} from \"../../Services/apis\";\r\nimport {formatDate, formatNumber} from \"../../Utils/helpers\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport Pagination from \"../Components/Pagination\";\r\n\r\nexport default function BonusTransactionList() {\r\n    const [filterData, setFilterData] = useState({\r\n        type: '',\r\n        from: moment().subtract(1, 'w').toDate(),\r\n        to: moment().toDate(),\r\n        page_size: 15,\r\n    });\r\n\r\n    const [pagination, setPagination] = useState({\r\n        total: 0,\r\n        per_page: 2,\r\n        from: 1,\r\n        to: 0,\r\n        current_page: 1,\r\n        last_page: 0\r\n    });\r\n\r\n    const [totalCredit, setTotalCredit] = useState(0);\r\n    const [loading, setLoading] = useState(true);\r\n    const [totalDebit, setTotalDebit] = useState(0);\r\n    const [transactions, setTransactions] = useState([]);\r\n\r\n    const fetchTransactions = (page) => {\r\n        setLoading(true);\r\n        const data = {\r\n            type: filterData.type,\r\n            from: moment(filterData.from).format('DD/MM/YYYY'),\r\n            to: moment(filterData.to).format('DD/MM/YYYY'),\r\n            page_size: filterData.page_size\r\n        }\r\n        getBonusTransactions(data, page).then(res => {\r\n            setPagination({\r\n                total: res.transactions.total,\r\n                per_page: res.transactions.per_page,\r\n                from: res.transactions.from,\r\n                to: res.transactions.to,\r\n                current_page: res.transactions.current_page,\r\n                last_page: res.transactions.last_page\r\n            })\r\n            setTransactions(res.transactions.data);\r\n            setTotalCredit(res.page_credit);\r\n            setTotalDebit(res.page_debit);\r\n            setLoading(false);\r\n\r\n        }).catch(err => {\r\n            setLoading(false);\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchTransactions(1);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div id=\"MainContent\">\r\n                <div className=\"Riquadro\">\r\n                    <div className=\"CntSX\">\r\n                        <div className=\"CntDX\">\r\n                            <div className=\"transactionList\">\r\n                                <div className=\"RiquadroSrc\">\r\n                                    <div className=\"Cnt\">\r\n                                        <div>\r\n                                            <table className=\"SearchContainerStyle\">\r\n                                                <tbody>\r\n                                                <tr className=\"SearchSectionStyle\">\r\n                                                    <td className=\"SearchDescStyle\">\r\n                                                        Amounts\r\n                                                    </td>\r\n                                                    <td className=\"SearchControlsStyle\">\r\n                                                        <table width=\"100%\">\r\n                                                            <tbody>\r\n                                                            <tr>\r\n                                                                <td width=\"19%\" align=\"left\">\r\n                                                                    Type\r\n                                                                </td>\r\n                                                                <td width=\"81%\" align=\"left\" colSpan=\"3\">\r\n                                                                    <table id=\"ac_w_PC_PC_rblTipoImporto\" border=\"0\">\r\n                                                                        <tbody>\r\n                                                                        <tr>\r\n                                                                            <td>\r\n                                                                                <input\r\n                                                                                    id=\"ac_w_PC_PC_rblTipoImporto_0\"\r\n                                                                                    type=\"radio\"\r\n                                                                                    name=\"ac$w$PC$PC$rblTipoImporto\"\r\n                                                                                    value=\"-1\" />\r\n                                                                                <label htmlFor=\"ac_w_PC_PC_rblTipoImporto_0\">All</label>\r\n                                                                            </td>\r\n                                                                            <td>\r\n                                                                                <input\r\n                                                                                    id=\"ac_w_PC_PC_rblTipoImporto_1\"\r\n                                                                                    type=\"radio\"\r\n                                                                                    name=\"ac$w$PC$PC$rblTipoImporto\"\r\n                                                                                    value=\"1\" />\r\n                                                                                <label htmlFor=\"ac_w_PC_PC_rblTipoImporto_1\">Credits</label>\r\n                                                                            </td>\r\n                                                                            <td>\r\n                                                                                <input\r\n                                                                                    id=\"ac_w_PC_PC_rblTipoImporto_2\"\r\n                                                                                    type=\"radio\"\r\n                                                                                    name=\"ac$w$PC$PC$rblTipoImporto\"\r\n                                                                                    value=\"2\" />\r\n                                                                                <label htmlFor=\"ac_w_PC_PC_rblTipoImporto_2\">Debits</label>\r\n                                                                            </td>\r\n                                                                        </tr>\r\n                                                                        </tbody>\r\n                                                                    </table>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr className=\"SearchSectionStyle\">\r\n                                                    <td className=\"SearchDescStyle\">\r\n                                                        Transaction\r\n                                                    </td>\r\n                                                    <td className=\"SearchControlsStyle\">\r\n                                                        <table width=\"100%\">\r\n                                                            <tbody>\r\n                                                            <tr>\r\n                                                                <td width=\"20%\" align=\"left\">\r\n                                                                    Type\r\n                                                                </td>\r\n                                                                <td width=\"30%\" align=\"left\">\r\n                                                                    <select name=\"ac$w$PC$PC$ddlCausale\"\r\n                                                                        id=\"ac_w_PC_PC_ddlCausale\"\r\n                                                                        value={filterData.type}\r\n                                                                        onChange={(e) => setFilterData({...filterData, type: e.target.value})}\r\n                                                                        className=\"dropdown\" style={{width: '150px'}}>\r\n                                                                        <option selected=\"selected\" value=\"\"></option>\r\n                                                                        <option value=\"Bet Deposit\">Sports Deposit</option>\r\n                                                                        <option value=\"Deposit\">Deposits</option>\r\n                                                                        <option value=\"Withdrawal\">Withdrawals</option>\r\n                                                                    </select>\r\n                                                                </td>\r\n                                                                <td width=\"20%\"></td>\r\n                                                                <td width=\"30%\"></td>\r\n                                                            </tr>\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr className=\"SearchSectionStyle\">\r\n                                                    <td className=\"SearchDescStyle\">\r\n                                                        Transaction Type\r\n                                                    </td>\r\n                                                    <td className=\"SearchControlsStyle\">\r\n                                                        <table width=\"100%\">\r\n                                                            <tbody>\r\n                                                            <tr>\r\n                                                                <td width=\"20%\" align=\"left\">\r\n                                                                    Type\r\n                                                                </td>\r\n                                                                <td width=\"30%\" align=\"left\">\r\n                                                                    <table id=\"ac_w_PC_PC_chklTipoCausale\" border=\"0\">\r\n                                                                        <tbody>\r\n                                                                        <tr>\r\n                                                                            <td>\r\n                                                                                <input id=\"ac_w_PC_PC_chklTipoCausale_0\"\r\n                                                                                       type=\"checkbox\"\r\n                                                                                       name=\"ac$w$PC$PC$chklTipoCausale$0\"\r\n                                                                                       checked=\"checked\" />\r\n                                                                                <label htmlFor=\"ac_w_PC_PC_chklTipoCausale_0\">Normal</label>\r\n                                                                            </td>\r\n                                                                        </tr>\r\n                                                                        <tr>\r\n                                                                            <td>\r\n                                                                                <input\r\n                                                                                    id=\"ac_w_PC_PC_chklTipoCausale_1\"\r\n                                                                                    type=\"checkbox\"\r\n                                                                                    name=\"ac$w$PC$PC$chklTipoCausale$1\"\r\n                                                                                    checked=\"checked\" />\r\n                                                                                <label htmlFor=\"ac_w_PC_PC_chklTipoCausale_1\">Virtual Bets</label></td>\r\n                                                                        </tr>\r\n                                                                        </tbody>\r\n                                                                    </table>\r\n                                                                </td>\r\n                                                                <td width=\"20%\">\r\n\r\n                                                                </td>\r\n                                                                <td width=\"30%\">\r\n\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr className=\"SearchSectionStyle\">\r\n                                                    <td className=\"SearchDescStyle\">\r\n                                                        Transaction Date\r\n                                                    </td>\r\n                                                    <td className=\"SectionControlStyle\">\r\n                                                        <table width=\"100%\">\r\n                                                            <tbody>\r\n                                                            <tr>\r\n                                                                <td width=\"20%\" align=\"left\"\r\n                                                                    className=\"SearchControlsStyleFrom\">\r\n                                                                    From\r\n                                                                </td>\r\n                                                                <td width=\"30%\" align=\"left\">\r\n                                                                    <DatePicker\r\n                                                                        dateFormat=\"dd/MM/yyyy\"\r\n                                                                        selected={filterData.from}\r\n                                                                        className=\"textbox\"\r\n                                                                        style={{width:'75px' }}\r\n                                                                        onChange={date => setFilterData({...filterData, from: date})} />\r\n                                                                </td>\r\n                                                                <td width=\"20%\" align=\"right\"\r\n                                                                    className=\"SearchControlsStyleTo\">\r\n                                                                    To\r\n                                                                </td>\r\n                                                                <td width=\"30%\" align=\"left\">\r\n                                                                    <DatePicker\r\n                                                                        dateFormat=\"dd/MM/yyyy\"\r\n                                                                        selected={filterData.to}\r\n                                                                        className=\"textbox\"\r\n                                                                        style={{width:'75px' }}\r\n                                                                        onChange={date => setFilterData({...filterData, to: date})} />\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"SearchDescStyle\">\r\n                                                        Page Size\r\n                                                    </td>\r\n                                                    <td className=\"SearchControlsStyle\">\r\n                                                        <table className=\"SearchControlsContainerStyle\">\r\n                                                            <tbody>\r\n                                                            <tr>\r\n                                                                <td width=\"20%\" className=\"SearchControlDesc\">\r\n                                                                    &nbsp;\r\n                                                                </td>\r\n                                                                <td width=\"80%\" colSpan=\"3\">\r\n                                                                    <select name=\"ac$w$PC$PC$ddlPageSize\"\r\n                                                                            id=\"ac_w_PC_PC_ddlPageSize\"\r\n                                                                            value={filterData.page_size}\r\n                                                                            onChange={(e) => setFilterData({...filterData, page_size: e.target.value})}\r\n                                                                            className=\"dropdown\" style={{width: '75px' }}>\r\n                                                                        <option value={15}>15</option>\r\n                                                                        <option value={50}>50</option>\r\n                                                                        <option value={100}>100</option>\r\n\r\n                                                                    </select>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                            <table className=\"SearchButtonsStyle\">\r\n                                                <tbody>\r\n                                                <tr>\r\n                                                    <td>\r\n\r\n                                                    </td>\r\n                                                    <td className=\"tdSrcSX\">\r\n                                                        <input type=\"button\"\r\n                                                               name=\"ac$w$PC$PC$btnCancella\"\r\n                                                               value=\"Cancel\"\r\n                                                               className=\"button\" />\r\n                                                    </td>\r\n                                                    <td className=\"tdSrcDX\">\r\n                                                        <input\r\n                                                            onClick={() => fetchTransactions(1)}\r\n                                                            type=\"button\"\r\n                                                            name=\"ac$w$PC$PC$btnAvanti\"\r\n                                                            value=\"Continue\"\r\n                                                            id=\"ac_w_PC_PC_btnAvanti\" className=\"button\"\r\n                                                        />\r\n                                                    </td>\r\n                                                </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <table id=\"tblSearch2\" className=\"SearchContainerStyle RiepilogoMovimenti\">\r\n                                    <tbody>\r\n                                    <tr className=\"SearchSectionStyle\">\r\n                                        <td className=\"SearchDescStyle\">\r\n                                            <div style={{position:'relative'}}>\r\n                                                Credit\r\n                                                <div className=\"Dati\">\r\n                                                    <span id=\"ac_w_PC_PC_lblDare\">{formatNumber(totalCredit)}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td className=\"SearchControlsStyle\"></td>\r\n                                    </tr>\r\n                                    <tr className=\"SearchSectionStyle\">\r\n                                        <td className=\"SearchDescStyle\">\r\n                                            <div style={{position:'relative'}}>\r\n                                                Debit\r\n                                                <div className=\"Dati\">\r\n                                                    <span id=\"ac_w_PC_PC_lblAvere\">{formatNumber(totalDebit)}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td className=\"SearchControlsStyle\"></td>\r\n                                    </tr>\r\n                                    <tr className=\"SearchSectionStyle\">\r\n                                        <td className=\"SearchDescStyle\">\r\n                                            <div style={{position:'relative'}}>\r\n                                                Total Balance\r\n                                                <div className=\"Dati\">\r\n                                                    <span id=\"ac_w_PC_PC_lblTotale\">{formatNumber(parseFloat(totalCredit) - parseFloat(totalDebit))}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td className=\"SearchControlsStyle\"></td>\r\n                                    </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                                <br />\r\n                                <div className=\"divDg\">\r\n                                    <div>\r\n                                        {transactions.length > 0 &&\r\n                                        <table className=\"dgStyle\" cellSpacing=\"0\" border=\"0\" id=\"ac_w_PC_PC_grid\"\r\n                                               style={{borderWidth:'0px', borderStyle:'None', width:'100%',borderCollapse: 'collapse'}}>\r\n                                            <tbody>\r\n                                            <tr className=\"dgHdrStyle\">\r\n                                                <th scope=\"col\">&nbsp;</th>\r\n                                                <th align=\"center\" scope=\"col\">ID</th>\r\n                                                <th align=\"center\" scope=\"col\">Date</th>\r\n                                                <th align=\"center\" scope=\"col\">Transaction</th>\r\n                                                <th align=\"center\" scope=\"col\">Betslip</th>\r\n                                                <th className=\"dgHdrImporti\" scope=\"col\">Credit</th>\r\n                                                <th className=\"dgHdrImporti\" scope=\"col\">Debit</th>\r\n                                                <th align=\"center\" scope=\"col\">Bonus Campaign</th>\r\n                                                <th className=\"dgHdrImporti\" scope=\"col\">Balance</th>\r\n                                            </tr>\r\n                                            {!loading && transactions.map(transaction =>\r\n                                            <tr className=\"dgItemStyle\" key={transaction.reference_no}>\r\n                                                <td align=\"center\">\r\n                                                    <a title=\"See detail\"\r\n                                                       href=\"#\">\r\n                                                        <img title=\"See detail\" src=\"/img/Dettagli.gif\"\r\n                                                        style={{ borderWidth:'0px'}} />\r\n                                                     </a>\r\n                                                </td>\r\n                                                <td align=\"center\">{transaction.reference_no}</td>\r\n                                                <td align=\"center\">\r\n                                                    <span id=\"ac_w_PC_PC_grid_ctl02_lblData\">{formatDate(transaction.created_at, 'DD/MM/YYYY HH:mm:ss')}</span>\r\n                                                </td>\r\n                                                <td align=\"center\">{transaction.subject}</td>\r\n                                                <td align=\"center\">\r\n                                                    {(transaction.subject === 'Bet Deposit' || transaction.subject === 'Sport Win') &&\r\n                                                    <a title=\"See coupon\" href=\"#\">{transaction.description}</a>}\r\n                                                </td>\r\n                                                <td align=\"right\">{transaction.tranx_type === 'credit' ? formatNumber(transaction.amount) : ''}</td>\r\n                                                <td align=\"right\">{transaction.tranx_type === 'debit' ? formatNumber(transaction.amount) : ''}</td>\r\n                                                <td align=\"center\">{transaction.name}</td>\r\n                                                <td className=\"dgHdrImporti\" align=\"right\">{(transaction.tranx_type === 'credit')? transaction.to_user_balance : transaction.from_user_balance}</td>\r\n                                            </tr>)}\r\n                                            <Pagination\r\n                                                colspan={10}\r\n                                                data={pagination}\r\n                                                offset={10}\r\n                                                changePage={fetchTransactions}\r\n                                            />\r\n\r\n                                            {loading && <tr className=\"dgItemStyle\">\r\n                                                <td colSpan=\"10\">Loading...Please wait!</td>\r\n                                            </tr>}\r\n\r\n                                            </tbody>\r\n                                        </table> }\r\n                                        {transactions.length === 0 && !loading &&\r\n                                        <table className=\"dgStyle\" cellSpacing=\"0\" border=\"0\" id=\"ac_w_PC_PC_grid\"\r\n                                               style={{borderWidth:'0px', borderStyle:'None', width:'100%',borderCollapse: 'collapse'}}>\r\n                                        <tbody>\r\n                                            <tr className=\"dgEmptyStyle\">\r\n                                                <td colSpan=\"10\" align=\"center\">\r\n                                                No record found\r\n                                                </td>\r\n                                            </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                        }\r\n                                    </div>\r\n                                    <br />\r\n                                    <br />\r\n                                    <div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Account\\Bonuses.js",[],"C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Account\\Deposit.js",["595","596","597"],"import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { PaystackButton } from 'react-paystack'\r\nimport {getGatewayKeys, saveTransaction} from \"../../Services/apis\";\r\nimport {UPDATE_USER_BALANCE} from \"../../Redux/types\";\r\nimport {formatNumber} from \"../../Utils/helpers\";\r\nimport {toast} from \"react-toastify\";\r\nimport { useRavePayment } from \"react-ravepayment\";\r\n\r\nconst gateways = [\r\n    {slug: 'rave', name: 'Flutterwave'},\r\n    {slug: 'monnify', name: 'Monnify'},\r\n    {slug: 'paystack', name: 'Paystack'},\r\n];\r\n\r\nexport function Deposit({history}) {\r\n    const {user} = useSelector((state) => state.auth);\r\n    const [activeTab, setActiveTab] = useState(    {slug: 'monnify', name: 'Monnify'});\r\n    const [config, setConfig] = useState( {\r\n        txref: (new Date()).getTime(),\r\n        customer_email: user.email,\r\n        customer_phone: \"\",\r\n        amount: '',\r\n        PBFPubKey: \"\",\r\n        contractCode: '',\r\n        production: process.env.NODE_ENV === 'production',\r\n    });\r\n    const [paymentSuccess, setPaymentSuccess] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const updateAmount = (value) => {\r\n        if (value === 0) {\r\n            setConfig({...config, amount: 0});\r\n            return;\r\n        }\r\n        let currentAmount = config.amount;\r\n        if (currentAmount === ''){\r\n            currentAmount = 0;\r\n        }\r\n        const newAmount = currentAmount + value\r\n        setConfig({...config, amount: newAmount});\r\n    }\r\n\r\n    const verifyPayment = (response) => {\r\n        if (config.amount > 0) {\r\n            if (response.message === \"Approved\") {\r\n                setPaymentSuccess(`Success!! Your account has been credited with ${formatNumber(config.amount)}`);\r\n                // update user balance\r\n                dispatch({type: UPDATE_USER_BALANCE, payload: user.balance + config.amount});\r\n\r\n                response.paymentMethod = 'paystack';\r\n                response.channel = 'mobile';\r\n                response.amount = config.amount;\r\n                setConfig({...config, amount: ''});\r\n                saveTransaction(response);\r\n                // dispatch({type: SHOW_MODAL, payload: {show: true, type: 'error', message: 'Your'}})\r\n            } else {\r\n                // dispatch({type: SHOW_MODAL, payload: {show: true, type: 'error', message: 'We were unable to process your request'}})\r\n            }\r\n        }\r\n    }\r\n\r\n    const getGateway = (gateway) => {\r\n        setActiveTab(gateway);\r\n        getGatewayKeys(gateway.slug).then(res => {\r\n            if (res.success) {\r\n                setConfig({\r\n                    ...config,\r\n                    PBFPubKey: res.pub_key,\r\n                    contractCode: gateway.slug === 'monnify' ? res.monnify_contract_code : '',\r\n                })\r\n            } else {\r\n                toast.error(res.message);\r\n            }\r\n        }).catch(err => {\r\n            toast.error(err.message);\r\n        })\r\n    }\r\n\r\n    const onSuccess = (response) => {\r\n        response.paymentMethod = activeTab.slug;\r\n        response.channel = 'website';\r\n        response.amount = config.amount;\r\n\r\n        switch (activeTab.slug) {\r\n            case 'rave':\r\n                // console.log(response);\r\n                if (response.respcode === \"00\") {\r\n                    response.reference = response.tx.txRef;\r\n                    setPaymentSuccess(`Success!! Your account has been credited with ${formatNumber(config.amount)}`);\r\n                    // update user balance\r\n                    dispatch({type: UPDATE_USER_BALANCE, payload: user.balance + config.amount});\r\n\r\n                    saveTransaction(response);\r\n                }\r\n                break;\r\n            case 'paystack':\r\n                if (response.message === \"Approved\") {\r\n                    setPaymentSuccess(`Success!! Your account has been credited with ${formatNumber(config.amount)}`);\r\n                    // update user balance\r\n                    dispatch({type: UPDATE_USER_BALANCE, payload: user.balance + config.amount});\r\n\r\n                    saveTransaction(response);\r\n                } else {\r\n                }\r\n                break;\r\n            case 'monnify':\r\n                if (response.status === 'SUCCESS') {\r\n                    setPaymentSuccess(`Success!! Your account has been credited with ${formatNumber(config.amount)}`);\r\n                    // update user balance\r\n                    dispatch({type: UPDATE_USER_BALANCE, payload: user.balance + config.amount});\r\n                    response.reference = response.transactionReference;\r\n\r\n                    saveTransaction(response);\r\n                }\r\n                break;\r\n        }\r\n        setConfig({...config, amount: ''});\r\n\r\n    }\r\n\r\n    const onClose = () => {\r\n        // console.log('closed');\r\n    }\r\n\r\n    useEffect(() => {\r\n        getGateway(activeTab);\r\n    }, []);\r\n\r\n    const { initializePayment } = useRavePayment(config);\r\n\r\n    function payWithMonnify() {\r\n        window.MonnifySDK.initialize({\r\n            amount: config.amount,\r\n            currency: \"NGN\",\r\n            reference: '' + Math.floor((Math.random() * 1000000000) + 1),\r\n            customerEmail: user.email,\r\n            apiKey: config.PBFPubKey,\r\n            contractCode: config.contractCode,\r\n            paymentDescription: \"Gaming Account funding\",\r\n            isTestMode: config.production,\r\n            paymentMethods: [\"CARD\", \"ACCOUNT_TRANSFER\"],\r\n            onComplete: function(response){\r\n                //Implement what happens when transaction is completed.\r\n                onSuccess(response);\r\n            },\r\n            onClose: function(data){\r\n                //Implement what should happen when the modal is closed here\r\n                console.log(data);\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div id=\"MainContent\" className=\"\">\r\n                <div className=\"Riquadro\">\r\n                    <div className=\"CntSX\">\r\n                        <div className=\"CntDX\">\r\n                            <div className=\"payments\">\r\n                                <div className=\"RiquadroSrc\">\r\n                                    <div className=\"Cnt\">\r\n                                        <div>\r\n                                            <div className=\"page__head\">\r\n                                                <div className=\"page__head-item\"><h1> Instant Deposit Cards</h1></div>\r\n                                            </div>\r\n                                            <div className=\"t-menu pl30 pr30\">\r\n                                                {gateways.map(gateway =>\r\n                                                <a className={`t-menu__item ${gateway.slug === activeTab.slug ? 'active' : ''}`}\r\n                                                   onClick={() => getGateway(gateway)}\r\n                                                   key={gateway.slug} href=\"#\">\r\n                                                    <strong className=\"t-menu__item-title\"> {gateway.name}</strong>\r\n                                                </a>\r\n                                                )}\r\n                                            </div>\r\n                                            {paymentSuccess !== '' && <div className=\"info-box green\">{paymentSuccess}</div>}\r\n                                            <div className=\"page__body pt15 pb15\">\r\n                                                <div className=\"wrap mt10\">\r\n                                                    <div className=\"pull-right txt-deepgray\"> All fields are required</div>\r\n                                                </div>\r\n                                                <div className=\"divide-holder\">\r\n                                                    <div className=\"one-half\">\r\n                                                        <div className=\"form-row\">\r\n                                                            <div className=\"form-label\"><strong> Deposit\r\n                                                                Amount({process.env.REACT_APP_CURRENCY})</strong></div>\r\n                                                            <div className=\"form-input\">\r\n                                                                <input\r\n                                                                    name=\"amount\"\r\n                                                                    className=\"big\"\r\n                                                                    type=\"number\"\r\n                                                                    autoComplete=\"off\"\r\n                                                                    step=\"100\"\r\n                                                                    maxLength=\"5\"\r\n                                                                    min=\"100\" max=\"10000\"\r\n                                                                    value={config.amount} onChange={(e) => setConfig({...config, amount: e.target.value})}\r\n                                                                />\r\n                                                                <div className=\"form-input--stake\"> Min 100</div>\r\n                                                            </div>\r\n                                                            <div className=\"quickstake mt10\">\r\n                                                                <div className=\"quickstake__item\" onClick={() => updateAmount(0)}> Clear</div>\r\n                                                                <div className=\"quickstake__item\" onClick={() => updateAmount(100)}> +100</div>\r\n                                                                <div className=\"quickstake__item\" onClick={() => updateAmount(200)}> +200</div>\r\n                                                                <div className=\"quickstake__item\" onClick={() => updateAmount(500)}> +500</div>\r\n                                                                <div className=\"quickstake__item\" onClick={() => updateAmount(1000)}> +1000</div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        {\r\n                                                            {\r\n                                                                'rave': <button\r\n                                                                    className=\"btn green mt20 mb20\"\r\n                                                                    onClick={() => initializePayment(onSuccess, onClose)}\r\n                                                                > Make Payment</button>,\r\n                                                                'monnify' : <button className=\"btn green mt20 mb20\" onClick={payWithMonnify}> Make Payment</button>,\r\n                                                                'paystack' :  <PaystackButton\r\n                                                                    amount={config.amount * 100}\r\n                                                                    email={user?.email}\r\n                                                                    publicKey={config.PBFPubKey}\r\n                                                                    onSuccess={verifyPayment}\r\n                                                                    text=\"Make Payment\"\r\n                                                                    disabled={parseInt(config.amount) === 0}\r\n                                                                    className=\"btn green mt20 mb20\"\r\n                                                                />\r\n                                                            }[activeTab.slug]\r\n                                                        }\r\n                                                    </div>\r\n                                                    <div className=\"mt20 pl0 txt-deepgray\">\r\n                                                        <h3 className=\"txt-darkgreen\"> Instant {activeTab.name} Deposit</h3>\r\n                                                        <p>There is <strong>no fee for deposits</strong> with this\r\n                                                            payment method. If your transaction is authorized, your\r\n                                                            account will be credited immediately.\r\n                                                        </p>\r\n                                                        <p>\r\n                                                            You can <strong>cancel withdrawals</strong> that have not yet been processed.\r\n                                                        </p>\r\n                                                        <p>\r\n                                                            <strong className=\"txt-blue undefined\"> View Pending\r\n                                                                Withdrawals</strong>\r\n                                                        </p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\layout\\Others.js",[],"C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\layout\\partials\\Header.js",["598","599","600","601","602"],"C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\layout\\partials\\Footer.js",["603","604","605","606","607","608","609","610"],"import React from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nexport default function Footer() {\r\n    const history = useHistory();\r\n\r\n    const goTo = page => {\r\n        history.push(page);\r\n    }\r\n\r\n    return (\r\n        <footer className=\"footer-section\">\r\n            <div className=\"footer-inner\">\r\n\r\n                <div className=\"footer-side-a\">\r\n\r\n                    <div className=\"footer-links\">\r\n                        <div className=\"footer-links-inner\">\r\n                            <span className=\"footer-links-head\"><h3>{process.env.REACT_APP_NAME}</h3></span>\r\n\r\n                            <ul className=\"footer-links-list\">\r\n                                <li className=\"footer-links-list-li\"><a href=\"#\" onClick={() => goTo('/')}>Home</a></li>\r\n                                <li className=\"footer-links-list-li\"><a href=\"#\" onClick={() => goTo('/Sport/Pages/about-us')}>About Us</a></li>\r\n                                <li className=\"footer-links-list-li\"><a href=\"/BecomeAnAgent\">Become an Agent</a></li>\r\n                                <li className=\"footer-links-list-li\"><a href=\"#\">Web Affillates</a></li>\r\n                                <li className=\"footer-links-list-li\"><a href=\"#\">Results</a></li>\r\n                                <li className=\"footer-links-list-li\"><a href=\"#\" onClick={() => goTo('/Sport/Pages/contact-us')}>Contact Us</a></li>\r\n                            </ul>\r\n                        </div>\r\n\r\n                        {/*<div className=\"footer-img\">*/}\r\n                        {/*    <span className=\"footer-copy\">*/}\r\n                        {/*        {process.env.REACT_APP_NAME} is licensed and regulated by the Betting Control and Licensing Board under License number BK 0000183*/}\r\n                        {/*    </span>*/}\r\n                        {/*</div>*/}\r\n                    </div>\r\n\r\n                    <div className=\"paymeth-container\">\r\n                        <div className=\"paymeth-inner\">\r\n                            <span className=\"paymeth-head\"><h3>Payment Methods</h3></span>\r\n\r\n                            <div className=\"paymeth-img\">\r\n                                <img className=\"paymeth-img-src\" src=\"/img/pay-met.png\" alt=\"\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/*<span className=\"footer-copy\">.</span>*/}\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n                <div className=\"footer-side-b\">\r\n\r\n                    <div className=\"resp-container\">\r\n                        <span className=\"resp-head\"><h3>Responsible &amp; Secure Gaming.</h3></span>\r\n\r\n                        <div className=\"resp-img\">\r\n                            <img className=\"resp-img-src\"\r\n                                 src=\"/img/logo/play-responsibly.png\" alt=\"\" />\r\n                        </div>\r\n                        <span className=\"footer-copy\">\r\n                            This site is open strictly to persons over the age of 18 years. Gambling may have adverse effects if not taken in moderation.\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div className=\"terms-container\">\r\n                        <span className=\"terms-head\"><h3>Terms and Conditions</h3></span>\r\n\r\n                        <ul className=\"terms-list\">\r\n                            <li className=\"terms-list-li\"><a href=\"#\" onClick={() => goTo('/Sport/Pages/terms-and-conditions')}>General T&amp;C</a></li>\r\n                            {/*<li className=\"terms-list-li\"><a href=\"#\">Sport T&amp;C</a></li>\r\n                            <li className=\"terms-list-li\"><a href=\"#\">Live Betting T&amp;C</a></li>\r\n                            <li className=\"terms-list-li\"><a href=\"#\">Casino T&amp;C</a></li>\r\n                            <li className=\"terms-list-li\"><a href=\"#\">Racing T&amp;C</a></li>\r\n                            <li className=\"terms-list-li\"><a href=\"#\">Pitch90 T&amp;C</a></li>*/}\r\n                            <li className=\"terms-list-li\"><a href=\"#\" onClick={() => goTo('/Sport/Pages/responsible-gaming')}>Responsible Gaming</a></li>\r\n                            <li className=\"terms-list-li\"><a href=\"#\" onClick={() => goTo('/Sport/Pages/privacy')}>Privacy</a></li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\layout\\partials\\RightSide.js",["611","612","613","614"],"import React, {useState, useEffect} from \"react\";\r\nimport QuickBet from \"../../Components/QuickBet\";\r\nimport SmartBet from \"../../Components/SmartBet\";\r\nimport CouponCheck from \"../../Components/CouponCheck\";\r\nimport BetSlip from \"../../Components/BetSlip\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {SHOW_DEPOSIT_MODAL} from \"../../../Redux/types\";\r\nimport useSWR from \"swr/esm/use-swr\";\r\n\r\nexport default function RightSide() {\r\n    const dispatch = useDispatch();\r\n    const {isAuthenticated, user } = useSelector(state => state.auth);\r\n    const [image, setBg] = useState(null);\r\n\r\n    const {data: res, error} = useSWR('/utilities/bg-image?type=sport&position=right');\r\n\r\n    useEffect(() => {\r\n        if (res && res.image_path) {\r\n            setBg(res.image_path);\r\n        }\r\n    }, [res]);\r\n    return (\r\n        <div className=\"side3\">\r\n            {!isAuthenticated ?\r\n                <NavLink to=\"/Auth/Register\" className=\"registerBtn\">REGISTER NOW!</NavLink>\r\n                :\r\n                user.role !== 'Cashier' && <a href=\"javascript:;\" onClick={() => dispatch({type: SHOW_DEPOSIT_MODAL})} className=\"depositBtn\">DEPOSIT NOW!</a>\r\n            }\r\n            {/* SMART BET*/}\r\n            <SmartBet />\r\n            \r\n            {/* BET SELECTION */}\r\n            <BetSlip />\r\n\r\n            {/*COUPON CHECK*/}\r\n            <CouponCheck />\r\n\r\n            {/* QUICK BET */}\r\n            <QuickBet />\r\n\r\n            {image &&\r\n            <a href=\"/Sport/cms?mid=29&amp;sid=0\" className=\"mb\">\r\n                <img src={image} alt=\"contact us\" />\r\n            </a>}\r\n\r\n            <a href=\"/Sport/cms?mid=29&amp;sid=0\" className=\"mb\">\r\n                <img src=\"/img/CONTACT-US.png\" alt=\"contact us\" />\r\n            </a>\r\n\r\n            <div className=\"lucky-container\">\r\n                <img src=\"/img/LUCKYPICK-1.jpg\" alt=\"LUCKYPICK\" />\r\n                <div className=\"lucky-content\">\r\n                    <div className=\"lucky-left lucky\">\r\n                        <p>To win</p>\r\n                        <input type=\"text\" id=\"luckyPickWin\" />\r\n                    </div>\r\n                    <div className=\"lucky-right lucky\">\r\n                        <p>Your stake</p>\r\n                        <input type=\"text\" id=\"luckyPickAmount\" />\r\n                    </div>\r\n                </div>\r\n                <a href=\"#\" className=\"genBtn\">GENERATE BET</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\layout\\partials\\LeftSide.js",["615","616","617"],"import React, {useEffect, useState} from \"react\";\r\nimport {setActivePeriod, setSport, setSports, setTournaments} from \"../../../Redux/actions\";\r\nimport {getSportMenu} from \"../../../Services/apis\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {NavLink, useHistory} from 'react-router-dom';\r\nimport {SET_TOURNAMENTS} from \"../../../Redux/types\";\r\nimport {periods} from \"../../../Utils/constants\";\r\nimport {slugify} from \"../../../Utils/helpers\";\r\nimport useSWR from \"swr\";\r\n\r\nexport default function LeftSide() {\r\n    const {activePeriod, sports, tournaments} = useSelector((state) => state.sportsData);\r\n    const [keyword, setKeyword] = useState('');\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const {data: topbets, error} = useSWR('sports/top-bets');\r\n\r\n    const toggleSportMenu = e => {\r\n        // console.log(e);\r\n        e.currentTarget.parentNode.classList.toggle('active');\r\n        // e.target.nextElementSibling.style.display = ''\r\n    }\r\n\r\n    const getSports = async () => {\r\n        await getSportMenu(activePeriod).then(res => {\r\n            dispatch(setSports(res.menu));\r\n        });\r\n    }\r\n\r\n    useEffect( () => {\r\n        getSports();\r\n    }, [activePeriod]);\r\n\r\n    const openEvent = (cid, tid, sid) => {\r\n\r\n        const index = tournaments.findIndex(tournament => tournament.sport_tournament_id === tid);\r\n        if (index !== -1) { // remove tournament\r\n            tournaments.splice(index, 1);\r\n            // update state\r\n            dispatch({\r\n                type: SET_TOURNAMENTS,\r\n                payload: tournaments\r\n            });\r\n\r\n        } else {\r\n            const pathname = window.location.pathname;\r\n            const urlSearch= window.location.search;\r\n            const url = `/Sport/Odds?tid=${tid}&sid=${sid}`;\r\n            if (pathname+urlSearch === url) {\r\n                dispatch(setTournaments({tid, sid}));\r\n            } else {\r\n                history.push(url);\r\n            }\r\n        }\r\n        // dispatch(setTournaments({tid, sid}));\r\n    }\r\n\r\n    const doSearch = e => {\r\n        e.preventDefault();\r\n        if(keyword.length)\r\n            history.push(`/Sport/SearchResults?q=${keyword}`)\r\n    }\r\n\r\n    const goTo = sport => {\r\n        dispatch(setSport(sport));\r\n        history.push('/Sport/PreMatch/' + slugify(sport.name))\r\n    }\r\n\r\n    return (\r\n        <div className=\"side1\">\r\n            <form onSubmit={doSearch} className=\"search-container\">\r\n                <input\r\n                    className=\"search-input\"\r\n                    type=\"text\"\r\n                    maxLength=\"50\"\r\n                    placeholder=\"Search\"\r\n                    value={keyword}\r\n                    onChange={(e) => setKeyword(e.target.value)}\r\n                />\r\n                <button className=\"search-btn\" type=\"submit\">\r\n                    <img\r\n                        className=\"search-icon\"\r\n                        src=\"/img/icons/search.png\"\r\n                        alt=\"search icon\"\r\n                    />\r\n                </button>\r\n            </form>\r\n            <NavLink to=\"/Live/LiveDefault\" className=\"liveBtn\">LiveBetting</NavLink>\r\n            <NavLink to=\"/\" className=\"homeBtn\">Home</NavLink>\r\n            <NavLink to=\"/Sport/OddsLessThan\" className=\"oddBtn\">Less then 2</NavLink>\r\n            <NavLink to=\"/Sport/Explore\" className=\"dailyBtn\">Today’s matches</NavLink>\r\n\r\n            <div className=\"psec-container\">\r\n                <div className=\"smx-card-section\">\r\n                    <div className=\"smx-card-list-heading\">Most popular</div>\r\n                    <div className=\"smx-card-list\">\r\n                        {topbets && topbets.map(row =>\r\n                            <NavLink to={`/Sport/Odds?tid=${row.tournament_id}&sid=1`} key={row.id} className=\"smx-card\" >\r\n                                <span className=\"smx-item-art-wrap\" style={{backgroundImage: 'url(/img/sports-icon/1.png)'}} />\r\n                                <div className=\"smx-card-details\">\r\n                                    <div className=\"smx-card-name\">{row.tournament.name}</div>\r\n                                </div>\r\n                            </NavLink>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"sport-container\">\r\n                <div className=\"sport-tabs-top\">\r\n                    <ul className=\"sport-tabs\" id=\"filtersport\">\r\n                        {periods.map((period, i) => <li\r\n                            key={period.value}\r\n                            onClick={() => dispatch(setActivePeriod(period.value))}\r\n                            className={`s${i} ${activePeriod === period.value ? 'onSel' : ''}`}>\r\n                            <p\r\n                                className={i === 0 || i === 5 ? 'ctr' : ''}\r\n                                dangerouslySetInnerHTML={{ __html: period.label}}\r\n                            />\r\n                        </li> )}\r\n\r\n                    </ul>\r\n                </div>\r\n                <div className=\"scx-heading\">All Sports</div>\r\n                <div id=\"sportMenu\" className=\"sport-tab-content\">\r\n                    {sports.map(sport =>\r\n                    <div className=\"single-sport\" key={sport.sport_id}>\r\n                        <div className={`anchor sport-${sport.sport_id}`} onClick={(e) => toggleSportMenu(e)}>\r\n                            <div className=\"trigger\" />\r\n                            <div className=\"icon\" />\r\n                            {sport.name} <span> ({sport.total})</span>\r\n                            <div className=\"check\">\r\n                                <input id=\"sf1\" className=\"sportFlag\" type=\"checkbox\"/>\r\n                                <span className=\"checkmark\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"states\">\r\n                            <div className=\"state\" />\r\n                            {sport?.categories?.map(category =>\r\n                            <div className=\"state\" key={`category_${category.sport_category_id}`}>\r\n                                <div className=\"anchor special\" onClick={(e) => toggleSportMenu(e)}>\r\n                                    <div className=\"trigger\">{category.name}</div>\r\n                                    <div className=\"check\">\r\n                                        <input type=\"checkbox\" />\r\n                                        <span className=\"checkmark\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"championships\">\r\n                                    {category?.tournaments.map(tournament =>\r\n                                    <div\r\n                                        className={`championship ${tournaments.some(item => item.sport_tournament_id === tournament.sport_tournament_id) ? 'selected' : ''}`}\r\n                                        id={`TOR_${tournament.sport_tournament_id}`}\r\n                                        key={`TOR_${tournament.sport_tournament_id}`}\r\n                                        onClick={(e) => openEvent(category.sport_category_id, tournament.sport_tournament_id, sport.sport_id)}\r\n                                    >\r\n                                        <div className=\"anchor favourite\">\r\n                                            {tournament.name}\r\n                                            <div className=\"check\">\r\n                                                <input type=\"checkbox\" id=\"TORc_841\" />\r\n                                                <span className=\"checkmark\" />\r\n                                            </div>\r\n                                            <div className=\"fav off\" />\r\n                                        </div>\r\n                                    </div>)}\r\n                                </div>\r\n                            </div>)}\r\n                        </div>\r\n                    </div>)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\Modals\\ConfirmBonusWithdrawal.js",["618","619"],"import React, {useState} from 'react';\r\nimport { SET_USER_DATA, SHOW_BONUS_CONFIRM} from \"../../../Redux/types\";\r\nimport {formatNumber} from \"../../../Utils/helpers\";\r\nimport {redeemBonus} from \"../../../Services/apis\";\r\nimport {toast} from \"react-toastify\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nexport default function ConfirmBonusWithdrawal({amount, dispatch}) {\r\n    const [sending, setSending] = useState(false);\r\n    const {SportsbookGlobalVariable} = useSelector((state) => state.sportsBook);\r\n\r\n    const doRedeem = () => {\r\n        setSending(true);\r\n        redeemBonus().then(res => {\r\n            setSending(false);\r\n            if (res.success) {\r\n                toast.success(res.message)\r\n                dispatch({type: SET_USER_DATA, payload: res.data});\r\n                dispatch({type: SHOW_BONUS_CONFIRM, payload: {show: false, amount: 0}});\r\n            } else {\r\n                toast.error(res.message);\r\n                dispatch({type: SHOW_BONUS_CONFIRM, payload: {show: false, amount: 0}});\r\n            }\r\n        }).catch(err => {\r\n            setSending(false);\r\n            toast.error('Something went wrong. Unable to process request');\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"login-popup-wrapper\" id=\"popupLogin\">\r\n            <div className=\"login-popup\">\r\n                <div className=\"close-coupon-popup\" onClick={() => dispatch({type: SHOW_BONUS_CONFIRM, payload: {show: false, amount: 0}})}>\r\n                    <i className=\"fa fa-times\" aria-hidden=\"true\" />\r\n                </div>\r\n                <div className=\"login-content\">\r\n                    <div className=\"title\">\r\n                        <img src=\"/img/check-icon.png\" alt=\"\"\r\n                             className=\"title-icon\" />\r\n                        <span>Redeem your bonus Winnings</span>\r\n                    </div>\r\n                    <div className=\"alert-bar\">\r\n                        <p>Congratulations!! You can now redeem your bonus winning of <strong>{SportsbookGlobalVariable.Currency + ' ' +formatNumber(amount)}</strong> to your real balance.</p>\r\n                        <p>Are you sure you want to redeem your bonus?</p>\r\n                    </div>\r\n                    <form>\r\n                    <div className=\"button-holder\">\r\n                        <input type=\"submit\" onClick={doRedeem} value={sending ? 'Submitting Request...' : 'Yes, Redeem'} disabled={sending}/>\r\n\r\n                        <a href=\"javascript:;\" onClick={() => dispatch({type: SHOW_BONUS_CONFIRM, payload: {show: false, amount: 0}})}>\r\n                            <div className=\"register-button\">No, Later</div>\r\n                        </a>\r\n                    </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\Loader.js",[],"C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\FixturesList.js",[],"C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\Modals\\TipsterBet.js",["620","621","622","623","624","625","626","627","628","629"],"import React, {useState} from 'react';\r\nimport {LOADING, SET_COUPON_DATA, SHOW_LOGIN_MODAL, SHOW_TIPSTER_BET, UPDATE_USER_BALANCE} from \"../../../Redux/types\";\r\nimport {loadCoupon, rebetTipster} from \"../../../Services/apis\";\r\nimport {Http} from \"../../../Utils\";\r\nimport {toast} from \"react-toastify\";\r\nimport {fastAdd} from \"../../../Redux/actions\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nexport default function TipsterBet({dispatch, betslip, reset}) {\r\n    const [amount, setAmount] = useState(betslip.minimum_stake);\r\n    const [sending, setSending] = useState(false);\r\n    const [sent, setSent] = useState(false);\r\n    const [errMsg, setErrMsg] = useState(false);\r\n    const {coupon} = useSelector((state) => state.couponData);\r\n\r\n    const updateAmount = (value) => {\r\n        if (value === 0) {\r\n            setAmount(0);\r\n            return;\r\n        }\r\n\r\n        let currentAmount = amount;\r\n        if (currentAmount === ''){\r\n            currentAmount = 0;\r\n        }\r\n        const newAmount = currentAmount + value\r\n        setAmount(newAmount);\r\n    }\r\n\r\n    const rebet = (e) => {\r\n        e.preventDefault();\r\n        if (amount < betslip.minimum_stake){\r\n            setErrMsg('Minimum stake for this bet is ' + betslip.minimum_stake);\r\n            return;\r\n        }\r\n        setSending(true);\r\n\r\n        rebetTipster({betslip_id: betslip.betslip_id, tipster_id: betslip.tipster_id, stake: amount, channel: 'website'})\r\n            .then(res => {\r\n                setSending(false);\r\n                if (res.success) {\r\n                    dispatch({type: UPDATE_USER_BALANCE, payload: res.balance});\r\n                    dispatch({type: SHOW_TIPSTER_BET});\r\n                    toast.success('Your bet has been placed successfully', {position: 'top-center'});\r\n                } else if (res.message === 'auth_fail') {\r\n                    dispatch({type: SHOW_LOGIN_MODAL});\r\n                } else {\r\n                    setSending(false);\r\n                    setErrMsg(res.message);\r\n                }\r\n        }).catch(err => {\r\n            setSending(false);\r\n            if(err.response.status === 401) {\r\n                toast.error('Please login to place this bet', {position: 'top-center'})\r\n                dispatch({type: SHOW_LOGIN_MODAL});\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"login-popup-wrapper\" id=\"popupLogin\">\r\n            <div className=\"login-popup\">\r\n                <div className=\"close-coupon-popup\" onClick={() => dispatch({type: SHOW_TIPSTER_BET})}>\r\n                    <i className=\"fa fa-times\" aria-hidden=\"true\" /></div>\r\n                <div className=\"login-content\">\r\n                    <div className=\"title\">\r\n                        <img src=\"/img/check-icon.png\" alt=\"\"\r\n                             className=\"title-icon\" />\r\n                        <span>Place Tipster Bet</span>\r\n                    </div>\r\n\r\n                        <div className=\"alert-bar\">\r\n                            <p>By placing this bet, you admit to relinquishing {betslip.percentage}% of your winnings as requested by the tipster</p>\r\n                        </div>\r\n\r\n                        <form onSubmit={rebet}>\r\n                            {errMsg && <div className=\"row\">\r\n                                <div className=\"info-error\">{errMsg}</div>\r\n                            </div>}\r\n                            <div className=\"row\">\r\n                                <div className=\"label\">Amount</div>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    name=\"amount\"\r\n                                    value={amount}\r\n                                    placeholder=\"0.00\"\r\n                                    autoComplete=\"off\"\r\n                                    onChange={(e) => setAmount(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"quickstake\">\r\n                                    <div className=\"quickstake__item\" onClick={() => updateAmount(0)}> Clear</div>\r\n                                    <div className=\"quickstake__item\" onClick={() => updateAmount(50)}> +50</div>\r\n                                    <div className=\"quickstake__item\" onClick={() => updateAmount(100)}> +100</div>\r\n                                    <div className=\"quickstake__item\" onClick={() => updateAmount(200)}> +200</div>\r\n                                    <div className=\"quickstake__item\" onClick={() => updateAmount(500)}> +500</div>\r\n                                    <div className=\"quickstake__item\" onClick={() => updateAmount(1000)}> +1000</div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"button-holder\">\r\n                                <input type=\"submit\" value={sending ? 'Placing bet...' : 'Place bet'} disabled={sending}/>\r\n\r\n                                <a href=\"javascript:;\" onClick={() => {\r\n                                    dispatch({type: SHOW_TIPSTER_BET});\r\n                                    reset()\r\n                                }}>\r\n                                    <div className=\"register-button\">Cancel</div>\r\n                                </a>\r\n                            </div>\r\n                        </form>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\LiveOdd.js",["630","631"],"import React, {useEffect, useState} from \"react\";\r\nimport {formatOdd, getSpread, isSelected} from \"../../Utils/helpers\";\r\nimport {createID} from \"../../Utils/couponHelpers\";\r\nimport {addToCoupon} from \"../../Redux/actions\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nexport const LiveOdd = ({newOdds, outcome, market, fixture, tournament, sport, coupon, globalVars, bonusList}) => {\r\n    const [oddsData, setOddsData] = useState(newOdds);\r\n    const [oddChangeUp, setOddChangeUp] = useState(false);\r\n    const [oddChangeDown, setOddChangeDown] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (newOdds !== 0) {\r\n            if(oddsData !== 0) {\r\n                if (newOdds.Odds[0].Value > oddsData.Odds[0].Value) {\r\n                    setOddChangeDown(false);\r\n                    setOddChangeUp(true);\r\n                    setOddsData(newOdds);\r\n                } else if (newOdds.Odds[0].Value < oddsData.Odds[0].Value) {\r\n                    setOddChangeUp(false);\r\n                    setOddChangeDown(true);\r\n                    setOddsData(newOdds);\r\n                }\r\n            } else {\r\n                setOddChangeDown(false);\r\n                setOddChangeUp(true);\r\n                setOddsData(newOdds);\r\n            }\r\n        } else {\r\n            setOddsData(newOdds);\r\n            setOddChangeUp(false);\r\n            setOddChangeDown(false);\r\n        }\r\n        // // check if current selection has event in it and update\r\n        // if (coupon.selections.length) {\r\n        //     checkOddsChange(coupon, fixture, newOdds, dispatch, globalVars, bonusList);\r\n        // }\r\n    }, [newOdds]);\r\n\r\n    const selectOdds = () => {\r\n        if (oddsData !== 0) {\r\n            fixture.TournamentName = tournament;\r\n            fixture.SportName = sport;\r\n            dispatch(addToCoupon(fixture, oddsData.MarketId, market.name + ' '+ getSpread(fixture.Markets, market), oddsData.Odds[0].Value, oddsData.Id, outcome.name,\r\n                createID(fixture.ProviderId, oddsData.MarketId, outcome.name, oddsData.Id),'live'))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className={`${(oddsData === 0 || (oddsData.Odds && oddsData.Odds[0].Value === 0)) ? 'blank' : 'oddItem'} ${oddChangeUp ? 'trend_2' : ''} ${oddChangeDown ? 'trend_4' : ''}\r\n        ${(isSelected(createID(fixture.ProviderId, oddsData.MarketId, outcome.name, oddsData.Id), coupon)) ? 'sel' : ''}\r\n        `}\r\n            onClick={selectOdds}\r\n        >\r\n            <div className=\"oddsTQ\">{outcome.name}</div>\r\n            {oddsData !== 0 && oddsData.Odds[0].Value !== 0 && <div className=\"oddsQ\">\r\n                <a><span>{formatOdd(oddsData.Odds[0].Value)}</span></a>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Utils\\constants.js",["632","633","634","635","636","637","638","639","640","641","642","643","644","645","646","647"],"export const periods = [\r\n    {value: 'today', label: 'Today'},\r\n    {value: '1hour', label: '1 <br /> hr'},\r\n    {value: '3hour', label: '3 <br /> hrs'},\r\n    {value: '24hour', label: '24 <br /> hrs'},\r\n    {value: '72hour', label: '72 <br /> hrs'},\r\n    {value: 'all', label: 'All'}\r\n];\r\n\r\nexport const LiveEventsOverview = [\r\n    {\r\n        sport: \"Soccer\",\r\n        id: 1,\r\n        markets: [\r\n            {\r\n                id: 110,\r\n                name: '1X2',\r\n                outcomes: [\r\n                    {name: '1', id: 1},\r\n                    {name: 'X', id: 2},\r\n                    {name: '2', id: 3},\r\n                ]\r\n            },\r\n            {\r\n                id: 302,\r\n                name: 'GG/NG',\r\n                outcomes: [\r\n                    {name: 'GG', id: 1},\r\n                    {name: 'NG', id: 2},\r\n                ]\r\n            },\r\n            {\r\n                id: 160,\r\n                name: 'Over/Under',\r\n                hasSpread: true,\r\n                outcomes: [\r\n                    {name: 'Over', id: 1},\r\n                    {name: 'Under', id: 2},\r\n                ]\r\n            }\r\n        ]\r\n    }, {\r\n        sport: \"Basketball\",\r\n        id: 2,\r\n        markets: [\r\n            {\r\n                name: 'Winner',\r\n                id: '',\r\n                outcomes: [\r\n                    {name: '1', id: 1},\r\n                    {name: '2', id: 2},\r\n                ]\r\n            },\r\n            {\r\n                name: 'Over/Under',\r\n                id: 160,\r\n                hasSpread: true,\r\n                outcomes: [\r\n                    {name: 'Over', id: 1},\r\n                    {name: 'Under', id: 2},\r\n                ]\r\n            },\r\n            {\r\n                name: 'Handicap',\r\n                id: 305,\r\n                outcomes: [\r\n                    {name: '1 H', id: 1},\r\n                    {name: '2 H', id: 2},\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        sport: \"Ice Hockey\",\r\n        id: 4,\r\n        markets: [\r\n            {\r\n                name: '1X2',\r\n                id: '',\r\n                outcomes: [\r\n                    {name: '1', id: 1},\r\n                    {name: 'X', id: 2},\r\n                    {name: '2', id: 3},\r\n                ]\r\n            },\r\n            {\r\n                name: 'Total goals',\r\n                id: 160,\r\n                hasSpread: true,\r\n                outcomes: [\r\n                    {name: 'Over', id: 1},\r\n                    {name: 'Under', id: 2},\r\n                ]\r\n            },\r\n            {\r\n                name: 'Next goal',\r\n                id: 195,\r\n                outcomes: [\r\n                    {name: '1', id: 1},\r\n                    {name: 'X', id: 2},\r\n                    {name: '2', id: 3},\r\n                ]\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        sport: \"Tennis\",\r\n        id: 5,\r\n        markets: [\r\n            {\r\n                name: 'Winner',\r\n                id: '',\r\n                outcomes: [\r\n                    {name: '1', id: 1},\r\n                    {name: '2', id: 2},\r\n                ]\r\n            },\r\n            {\r\n                name: 'Over/Under',\r\n                id: 160,\r\n                hasSpread: true,\r\n                outcomes: [\r\n                    {name: 'Over', id: 1},\r\n                    {name: 'Under', id: 2},\r\n                ]\r\n            },\r\n            {\r\n                name: 'Set 2: Who Wins the Game',\r\n                id: 305,\r\n                outcomes: [\r\n                    {name: '1 H', id: 1},\r\n                    {name: '2 H', id: 2},\r\n                ]\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        sport: \"Handball\",\r\n        id: 6,\r\n        markets: [\r\n            {\r\n                id: 110,\r\n                name: '1X2',\r\n                outcomes: [\r\n                    {name: '1', id: 1},\r\n                    {name: 'X', id: 2},\r\n                    {name: '2', id: 3},\r\n                ]\r\n            },\r\n            {\r\n                id: 302,\r\n                name: 'Total goals, regular time only',\r\n                outcomes: [\r\n                    {name: 'GG', id: 1},\r\n                    {name: 'NG', id: 2},\r\n                ]\r\n            },\r\n            {\r\n                id: 160,\r\n                name: 'Total goals home team',\r\n                hasSpread: true,\r\n                outcomes: [\r\n                    {name: 'Over', id: 1},\r\n                    {name: 'Under', id: 2},\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        sport: \"Football\",\r\n        id: 16,\r\n        markets: [\r\n            {\r\n                id: 110,\r\n                name: '1X2',\r\n                outcomes: [\r\n                    {name: '1', id: 1},\r\n                    {name: 'X', id: 2},\r\n                    {name: '2', id: 3},\r\n                ]\r\n            },\r\n            {\r\n                id: 302,\r\n                name: 'Total goals, regular time only',\r\n                outcomes: [\r\n                    {name: 'GG', id: 1},\r\n                    {name: 'NG', id: 2},\r\n                ]\r\n            },\r\n            {\r\n                id: 160,\r\n                name: 'Total goals home team',\r\n                hasSpread: true,\r\n                outcomes: [\r\n                    {name: 'Over', id: 1},\r\n                    {name: 'Under', id: 2},\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        sport: \"Cricket\",\r\n        id: 21,\r\n        markets: [\r\n            {\r\n                id: 9841,\r\n                name: 'Winner',\r\n                outcomes: [\r\n                    {name: '1', id: 1},\r\n                    {name: '2', id: 2},\r\n                ]\r\n            },\r\n            {\r\n                id: 302,\r\n                name: 'Next dismissal (caught / not caught)',\r\n                outcomes: [\r\n                    {name: 'Caught', id: 1},\r\n                    {name: 'Not caught', id: 2},\r\n                ]\r\n            },\r\n            {\r\n                id: 160,\r\n                name: 'Total runs',\r\n                hasSpread: true,\r\n                outcomes: [\r\n                    {name: 'Over', id: 1},\r\n                    {name: 'Under', id: 2},\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        sport: \"Volleyball\",\r\n        id: 23,\r\n        markets: [\r\n            {\r\n                id: 110,\r\n                name: 'Winner',\r\n                outcomes: [\r\n                    {name: '1', id: 1},\r\n                    {name: '2', id: 2},\r\n                ]\r\n            },\r\n            {\r\n                id: 302,\r\n                name: 'Total Points',\r\n                hasSpread: true,\r\n                outcomes: [\r\n                    {name: 'Over', id: 1},\r\n                    {name: 'Under', id: 2},\r\n                ]\r\n            },\r\n            {\r\n                id: 160,\r\n                name: 'Which team will win the set?',\r\n                outcomes: [\r\n                    {name: 'Over', id: 1},\r\n                    {name: 'Under', id: 2},\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        sport: \"Futsal\",\r\n        id: 29,\r\n        markets: [\r\n            {\r\n                id: 110,\r\n                name: '1X2',\r\n                outcomes: [\r\n                    {name: '1', id: 1},\r\n                    {name: '1', id: 2},\r\n                    {name: '2', id: 3},\r\n                ]\r\n            },\r\n            {\r\n                id: 302,\r\n                name: 'Total Goals',\r\n                hasSpread: true,\r\n                outcomes: [\r\n                    {name: 'Over', id: 1},\r\n                    {name: 'Under', id: 2},\r\n                ]\r\n            },\r\n            {\r\n                id: 160,\r\n                name: 'Asian Handicap',\r\n                outcomes: [\r\n                    {name: '1 AH', id: 1},\r\n                    {name: '2 AH', id: 2},\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        sport: \"ESport Dota 2\",\r\n        id: 112,\r\n        markets: [\r\n            {\r\n                id: 9388,\r\n                name: 'Winner',\r\n                outcomes: [\r\n                    {name: '1', id: 1},\r\n                    {name: '2', id: 3},\r\n                ]\r\n            },\r\n            {\r\n                id: 10020,\r\n                name: 'Map - Which team will win',\r\n                outcomes: [\r\n                    {name: '1', id: 1},\r\n                    {name: '2', id: 2},\r\n                ]\r\n            },\r\n            {\r\n                id: 10016,\r\n                name: 'Total Maps',\r\n                hasSpread: true,\r\n                outcomes: [\r\n                    {name: 'Over', id: 1},\r\n                    {name: 'Under', id: 2},\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        sport: \"ESport League of Legends\",\r\n        id: 111,\r\n        markets: [\r\n            {\r\n                id: 9388,\r\n                name: 'Winner',\r\n                outcomes: [\r\n                    {name: '1', id: 1},\r\n                    {name: '2', id: 2},\r\n                ]\r\n            },\r\n            {\r\n                id: 10020,\r\n                name: 'Map - Which team will win',\r\n                outcomes: [\r\n                    {name: '1', id: 1},\r\n                    {name: '2', id: 2},\r\n                ]\r\n            },\r\n            {\r\n                id: 10016,\r\n                name: 'Total Maps',\r\n                hasSpread: true,\r\n                outcomes: [\r\n                    {name: 'Over', id: 1},\r\n                    {name: 'Under', id: 2},\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        sport: \"Rugby\",\r\n        id: 254,\r\n        markets: [\r\n            {\r\n                id: 9388,\r\n                name: '1X2',\r\n                outcomes: [\r\n                    {name: '1', id: 1},\r\n                    {name: 'X', id: 2},\r\n                    {name: '2', id: 3},\r\n                ]\r\n            },\r\n            {\r\n                id: 10020,\r\n                name: 'Over/Under',\r\n                hasSpread: true,\r\n                outcomes: [\r\n                    {name: 'Over', id: 1},\r\n                    {name: 'Under', id: 2},\r\n                ]\r\n            },\r\n            {\r\n                id: 10016,\r\n                name: 'Total Goals Home',\r\n                outcomes: [\r\n                    {name: 'Over', id: 1},\r\n                    {name: 'Under', id: 2},\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\nexport const matchStatus = (status) => {\r\n    switch (status) {\r\n        case 0:\r\n            return 'Not Set';\r\n            break;\r\n        case 3:\r\n            return '1st Period';\r\n            break;\r\n        case 4:\r\n            return '2nd Period';\r\n            break;\r\n        case 8:\r\n            return '1st Set';\r\n            break;\r\n        case 9:\r\n            return '2nd Set';\r\n            break;\r\n        case 10:\r\n            return '3rd Set';\r\n            break;\r\n        case 11:\r\n            return '4th Set';\r\n            break;\r\n        case 15:\r\n            return '1st Quarter';\r\n            break;\r\n        case 16:\r\n            return '2nd Quarter';\r\n            break;\r\n        case 17:\r\n            return '3rd Quarter';\r\n            break;\r\n        case 18:\r\n            return '4th Quarter';\r\n        case 26:\r\n            return 'Overtime';\r\n        case 30:\r\n            return '2nd Period Overtime';\r\n            break;\r\n        case 90:\r\n            return 'In Progress';\r\n            break;\r\n        case 104:\r\n            return 'Lunch Break';\r\n        case 107:\r\n            return 'Injury Break';\r\n            break;\r\n        case 118:\r\n            return '1st Game';\r\n            break;\r\n        case 119:\r\n            return '2nd Game';\r\n            break;\r\n        case 120:\r\n            return '3rd Game';\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    if(status === 3){\r\n        return '1st Half';\r\n    }else if(status === 4){\r\n        return '2nd Half';\r\n    }else{\r\n        return 'Not Set';\r\n    }\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\Tablet.js",["648","649","650","651","652","653","654","655","656","657","658","659"],"import React, {useState} from \"react\";\r\nimport {getMarkets} from \"../../Services/apis\";\r\nimport {LOADING} from \"../../Redux/types\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {removeTournament} from \"../../Redux/actions\";\r\nimport FixturesList from \"./FixturesList\";\r\n\r\nexport default function Tablet({tournament, index, history}) {\r\n\r\n    const [activeMarket, setActiveMarket] = useState(tournament?.markets[0]);\r\n    const [activeGroup, setActiveGroup] = useState(tournament?.groups[0]);\r\n    const [markets, setMarkets] = useState(tournament?.markets);\r\n    const [selectedMarkets, setSelectedMarkets] = useState(tournament?.market_def);\r\n    const [predictions, setPredictions] = useState(tournament?.predictions);\r\n    const [fixtures, setFixtures] = useState(tournament?.fixtures);\r\n    const dispatch = useDispatch();\r\n    const coupon = useSelector(({couponData}) => couponData.coupon);\r\n\r\n    const changeMarket = (market) => {\r\n        dispatch({type: LOADING});\r\n        market.market_group_id = market.group_id;\r\n        setActiveMarket(market);\r\n        getMarkets(tournament.sport_tournament_id, tournament.sport_id, market.id).then(res => {\r\n            dispatch({type: LOADING});\r\n            setPredictions(res.predictions);\r\n            setFixtures(res.fixtures);\r\n            setSelectedMarkets(res.market_def);\r\n            document.getElementById(`event-wrapper-${tournament.sport_tournament_id}`).scrollIntoView();\r\n        }).catch(err => {\r\n            dispatch({type: LOADING});\r\n        });\r\n    }\r\n\r\n    const toggleInfo = e => {\r\n        const parent = e.target.parentElement;\r\n        parent.classList.toggle('show');\r\n    }\r\n    return (\r\n        <div className=\"oddsViewPanel \">\r\n            <div className={`divOdds ${predictions.length <= 9 ? 'r1 c'+predictions.length : 'r5 c6'}`}>\r\n                <div className=\"title\">\r\n                    <span>\r\n                        <span>{tournament?.sport_category_name}</span>\r\n                        <span>{tournament?.sport_tournament_name}</span>\r\n                    </span>\r\n                    <div className=\"btns\">\r\n                        <a className=\"lnkOddsCls\" onClick={() => dispatch(removeTournament(index))} />\r\n                        <a className=\"lnkOddsPrn\" />\r\n                        <a className=\"lnkOddsRfh\" />\r\n                        <a className=\"lnkOddsBack\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"OddsBreadbrum\">\r\n                    <ul>\r\n                        <li className=\"sportItem\">\r\n                            <a title=\"Soccer\">{tournament?.sport_name} </a>\r\n                        </li>\r\n                        <li className=\"groupItem\">\r\n                            <a>{tournament?.sport_category_name}</a>\r\n                        </li>\r\n                        <li className=\"eventItem\">\r\n                            <a >{tournament?.sport_tournament_name}</a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <ul className={`CGQ t${tournament?.groups.length}`}>\r\n                    {tournament?.groups.map((group, g) =>\r\n                    <li\r\n                        key={`group-${group.id}`}\r\n                        onClick={() => setActiveGroup(group)}\r\n                        className={`itm${g+1} ${group.id === activeGroup.id ? 'sel preSel' : ''}`}\r\n                    >\r\n                        <span>{group.name}</span>\r\n                        {group.id === activeGroup.id &&\r\n                            <ul className=\"CQ\">\r\n                                {markets.map(market =>\r\n                                    market.group_id === activeGroup.id &&\r\n                                    <li key={`event-markets-${market.id}`}\r\n                                        className={activeMarket?.id === market.id ? 'sel' : ''}\r\n                                        onClick={() => changeMarket(market)}>\r\n                                        <span >{market.name}</span>\r\n                                    </li>\r\n                                )}\r\n                            </ul>}\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n                <div className=\"oddClass\" >\r\n                    <div className=\"btnDisplay\" onClick={toggleInfo} />\r\n                    <div className=\"\">\r\n                        <div>\r\n                            <span className=\"ng-binding\">{activeMarket?.name}</span>\r\n                            <span className=\"ng-binding\">{activeMarket?.info}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"SEs\" id={`event-wrapper-${tournament?.sport_tournament_id}`}>\r\n                    <FixturesList\r\n                        fixtures={fixtures}\r\n                        predictions={predictions}\r\n                        selectedMarkets={selectedMarkets}\r\n                        coupon={coupon}\r\n                        dispatch={dispatch}\r\n                        history={history}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Redux\\actions\\sports.js",[],"C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Redux\\actions\\coupon.js",[],"C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\Pagination.js",["660","661","662"],"import React, {useEffect, useState} from \"react\";\r\n\r\nexport default function Pagination({data, offset, changePage, colspan}) {\r\n    const [pagesNumber, setPagesNumber] = useState([]);\r\n\r\n    const getNumbers = (data) => {\r\n        if (!data.to) {\r\n            return [];\r\n        }\r\n        let from = data.current_page - offset;\r\n        if (from < 1) {\r\n            from = 1;\r\n        }\r\n        let to = from + (offset * 2);\r\n        if (to >= data.last_page) {\r\n            to = data.last_page;\r\n        }\r\n        let pagesArray = [];\r\n        for (from = 1; from <= to; from++) {\r\n            pagesArray.push(from);\r\n        }\r\n        setPagesNumber(pagesArray);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data) {\r\n            getNumbers(data);\r\n        }\r\n    }, [data]);\r\n\r\n    // console.log('pagination'data);\r\n    // console.log('pages number', data);\r\n\r\n    return (\r\n        <tr className=\"dgPagerStyle\">\r\n            <td colSpan={colspan}>\r\n                <table border=\"0\">\r\n                    <tbody>\r\n                    <tr>\r\n                        <td>\r\n\r\n                        </td>\r\n                        {pagesNumber.map((page, i) =>\r\n                        <td key={i}>\r\n                            {page === data.current_page ? (\r\n                                <span>{page}</span>\r\n                            ):(\r\n                                <a href=\"javascript:;\" onClick={() => changePage(page)}>{page}</a>\r\n                            )}\r\n                        </td>\r\n                        )}\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div align=\"right\">Number of rows: {data.total}</div>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\BetListFilter.js",["663","664","665","666","667"],"import React from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nexport default function BetListFilter({filterData, handleChange, fetchResult, ticketsLength}) {\r\n    return (\r\n        <div className=\"RiquadroSrc\">\r\n            <div className=\"Cnt\">\r\n                <div>\r\n                    <div id=\"ac_w_PC_PC_BetList_panForm\">\r\n                        <table id=\"tblSearch\" className=\"SearchContainerStyle\">\r\n                            <tbody>\r\n                            <tr className=\"SearchSectionStyle\">\r\n                                <td className=\"SearchDescStyle\">\r\n                                    Date\r\n                                    <select\r\n                                        name=\"ac$w$PC$PC$BetList$ddlFiltoData\"\r\n                                        id=\"ac_w_PC_PC_BetList_ddlFiltoData\"\r\n                                        className=\"dropdownFiltoData\"\r\n                                        style={{width:'100px'}}>\r\n                                        <option selected=\"selected\" value=\"1\">Bet</option>\r\n                                        <option value=\"2\">Outcome</option>\r\n                                    </select>\r\n                                </td>\r\n                                <td className=\"SearchControlsStyle\">\r\n                                    <table width=\"100%\">\r\n                                        <tbody>\r\n                                        <tr>\r\n                                            <td width=\"20%\" className=\"SearchControlDesc\">\r\n                                                From\r\n                                            </td>\r\n                                            <td width=\"30%\">\r\n                                                <table cellPadding=\"0\" cellSpacing=\"0\">\r\n                                                    <tbody>\r\n                                                    <tr>\r\n                                                        <td>\r\n                                                            <DatePicker\r\n                                                                dateFormat=\"dd/MM/yyyy\"\r\n                                                                selected={filterData.from}\r\n                                                                className=\"textbox\"\r\n                                                                style={{width:'75px' }}\r\n                                                                onChange={date => handleChange('from', date)} />\r\n                                                        </td>\r\n                                                        <td width=\"25px\" align=\"center\">\r\n                                                            <img\r\n                                                                id=\"ac_w_PC_PC_BetList_cpopDal_CalendarBase_imgCalendar\"\r\n                                                                src=\"/img/Calendar.gif\"\r\n                                                                alt=\"Display Calendar\"\r\n                                                                style={{ borderWidth: '0px', cursor: 'pointer' }} />\r\n                                                        </td>\r\n                                                        <td>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    </tbody>\r\n                                                </table>\r\n\r\n\r\n                                            </td>\r\n                                            <td width=\"20%\" className=\"SearchControlDesc\">\r\n                                                To\r\n                                            </td>\r\n                                            <td width=\"30%\">\r\n                                                <table cellPadding=\"0\" cellSpacing=\"0\">\r\n                                                    <tbody>\r\n                                                    <tr>\r\n                                                        <td>\r\n                                                            <DatePicker\r\n                                                                dateFormat=\"dd/MM/yyyy\"\r\n                                                                selected={filterData.to}\r\n                                                                className=\"textbox\"\r\n                                                                style={{width:'75px' }}\r\n                                                                onChange={date => handleChange('to', date)} />\r\n                                                        </td>\r\n                                                        <td width=\"25px\" align=\"center\">\r\n                                                            <img\r\n                                                                id=\"ac_w_PC_PC_BetList_cpopAl_CalendarBase_imgCalendar\"\r\n                                                                src=\"/img/Calendar.gif\"\r\n                                                                alt=\"Display Calendar\"\r\n                                                                style={{ borderWidth: '0px', cursor: 'pointer' }} />\r\n                                                        </td>\r\n                                                        <td>\r\n\r\n                                                        </td>\r\n\r\n                                                    </tr>\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </td>\r\n                                        </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </td>\r\n                            </tr>\r\n                            <tr className=\"SearchSectionStyle\">\r\n                                <td className=\"SearchDescStyle\">\r\n                                    Betslip\r\n                                </td>\r\n                                <td className=\"SearchControlsStyle\">\r\n                                    <table className=\"SearchControlsContainerStyle\">\r\n                                        <tbody>\r\n                                        <tr>\r\n                                            <td width=\"20%\" className=\"SearchControlDesc\">\r\n                                                ID\r\n                                            </td>\r\n                                            <td width=\"20%\">\r\n                                                <input\r\n                                                    name=\"ac$w$PC$PC$BetList$txtCodiceCoupon\"\r\n                                                    type=\"text\"\r\n                                                    value={filterData.betslip_id}\r\n                                                    onChange={(e) => handleChange('betslip_id', e.target.value)}\r\n                                                    id=\"ac_w_PC_PC_BetList_txtCodiceCoupon\"\r\n                                                    className=\"textbox\" style={{width: '75px' }} />\r\n                                            </td>\r\n                                            <td width=\"20%\" className=\"SearchControlDesc\">\r\n                                                Outcome\r\n                                            </td>\r\n                                            <td width=\"20%\">\r\n                                                <select\r\n                                                    name=\"ac$w$PC$PC$BetList$ddlEsito\"\r\n                                                    id=\"ac_w_PC_PC_BetList_ddlEsito\"\r\n                                                    className=\"dropdown\"\r\n                                                    value={filterData.status}\r\n                                                    onChange={(e) => handleChange('status', e.target.value)}\r\n                                                    style={{width: '100px' }}>\r\n                                                    <option value=\"all\"></option>\r\n                                                    <option value=\"0\">Running</option>\r\n                                                    <option value=\"1\">Won</option>\r\n                                                    <option value=\"2\">Lost</option>\r\n                                                    <option value=\"4\">Cancelled</option>\r\n                                                    <option value=\"3\">Void</option>\r\n                                                </select>\r\n                                            </td>\r\n                                            <td width=\"20%\"></td>\r\n                                        </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td className=\"SearchDescStyle\">\r\n                                    Page Size\r\n                                </td>\r\n                                <td className=\"SearchControlsStyle\">\r\n                                    <table className=\"SearchControlsContainerStyle\">\r\n                                        <tbody>\r\n                                        <tr>\r\n                                            <td width=\"20%\" className=\"SearchControlDesc\">&nbsp;</td>\r\n                                            <td width=\"80%\" colSpan=\"3\">\r\n                                                <select\r\n                                                    name=\"ac$w$PC$PC$BetList$ddlPageSize\"\r\n                                                    id=\"ac_w_PC_PC_BetList_ddlPageSize\"\r\n                                                    className=\"dropdown\"\r\n                                                    value={filterData.page_size}\r\n                                                    onChange={(e) => handleChange( 'page_size', e.target.value)}\r\n                                                    style={{width: '75px' }}>\r\n                                                    <option selected=\"selected\" value=\"15\">15</option>\r\n                                                    <option value=\"50\">50</option>\r\n                                                    <option value=\"100\">100</option>\r\n                                                </select>\r\n                                            </td>\r\n                                        </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </td>\r\n                            </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <table className=\"SearchButtonsStyle\">\r\n                            <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                </td>\r\n                                <td className=\"tdSrcSX\">\r\n                                    <input type=\"submit\" name=\"ac$w$PC$PC$BetList$btnCancella\"\r\n                                           value=\"Cancel\"\r\n                                           id=\"ac_w_PC_PC_BetList_btnCancella\"\r\n                                           className=\"button\" />\r\n                                </td>\r\n                                <td className=\"tdSrcDX\">\r\n                                    <input\r\n                                        type=\"submit\" name=\"ac$w$PC$PC$BetList$btnAvanti\"\r\n                                        value=\"Continue\"\r\n                                        onClick={() => fetchResult(1)}\r\n                                        id=\"ac_w_PC_PC_BetList_btnAvanti\" className=\"button\" />\r\n                                </td>\r\n                            </tr>\r\n                            </tbody>\r\n                        </table>\r\n\r\n                    </div>\r\n                    <table id=\"tblSearch2\" className=\"SearchContainerStyle Secondary\">\r\n                        <tbody>\r\n                        <tr className=\"SearchSectionStyle\">\r\n                            <td className=\"SearchDescStyle\">\r\n                                <div style={{position: 'relative' }}>\r\n                                    No. Bets\r\n                                    <div className=\"Dati\">\r\n                                        <span id=\"ac_w_PC_PC_BetList_lblNumSco\">{ticketsLength}</span></div>\r\n                                </div>\r\n                            </td>\r\n                            <td className=\"SearchControlsStyle\"></td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <table className=\"SearchContainerStyle Secondary\">\r\n                        <tbody>\r\n                        <tr className=\"SearchSectionStyle\">\r\n                            <td className=\"SearchDescStyle\">\r\n                                Key\r\n                            </td>\r\n                            <td className=\"SearchControlsStyle\">\r\n                                <table className=\"SearchControlsContainerStyle\">\r\n                                    <tbody>\r\n                                    <tr>\r\n                                        <td className=\"SearchControlDesc\"\r\n                                            style={{ textAlign: 'left' }}>\r\n                                            Outcome:\r\n                                        </td>\r\n                                        <td>\r\n                                            <img id=\"ac_w_PC_PC_BetList_imgLegEsito1\"\r\n                                                 src=\"/img/ScommesseEsito_1.gif\"\r\n                                                 style={{borderWidth: '0px' }} />                                                                </td>\r\n                                        <td>\r\n                                            Winning\r\n                                        </td>\r\n                                        <td>\r\n                                            <img id=\"ac_w_PC_PC_BetList_imgLegEsito2\"\r\n                                                 src=\"/img/ScommesseEsito_2.gif\"\r\n                                                 style={{borderWidth: '0px' }} />\r\n                                        </td>\r\n                                        <td>\r\n                                            Lost\r\n                                        </td>\r\n                                        <td>\r\n                                            <img id=\"ac_w_PC_PC_BetList_imgLegEsito3\"\r\n                                                 src=\"/img/ScommesseEsito_3.gif\"\r\n                                                 style={{borderWidth: '0px' }} />                                                                </td>\r\n                                        <td>\r\n                                            Running\r\n                                        </td>\r\n                                        <td>\r\n                                            <img id=\"ac_w_PC_PC_BetList_imgLegEsito4\"\r\n                                                 src=\"/img/ScommesseEsito_4.gif\"\r\n                                                 style={{borderWidth: '0px' }} />                                                                </td>\r\n                                        <td>\r\n                                            Cancelled\r\n                                        </td>\r\n                                        <td>\r\n                                            <img id=\"ac_w_PC_PC_BetList_imgLegEsito5\"\r\n                                                 src=\"/img/ScommesseEsito_5.gif\"\r\n                                                 style={{borderWidth: '0px' }} />                                                                </td>\r\n                                        <td>\r\n                                            Being processed\r\n                                        </td>\r\n                                    </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\UpcomingEvents.js",["668","669","670","671","672","673","674","675"],"import React, {useEffect, useState} from 'react';\r\nimport useSWR from \"swr/esm/use-swr\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {\r\n    formatDate,\r\n    getOdds,\r\n    getStats,\r\n    groupBy,\r\n    groupFixtures,\r\n    isSelected,\r\n} from \"../../Utils/helpers\";\r\nimport {addToCoupon} from \"../../Redux/actions\";\r\nimport {createID} from \"../../Utils/couponHelpers\";\r\n\r\nexport default function UpcomingEvents() {\r\n    const [sports, setSports] = useState([]);\r\n    const [activeSport, setActiveSport] = useState(null);\r\n    const dispatch = useDispatch();\r\n    const coupon = useSelector(({couponData}) => couponData.coupon);\r\n\r\n    const {data, error} = useSWR('/sports/web-content?sports=main&type=home&limit=10');\r\n\r\n    useEffect(() => {\r\n        if(data) {\r\n            setSports(data);\r\n            setActiveSport(data[0]);\r\n            // setPredictions(data[0]?.predictions);\r\n        }\r\n    }, [data]);\r\n\r\n\r\n    return (\r\n        <div className=\"match-data-container\">\r\n            <div className=\"upco-top\">\r\n                <h4>Upcoming Events</h4>\r\n                <div className=\"upco-tab\">\r\n                    {sports?.map(sport =>\r\n                        <a onClick={() => setActiveSport(sport)}\r\n                            key={`st${sport.sport_id}`}\r\n                           className={`st${sport.sport_id} ${sport.sport_id === activeSport?.sport_id ? 'st-on' : ''}`}\r\n                        >{sport.name}</a>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <table className=\"match-data-table\">\r\n                <tbody className=\"match-data-tbody\">\r\n                <tr className=\"stat-top\">\r\n                    <th className=\"match\">Match</th>\r\n                    {activeSport?.market_def.map(market =>\r\n                    <th colSpan={market.outcomes.length} key={market.id}>{market.name}</th>\r\n                    )}\r\n                </tr>\r\n                <tr className=\"stat-bottom\">\r\n                    <th></th>\r\n                    {activeSport?.predictions.length > 0 && activeSport?.predictions.map(prediction =>\r\n                    <th key={`outcome-${prediction.odd_id}`}>{prediction.odd_name}</th>\r\n                    )}\r\n                </tr>\r\n                {activeSport?.fixtures && groupFixtures(activeSport?.fixtures).map((fixture, i) =>\r\n                    <>\r\n                        <tr className=\"date\" key={i}>\r\n                            <td colSpan={9}>{formatDate(fixture.event_date, 'dddd DD, MMMM')}</td>\r\n                        </tr>\r\n                        {fixture.events.map(match =>\r\n                            <>\r\n                                <tr className=\"stat-row\" key={`key_${match.provider_id}`} id={`event_${match.provider_id}`}>\r\n                                    <td className=\"match-teams-content\">\r\n                                        <div className=\"match-teams-content\">\r\n                                            <NavLink className=\"match-teams-content-a\"\r\n                                                     to={`/Sport/EventDetail?EventID=${match.provider_id}`}>\r\n                                                <span className=\"match-teams\">{match.team_a}</span>\r\n                                                <span className=\"match-teams\">{match.team_b}</span>\r\n                                            </NavLink>\r\n                                            <div className=\"match-teams-content-b\">\r\n                                                <span className=\"match-date\">{match.event_id}</span>\r\n                                                <span className=\"match-time\">{match.event_time}</span>\r\n                                                <a className=\"match-grap\" onClick={() => getStats(match)} href=\"javascript:;\" />\r\n                                                <a className=\"head-grap\" href=\"#\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </td>\r\n                                    {activeSport?.predictions.length > 0 && activeSport?.predictions.map(row =>\r\n                                        <td key={`prediction-${row.odd_id}`}>\r\n                                            <span\r\n                                                onClick={() => dispatch(addToCoupon(match, row.market_id, row.market_name, getOdds(row, match.odds), row.odd_id, row.odd_name, createID(match.provider_id, row.market_id, row.odd_name, row.odd_id), match.fixture_type))}\r\n                                                className={`match-value odd quote \r\n                                                ${(getOdds(row, match.odds) === null || getOdds(row, match.odds) === '-') ? 'disabled' : ''}\r\n                                                ${(isSelected(createID(match.provider_id, row.market_id, row.odd_name, row.odd_id), coupon)) ? 'selected' : ''}`}\r\n                                            >{getOdds(row, match.odds)}</span>\r\n                                        </td>\r\n                                    )}\r\n                                </tr>\r\n                                <tr key={`c_${match.id}`}>\r\n                                    <td colSpan=\"11\">\r\n                                        <div id={`SingleInsideStats_${match.provider_id}`} />\r\n                                    </td>\r\n                                </tr>\r\n                            </>\r\n                        )}\r\n                    </>\r\n                )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\TopBets.js",["676","677","678","679","680","681","682"],"import React, { useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport {\r\n    formatDate,\r\n    getOdds, getStats,\r\n    groupFixtures,\r\n    isSelected,\r\n} from \"../../Utils/helpers\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {addToCoupon} from \"../../Redux/actions\";\r\nimport {createID} from \"../../Utils/couponHelpers\";\r\nimport Loader from \"./Loader\";\r\nimport useSWR from \"swr/esm/use-swr\";\r\n\r\nexport default function TopBets() {\r\n    const [topBets, setTopBets] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [fixtures, setFixtures] = useState([]);\r\n    const [activeTournament, setActiveTournament] = useState([]);\r\n    const dispatch = useDispatch();\r\n    const coupon = useSelector(({couponData}) => couponData.coupon);\r\n    const [predictions, setPredictions] = useState([]);\r\n\r\n    const {data: res, error} = useSWR('/sports/topbets');\r\n\r\n    useEffect(() => {\r\n        if (res) {\r\n            setLoading(false);\r\n            setActiveTournament(res.topbets[0]?.tournament_id)\r\n            setTopBets(res);\r\n            setPredictions(res.predictions);\r\n        }\r\n    }, [res]);\r\n\r\n    useEffect(() => {\r\n        if(activeTournament) {\r\n            const events = topBets?.events.filter(item => item.sport_tournament_id === activeTournament);\r\n            setFixtures(events);\r\n        }\r\n    }, [activeTournament, topBets]);\r\n\r\n    return (\r\n\r\n        <div className=\"topbets-container\">\r\n            <div className=\"topbets-top\">\r\n                <h4>Top Bets</h4>\r\n                <div id=\"sb_1\" data-id=\"1\" className=\"topbets-tab active\">\r\n                    <a href=\"#\">Football</a>\r\n                </div>\r\n            </div>\r\n            <div className=\"topbets-bottom\">\r\n                {topBets && topBets.topbets.map(topbet =>\r\n                    <div\r\n                        onClick={() => setActiveTournament(topbet?.tournament_id)}\r\n                        className={`topbets-cell sg_1 ${topbet?.tournament_id === activeTournament ? 'selected' : ''}`}\r\n                        key={`topbet-item-${topbet.id}`}>\r\n                        <p className=\"nomeGruppo ng-binding\">{topbet.tournament.category.name}</p>\r\n                        <h4 className=\"nomeEvento ng-binding\">{topbet.tournament.name}</h4>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div className=\"match-data-container\">\r\n                <table className=\"match-data-table\">\r\n                    <tbody className=\"match-data-tbody\">\r\n                    <tr className=\"stat-top\">\r\n                        <th className=\"match\">Match</th>\r\n                        <th colSpan=\"3\">1X2</th>\r\n                        <th colSpan=\"3\">Double Chance</th>\r\n                        <th colSpan=\"2\">Over/Under 2.5</th>\r\n                    </tr>\r\n                    <tr className=\"stat-bottom\">\r\n                        <th></th>\r\n                        <th>1</th>\r\n                        <th>X</th>\r\n                        <th>2</th>\r\n                        <th>1X</th>\r\n                        <th>12</th>\r\n                        <th>X2</th>\r\n                        <th>Over</th>\r\n                        <th>Under</th>\r\n                    </tr>\r\n                    {loading ?\r\n                        <tr>\r\n                            <td colSpan=\"9\">\r\n                                <Loader />\r\n                            </td>\r\n                        </tr>\r\n                    :\r\n                    fixtures && groupFixtures(fixtures).map((fixture, i) =>\r\n                        <>\r\n                        <tr className=\"date\" key={i}>\r\n                            <td colSpan={9}>{formatDate(fixture.event_date, 'dddd DD, MMMM')}</td>\r\n                        </tr>\r\n                        {fixture.events.map(match =>\r\n                            <>\r\n                                <tr className=\"stat-row\" key={`key_${match.provider_id}`} id={`event_${match.provider_id}`}>\r\n                                    <td className=\"match-teams-content\">\r\n                                        <div className=\"match-teams-content\">\r\n                                            <NavLink  to={`/Sport/EventDetail?EventID=${match.provider_id}`} className=\"match-teams-content-a\">\r\n                                                <span className=\"match-teams\">{match.event_name}</span>\r\n                                            </NavLink>\r\n                                            <div className=\"match-teams-content-b\">\r\n                                                <span className=\"match-date\">{match.event_id}</span>\r\n                                                <span className=\"match-time\">{formatDate(match.schedule, 'HH:mm')}</span>\r\n                                                <a className=\"match-grap\"\r\n                                                   onClick={() => window.open(`https://s5.sir.sportradar.com/betradar/en/match/${match.provider_id}`, 'stats', 'width=1078,height=768')}\r\n                                                   href=\"#\" />\r\n                                                <a className=\"head-grap\"  href=\"#\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </td>\r\n                                    {predictions.length > 0 && predictions.map(row =>\r\n                                        <td key={`prediction-${row.odd_id}`}>\r\n                                            <span\r\n                                                onClick={() => dispatch(addToCoupon(match, row.market_id, row.market_name, getOdds(row, match.odds), row.odd_id, row.odd_name, createID(match.provider_id, row.market_id, row.odd_name, row.odd_id), match.fixture_type))}\r\n                                                className={`match-value odd quote \r\n                                                ${(getOdds(row, match.odds) === null || getOdds(row, match.odds) === '-') ? 'disabled' : ''}\r\n                                                ${(isSelected(createID(match.provider_id, row.market_id, row.odd_name, row.odd_id), coupon)) ? 'selected' : ''}`}>{getOdds(row, match.odds)}</span>\r\n                                        </td>\r\n                                    )}\r\n                                </tr>\r\n                                <tr key={`c_${match.id}`}>\r\n                                    <td colSpan=\"11\">\r\n                                        <div className={`SingleInsideStats_${match.provider_id}`} />\r\n                                    </td>\r\n                                </tr>\r\n                                </>\r\n                            )}\r\n                        </>\r\n                    )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Account\\SportsFinancials.js",["683","684","685","686","687","688","689"],"import React, {useEffect, useState} from \"react\";\r\nimport {formatDate, formatNumber} from \"../../Utils/helpers\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport moment from \"moment\";\r\nimport {sportsReport} from \"../../Services/apis\";\r\nimport {toast} from \"react-toastify\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nexport default function SportsFinancials() {\r\n    const [commissionReport, setCommissionReport] = useState({});\r\n    const [openBetsReport, setOpenBetsReport] = useState({});\r\n    const [salesSummary, setSalesSummary] = useState([]);\r\n    const {SportsbookGlobalVariable} = useSelector((state) => state.sportsBook);\r\n\r\n    const [filterData, setFilterData] = useState({\r\n        from: moment().toDate(),\r\n        to: moment().toDate(),\r\n        page_size: 15\r\n    });\r\n\r\n\r\n    const fetchResult = () => {\r\n        const data = {...filterData};\r\n        data.from = formatDate(data.from, 'DD-MM-YYYY');\r\n        data.to = formatDate(data.to, 'DD-MM-YYYY');\r\n\r\n        sportsReport(data).then(res => {\r\n            setCommissionReport(res.commissionReport);\r\n            setOpenBetsReport(res.openBetsReport);\r\n            setSalesSummary(res.salesSummary);\r\n        }).catch(err => toast.error('Unable to fetch results'));\r\n    }\r\n\r\n    useEffect(() => {\r\n       fetchResult();\r\n    }, []);\r\n\r\n    const handleChange = (name, value) => {\r\n        setFilterData({...filterData, [name]: value });\r\n    }\r\n\r\n    const setDateRange = (e) => {\r\n        const period = e.target.value;\r\n        switch(period) {\r\n            case 'today':\r\n                setFilterData({\r\n                    ...filterData,\r\n                    from: moment().toDate(),\r\n                    to: moment().toDate()\r\n                });\r\n                break;\r\n            case 'yesterday':\r\n                setFilterData({\r\n                    ...filterData,\r\n                    from: moment().subtract(1, 'day').toDate(),\r\n                    to: moment().subtract(1, 'day').toDate()\r\n                });\r\n                break;\r\n            case 'current_week':\r\n                setFilterData({\r\n                    ...filterData,\r\n                    from: moment().startOf('isoWeek').toDate(),\r\n                    to: moment().endOf('isoWeek').toDate()\r\n                });\r\n                break;\r\n            case 'last_week':\r\n                setFilterData({\r\n                    ...filterData,\r\n                    from: moment().subtract(1, 'week').startOf('isoWeek').toDate(),\r\n                    to: moment().subtract(1, 'week').endOf('isoWeek').toDate()\r\n                });\r\n                break;\r\n            case 'current_month':\r\n                setFilterData({\r\n                    ...filterData,\r\n                    from: moment().startOf('month').toDate(),\r\n                    to: moment().endOf('month').toDate()\r\n                });\r\n                break;\r\n            case 'last_month':\r\n                setFilterData({\r\n                    ...filterData,\r\n                    from: moment().subtract(1, 'month').startOf('month').toDate(),\r\n                    to: moment().subtract(1, 'month').endOf('month').toDate()\r\n                });\r\n                break;\r\n            case 'last_30_days':\r\n                setFilterData({\r\n                    ...filterData,\r\n                    from: moment().subtract(30, 'days').toDate(),\r\n                    to: moment().toDate()\r\n                });\r\n                break;\r\n            default:\r\n                setFilterData({\r\n                    ...filterData,\r\n                    from: moment().toDate(),\r\n                    to: moment().toDate()\r\n                });\r\n        }\r\n        // fetchResult();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div id=\"MainContent\" className=\"\">\r\n                <div className=\"Riquadro\">\r\n                    <div className=\"CntSX\">\r\n                        <div className=\"CntDX\">\r\n                            <div className=\"betslist\">\r\n                                <div className=\"RiquadroSrc\">\r\n                                    <div className=\"Cnt\">\r\n                                        <div>\r\n                                            <div className=\"pb15 pt15\">\r\n                                                <table className=\"SearchContainerStyle\" >\r\n                                                    <tbody>\r\n                                                    <tr className=\"SearchSectionStyle\">\r\n                                                        <td className=\"SearchDescStyle\">\r\n                                                            Period\r\n                                                            <select\r\n                                                                name=\"ac$w$PC$PC$BetList$ddlFiltoData\"\r\n                                                                id=\"ac_w_PC_PC_BetList_ddlFiltoData\"\r\n                                                                className=\"dropdownFiltoData\"\r\n                                                                onChange={setDateRange}\r\n                                                                style={{width:'100px'}}\r\n                                                            >\r\n                                                                <option value=\"today\">Today</option>\r\n                                                                <option value=\"yesterday\">Yesterday</option>\r\n                                                                <option value=\"current_week\">Current Week</option>\r\n                                                                <option value=\"last_week\">Last Week</option>\r\n                                                                <option value=\"current_month\">Current Month</option>\r\n                                                                <option value=\"last_month\">Last Month</option>\r\n                                                                <option value=\"last_30_days\">Last 30 Days</option>\r\n                                                                <option value=\"date_range\">Date Range</option>\r\n                                                            </select>\r\n                                                        </td>\r\n                                                        <td className=\"SearchDescStyle\">\r\n                                                            From\r\n                                                            <DatePicker\r\n                                                                dateFormat=\"dd/MM/yyyy\"\r\n                                                                selected={filterData.from}\r\n                                                                className=\"dropdownFiltoData\"\r\n                                                                style={{width:'75px' }}\r\n                                                                onChange={date => handleChange('from', date)} />\r\n                                                        </td>\r\n                                                        <td className=\"SearchControlsStyle\">\r\n                                                            <td className=\"SearchDescStyle\">\r\n                                                                To\r\n                                                                <DatePicker\r\n                                                                    dateFormat=\"dd/MM/yyyy\"\r\n                                                                    selected={filterData.to}\r\n                                                                    className=\"dropdownFiltoData\"\r\n                                                                    style={{width:'75px' }}\r\n                                                                    onChange={date => handleChange('to', date)} />\r\n                                                            </td>\r\n                                                        </td>\r\n                                                        <td className=\"tdSrcDX\">\r\n                                                            <input\r\n                                                                type=\"submit\" name=\"ac$w$PC$PC$BetList$btnAvanti\"\r\n                                                                value=\"Search\"\r\n                                                                onClick={fetchResult}\r\n                                                                id=\"ac_w_PC_PC_BetList_btnAvanti\" className=\"button\" />\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n                                            <div className=\"divDg\">\r\n                                                <h3 className=\"pl5\">\r\n                                                    Sales Summary\r\n                                                </h3>\r\n                                                <div className=\"p-0\">\r\n                                                    <table className=\"dgStyle\" style={{borderWidth:'1px', borderStyle:'None', width:'100%',borderCollapse: 'collapse'}}>\r\n                                                        <thead>\r\n                                                        <tr className=\"dgHdrStyle\">\r\n                                                            <th className=\"txt-c\">User</th>\r\n                                                            <th className=\"txt-r\">Sold</th>\r\n                                                            <th className=\"txt-r\">Won</th>\r\n                                                            <th className=\"txt-r\">Cash at Hand</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                        {salesSummary && salesSummary.map((summary, i) =>\r\n                                                            <tr className=\"dgItemStyle\">\r\n                                                                <td className=\"txt-c\">{summary.username}</td>\r\n                                                                <td className=\"txt-r\">{formatNumber(summary.sold)}</td>\r\n                                                                <td className=\"txt-r\">{formatNumber(summary.won)}</td>\r\n                                                                <td className=\"txt-r\">{formatNumber(summary.balance)}</td>\r\n                                                            </tr>\r\n                                                        )}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n\r\n                                                <h3 className=\"pl5\">\r\n                                                    General Report on Open Bet\r\n                                                </h3>\r\n                                                <div className=\"p-0 card-body\">\r\n                                                    <table className=\"dgStyle\" style={{borderWidth:'1px', borderStyle:'None', width:'100%',borderCollapse: 'collapse'}}>\r\n                                                        <thead className=\"txt-c\">\r\n                                                        <tr className=\"dgHdrStyle\">\r\n                                                            <th>Detail</th>\r\n                                                            <th>Date</th>\r\n                                                            <th>No. of Sales</th>\r\n                                                            <th>Tot. Sold</th>\r\n                                                            <th>Tot. Potential Win</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                        <tr className=\"dgItemStyle\">\r\n                                                            <td className=\"txt-c\">\r\n                                                                <a href=\"javascript:;\" className=\"text-dark\">\r\n                                                                    {/*<fa icon=\"search\"></fa>*/}\r\n                                                                </a>\r\n                                                            </td>\r\n                                                            <td className=\"txt-c\">{ `From ${formatDate(filterData.from, 'DD-MM-YYYY') } To ${ formatDate(filterData.to, 'DD-MM-YYYY')}`}</td>\r\n                                                            <td className=\"txt-c\">{ openBetsReport?.totalPlayed }</td>\r\n                                                            <td className=\"txt-r pr-2\">{SportsbookGlobalVariable.Currency} { (openBetsReport?.totalAmountPlayed === 0) ? '0.00' : formatNumber(openBetsReport?.totalAmountPlayed) }</td>\r\n                                                            <td className=\"txt-r\">{SportsbookGlobalVariable.Currency} { (openBetsReport?.potWinnings === 0) ? '0.00' : formatNumber(openBetsReport?.potWinnings) }</td>\r\n                                                        </tr>\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                                <h3 className=\"pl5\">\r\n                                                    Open Bet Report By Client\r\n                                                </h3>\r\n                                                <div className=\"p-0\">\r\n                                                    <table className=\"dgStyle\" style={{borderWidth:'1px', borderStyle:'None', width:'100%',borderCollapse: 'collapse'}}>\r\n                                                        <thead className=\"txt-c\">\r\n                                                        <tr className=\"dgHdrStyle\">\r\n                                                            <th>Detail</th>\r\n                                                            <th>User Name</th>\r\n                                                            <th>No. of Sales</th>\r\n                                                            <th>Tot. Sold</th>\r\n                                                            <th>Possible Win</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                        {openBetsReport?.lists && openBetsReport?.lists.map((bet, i) =>\r\n                                                            <tr className=\"dgItemStyle\" key={i}>\r\n                                                            <td className=\"txt-c\">\r\n                                                                <a href=\"javascript:;\" className=\"text-dark\">\r\n                                                                    {/*<fa icon=\"search\"></fa>*/}\r\n                                                                </a>\r\n                                                            </td>\r\n                                                            <td className=\"txt-c\">{ bet.username }</td>\r\n                                                            <td className=\"txt-c\">{ bet.total }</td>\r\n                                                            <td className=\"txt-r pr-2\">{SportsbookGlobalVariable.Currency} { (bet.stake === 0) ? '0.00' : formatNumber(bet.stake) }</td>\r\n                                                            <td className=\"txt-r pr-2\">{SportsbookGlobalVariable.Currency} { (bet.winnings === 0) ? '0.00' : formatNumber(bet.winnings) }</td>\r\n                                                            </tr>\r\n                                                        )}\r\n                                                        </tbody>\r\n                                                        <tfoot className=\"bg-dark text-white\">\r\n                                                        <tr className=\"dgTotalsStyle\">\r\n                                                            <td colSpan=\"2\" className=\"txt-c\">Total</td>\r\n                                                            <td className=\"txt-c\">{ openBetsReport?.totalPlayed }</td>\r\n                                                            <td className=\"txt-r\">{SportsbookGlobalVariable.Currency} { formatNumber(openBetsReport?.totalAmountPlayed) }</td>\r\n                                                            <td className=\"txt-r\">{SportsbookGlobalVariable.Currency} { formatNumber(openBetsReport?.potWinnings) }</td>\r\n                                                        </tr>\r\n                                                        </tfoot>\r\n                                                    </table>\r\n                                                </div>\r\n                                                <h3 className=\"pl5\">\r\n                                                    General Report on Valid Bets For Commissions\r\n                                                </h3>\r\n                                                <div className=\"p-0 card-body\">\r\n                                                    <table className=\"dgStyle\" style={{borderWidth:'1px', borderStyle:'None', width:'100%',borderCollapse: 'collapse'}}>\r\n                                                        <thead>\r\n                                                        <tr className=\"dgHdrStyle txt-c\">\r\n                                                            <th>Detail</th>\r\n                                                            <th>Date</th>\r\n                                                            <th>No. of Sales</th>\r\n                                                            <th>Tot. Sold</th>\r\n                                                            <th>Tot. Won</th>\r\n                                                            <th>Commission</th>\r\n                                                            <th>Bonus Perc.</th>\r\n                                                            <th>Bonus</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                        <tr className=\"dgItemStyle\">\r\n                                                            <td className=\"txt-c\">\r\n                                                                <a href=\"javascript:;\" className=\"text-dark\">\r\n                                                                    {/*<fa icon=\"search\"></fa>*/}\r\n                                                                </a>\r\n                                                            </td>\r\n                                                            <td className=\"txt-c\">{ `From ${formatDate(filterData.from, 'DD-MM-YYYY') } To ${ formatDate(filterData.to, 'DD-MM-YYYY')}`}</td>\r\n                                                            <td className=\"txt-c\">{ commissionReport?.no_of_tickets }</td>\r\n                                                            <td className=\"txt-r\">{SportsbookGlobalVariable.Currency} { (commissionReport?.played === 0) ? '0.00' : formatNumber(commissionReport?.played) }</td>\r\n                                                            <td className=\"txt-r\">{SportsbookGlobalVariable.Currency} { (commissionReport?.won === 0) ? '0.00' : formatNumber(commissionReport?.won) }</td>\r\n                                                            <td className=\"txt-r\">{SportsbookGlobalVariable.Currency} { (commissionReport?.total_commission === 0) ? '0.00' : formatNumber(commissionReport?.total_commission) }</td>\r\n                                                            <td className=\"txt-r\">0%</td>\r\n                                                            <td className=\"txt-r\">{SportsbookGlobalVariable.Currency} 0.00</td>\r\n                                                        </tr>\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Account\\JackpotBetList.js",["690"],"import React, {useEffect, useState} from \"react\";\r\nimport moment from \"moment\";\r\nimport {cancelTicket, getJackpotBetList} from \"../../Services/apis\";\r\nimport {formatDate, formatNumber} from \"../../Utils/helpers\";\r\nimport BetListFilter from \"../Components/BetListFilter\";\r\nimport BetListOutcome from \"../Components/BetListOutcome\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Pagination from \"../Components/Pagination\";\r\nimport {LOADING} from \"../../Redux/types\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nexport default function JackpotBetList({match, history}) {\r\n    const [isCancel, setCancel] = useState({show: false, ticketId: ''});\r\n    const dispatch = useDispatch();\r\n\r\n    const [filterData, setFilterData] = useState({\r\n        from: moment().subtract(1, 'w').toDate(),\r\n        to: moment().toDate(),\r\n        period: '',\r\n        status: '',\r\n        betslip_id:'',\r\n        page_size: 15\r\n    });\r\n\r\n    const [pagination, setPagination] = useState({\r\n        total: 0,\r\n        per_page: 2,\r\n        from: 1,\r\n        to: 0,\r\n        current_page: 1,\r\n        last_page: 0\r\n    });\r\n\r\n    const [totalStake, setTotalStake] = useState(0);\r\n    const [totalWinnings, setTotalWinnings] = useState(0);\r\n    const [loading, setLoading] = useState(true);\r\n    const [bets, setBets] = useState([]);\r\n    const {user} = useSelector(state => state.auth);\r\n\r\n    const fetchBetList = (page) => {\r\n        setLoading(true);\r\n        const data = {\r\n            type: filterData.type,\r\n            from: moment(filterData.from).format('DD/MM/YYYY'),\r\n            to: moment(filterData.to).format('DD/MM/YYYY'),\r\n            page_size: filterData.page_size,\r\n            betslip_id: filterData.betslip_id\r\n        }\r\n        getJackpotBetList(data, page).then(res => {\r\n            setPagination({\r\n                total: res.tickets.total,\r\n                per_page: res.tickets.per_page,\r\n                from: res.tickets.from,\r\n                to: res.tickets.to,\r\n                current_page: res.tickets.current_page,\r\n                last_page: res.tickets.last_page\r\n            })\r\n            setBets(res.tickets.data);\r\n            setTotalWinnings(res.totalWon);\r\n            setTotalStake(res.totalSales);\r\n            setLoading(false);\r\n\r\n        }).catch(err => {\r\n            setLoading(false);\r\n\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchBetList(1);\r\n    }, []);\r\n\r\n    const handleChange = (name, value) => {\r\n        setFilterData({...filterData, [name]: value });\r\n    }\r\n\r\n    const confirmCancel = (ticketId) => {\r\n        setCancel({\r\n            ...isCancel,\r\n            show: true,\r\n            ticketId\r\n        });\r\n    }\r\n\r\n    const doCancel = () => {\r\n        dispatch({type: LOADING});\r\n        cancelTicket(isCancel.ticketId).then(res => {\r\n            dispatch({type: LOADING});\r\n            closeModal();\r\n            if(res.success) {\r\n                toast.success('Ticket has been canceled');\r\n                fetchBetList(pagination.current_page);\r\n            } else {\r\n                toast.error(res.message);\r\n            }\r\n        })\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setCancel({...isCancel, show: false});\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div id=\"MainContent\" className=\"\">\r\n                <div className=\"Riquadro\">\r\n                    <div className=\"CntSX\">\r\n                        <div className=\"CntDX\">\r\n                            <div className=\"betlist\">\r\n                                <BetListFilter filterData={filterData} handleChange={handleChange} fetchResult={fetchBetList} ticketsLength={bets.length} />\r\n                                <div className=\"divDg\">\r\n\r\n                                    {/*<div>\r\n                                        <table\r\n                                            className=\"dgStyle\" cellSpacing=\"0\" border=\"0\"\r\n                                            id=\"ac_w_PC_PC_BetList_grid\"\r\n                                            style={{\r\n                                                borderWidth:'0px',\r\n                                                borderStyle:'None',\r\n                                                width: '100%',\r\n                                                borderCollapse:'collapse'\r\n                                            }}>\r\n                                            <tbody>\r\n                                            <tr className=\"dgEmptyStyle\">\r\n                                                <td colSpan=\"12\">\r\n                                                    No record found\r\n                                                </td>\r\n                                            </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>*/}\r\n                                    <div>\r\n                                        <table className=\"dgStyle\" cellSpacing=\"0\" border=\"0\" id=\"ac_w_PC_PC_grid\"\r\n                                               style={{borderWidth:'0px', borderStyle:'None', width:'100%',borderCollapse: 'collapse'}}>\r\n                                            <tbody>\r\n                                            <tr className=\"dgHdrStyle\">\r\n                                                {user.role === 'Cashiwer' && <th></th> }\r\n                                                <th scope=\"col\" style={{textAlign: 'left'}}>Jackpot</th>\r\n                                                <th scope=\"col\">To Win</th>\r\n                                                <th scope=\"col\">Bet ID</th>\r\n                                                <th scope=\"col\">Date Played</th>\r\n                                                <th scope=\"col\">Result Date</th>\r\n                                                <th className=\"dgHdrImporti\" scope=\"col\">Stake</th>\r\n                                                <th scope=\"col\">Outcome</th>\r\n                                                <th className=\"dgHdrImporti\" scope=\"col\">Winnings</th>\r\n                                            </tr>\r\n                                            {loading ? (\r\n                                                <tr className=\"dgItemStyle\">\r\n                                                    <td colSpan=\"12\">Loading...Please wait!</td>\r\n                                                </tr>\r\n                                            ):(\r\n                                                bets.length > 0 ? (\r\n                                                    bets.map((bet, i) =>\r\n                                                        <tr className=\"dgItemStyle\" key={bet.betslip_id}>\r\n                                                            {user.role === 'Cashier' && <td onClick={() => confirmCancel(bet.id)} style={{cursor: 'pointer'}}>\r\n                                                                <img src=\"/img/cancel-button.png\" alt=\"\" />\r\n                                                            </td>}\r\n                                                            <td className=\"btnsec codcoupon\">\r\n                                                                {bet.title}\r\n                                                            </td>\r\n                                                            <td align=\"center\">{formatNumber(bet.amount)}</td>\r\n                                                            <td className=\"center\">\r\n                                                                <NavLink\r\n                                                                    title=\"Dislpay Betslip\"\r\n                                                                    to={`/Account/BetDetail/${bet.betslip_id}`}>{bet.betslip_id}</NavLink>\r\n                                                            </td>\r\n                                                            <td align=\"center\">{formatDate(bet.created_at, 'DD/MM/YYYY HH:mm:ss')}</td>\r\n                                                            <td align=\"center\">{bet.settled_at ? formatDate(bet.settled_at,  'DD/MM/YYYY HH:mm:ss') : ''}</td>\r\n                                                            <td align=\"right\">{formatNumber(bet.stake)}</td>\r\n                                                            <td align=\"center\">\r\n                                                                <BetListOutcome outcome={bet.status} />\r\n                                                            </td>\r\n                                                            <td align=\"right\">{formatNumber(bet.winnings)}</td>\r\n                                                        </tr>\r\n                                                    )\r\n                                                ):(\r\n                                                    <tr className=\"dgEmptyStyle\">\r\n                                                        <td colSpan=\"12\">\r\n                                                            No record found\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                )\r\n                                            )}\r\n\r\n                                            <tr className=\"dgTotalsStyle\">\r\n                                                <td className=\"btnsec\" colSpan=\"4\" style={{width: '100%'}}>- Total Page -\r\n                                                </td>\r\n                                                <td className=\"dgTotalsImpPos\" colSpan=\"2\" style={{whiteSpace:'nowrap'}}>{formatNumber(totalStake)}</td>\r\n                                                <td colSpan=\"1\"></td>\r\n                                                <td className=\"dgTotalsImpNeg\" colSpan=\"1\" style={{whiteSpace:'nowrap'}}>{formatNumber(totalWinnings)}</td>\r\n                                                <td colSpan=\"4\"></td>\r\n                                            </tr>\r\n                                            {/*<tr className=\"dgTotalsStyle\">\r\n                                                <td className=\"btnsec\" colSpan=\"4\" style={{width: '100%'}}>- Total -</td>\r\n                                                <td className=\"dgTotalsImpPos\" colSpan=\"2\" style={{whiteSpace:'nowrap'}}></td>\r\n                                                <td colSpan=\"1\"></td>\r\n                                                <td className=\"dgTotalsImpNeg\" colSpan=\"1\" style={{whiteSpace:'nowrap'}}></td>\r\n                                                <td colSpan=\"4\"></td>\r\n                                            </tr>*/}\r\n                                            <Pagination\r\n                                                colspan={9}\r\n                                                data={pagination}\r\n                                                offset={10}\r\n                                                changePage={fetchBetList} />\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {isCancel.show && <div className=\"bet-confirm-popup-wrapper\">\r\n            <div className=\"bet-confirm-popup\">\r\n                <div className=\"close-bet-confirm-popup\" onClick={closeModal}>\r\n                    <i className=\"fa fa-times\" aria-hidden=\"true\" />\r\n                </div>\r\n                <div className=\"bet-confirm-content\">\r\n                    <div className=\"title\">\r\n                        <img src=\"/img/bet-confirm-info.png\" alt=\"\" />\r\n                        <span>Are you sure you want to cancel this ticket?<br />\r\n                        <small style={{color: 'red'}}>Note: You can only cancel tickets within 5 mins after registering the ticket</small>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"buttons\">\r\n                        <div className=\"cancel-button button\" onClick={closeModal}>\r\n                            No\r\n                        </div>\r\n                        <div className=\"confirm-button button\" onClick={doCancel}>\r\n                            Yes\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>}\r\n        </>\r\n    );\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Account\\AgencyList.js",["691","692"],"import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport useSWR from \"swr/esm/use-swr\";\r\nimport {formatNumber} from \"../../Utils/helpers\";\r\nimport {SHOW_PASSWORD_MODAL} from \"../../Redux/types\";\r\n\r\nexport default function AgencyList() {\r\n    const {user} = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n    const [users, setUsers] = useState([]);\r\n    const [filtered, setFiltered] = useState([]);\r\n\r\n    const {data, error} = useSWR('/user/account/agent-users');\r\n    const {SportsbookGlobalVariable} = useSelector((state) => state.sportsBook);\r\n\r\n    useEffect(() => {\r\n        if (data) {\r\n            setUsers(data);\r\n            setFiltered(data);\r\n        }\r\n    }, [data]);\r\n\r\n    return (\r\n        <>\r\n            <div id=\"MainContent\" className=\"\">\r\n                <div className=\"Riquadro\">\r\n                    <div className=\"CntSX\">\r\n                        <div className=\"CntDX\">\r\n                            <div className=\"betslist\">\r\n                                <div className=\"RiquadroSrc\">\r\n                                    <div className=\"Cnt\">\r\n                                        <div>\r\n                                            <div className=\"pb15 pt15\">\r\n                                                <table className=\"SearchContainerStyle\">\r\n                                                    <tbody>\r\n                                                    <tr className=\"SearchSectionStyle\">\r\n                                                        <td className=\"SearchDescStyle\">\r\n                                                            Filter By\r\n                                                            <select\r\n                                                                name=\"ac$w$PC$PC$BetList$ddlFiltoData\"\r\n                                                                id=\"ac_w_PC_PC_BetList_ddlFiltoData\"\r\n                                                                className=\"dropdownFiltoData\"\r\n                                                                style={{width:'150px'}}\r\n                                                                onChange={(e) => {\r\n                                                                    const val = e.target.value;\r\n                                                                    console.log(val)\r\n                                                                    if (val === '') {\r\n                                                                        setFiltered(users);\r\n                                                                    } else {\r\n                                                                        setFiltered(users.filter(user => user.rolename === e.target.value));\r\n                                                                    }\r\n                                                                }}\r\n                                                            >\r\n                                                                <option value=\"\">All</option>\r\n                                                                {(user.role === 'Super Agent' || user.role === 'Master Agent') && <option value=\"Agent\" >Agent</option> }\r\n                                                                {(user.role === 'Super Agent' || user.role === 'Master Agent' || user.role === 'Agent') && <option value=\"Shop\">Shop</option>}\r\n                                                                <option value=\"Cashier\">Cashier</option>\r\n                                                                <option value=\"Player\">Player</option>\r\n                                                            </select>\r\n                                                        </td>\r\n                                                        <td className=\"SearchControlsStyle\">\r\n                                                            <td className=\"SearchDescStyle\">\r\n                                                                Fast Search\r\n                                                                <input\r\n                                                                    name=\"ac$w$PC$PC$BetList$txtCodiceCoupon\"\r\n                                                                    type=\"text\"\r\n                                                                    defaultValue=\"\"\r\n                                                                    className=\"textbox dropdownFiltoData\"\r\n                                                                    style={{width: '150px' }}\r\n                                                                    onKeyUp={(e) => {\r\n                                                                        const q = e.target.value;\r\n\r\n                                                                        if(q.length >= 3) {\r\n                                                                            setFiltered(users.filter(user => user.username.includes(q)));\r\n                                                                        }\r\n                                                                        if (q === '')\r\n                                                                            setFiltered(users);\r\n                                                                    }}\r\n                                                                />\r\n                                                            </td>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n                                            <div className=\"divDg\">\r\n                                                <div className=\"\">\r\n                                                    <table className=\"dgStyle\" cellSpacing=\"0\" border=\"0\"\r\n                                                               style={{borderWidth:'0px', borderStyle:'None', width:'100%',borderCollapse: 'collapse'}}>\r\n                                                        <tbody>\r\n                                                            <tr className=\"dgHdrStyle\">\r\n                                                                <th width=\"10%\">Id</th>\r\n                                                                <th>User Type</th>\r\n                                                                <th>Username</th>\r\n                                                                <th>Name</th>\r\n                                                                <th>Balance</th>\r\n                                                                <th />\r\n                                                            </tr>\r\n                                                        </tbody>\r\n                                                        <tbody>\r\n                                                            {filtered && !error && filtered.map((row, i) =>\r\n                                                                <tr className=\"dgItemStyle txt-c\" key={i}>\r\n                                                                    <td>{ row.code }</td>\r\n                                                                    <td>{ row.rolename }</td>\r\n                                                                    <td>{ row.username }</td>\r\n                                                                    <td>{ row.name }</td>\r\n                                                                    <td>{SportsbookGlobalVariable.Currency}{ formatNumber(row.balance) }</td>\r\n                                                                    <td>\r\n                                                                        <a href=\"javascript:;\" onClick={() => dispatch({\r\n                                                                            type: SHOW_PASSWORD_MODAL,\r\n                                                                            payload: {open: true, user_id: row.id }\r\n                                                                        })}>\r\n                                                                            <img src=\"/img/password.png\" alt=\"\" />\r\n                                                                        </a>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            )}\r\n                                                            {filtered && filtered.length === 0 &&\r\n                                                            <tr className=\"dgItemStyle\">\r\n                                                                <td colSpan=\"8\" className=\"txt-c\">\r\n                                                                    No result found\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                            }\r\n                                                            {!filtered.length &&\r\n                                                                <tr className=\"dgItemStyle\">\r\n                                                                    <td colSpan=\"8\" className=\"txt-c\">\r\n                                                                        Loading...\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            }\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Account\\TransferFunds.js",["693"],"import React, {useState} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport useSWR from \"swr/esm/use-swr\";\r\nimport {formatNumber} from \"../../Utils/helpers\";\r\nimport {Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {TransferForm} from \"../Components/TransferForm\";\r\nimport {sendFund} from \"../../Services/apis\";\r\nimport {toast} from \"react-toastify\";\r\nimport {UPDATE_USER_DATA} from \"../../Redux/types\";\r\n\r\nconst FormSchema = Yup.object().shape({\r\n    amount: Yup.number().min(1, 'Missing amount')\r\n        .required(\"Enter an amount\"),\r\n    username: Yup.string()\r\n        .required(\"Please enter a username\"),\r\n});\r\n\r\nexport default function TransferFunds() {\r\n    const [user, setUser] = useState(null);\r\n    const dispatch = useDispatch();\r\n\r\n    const {data: users, error} = useSWR('/user/account/agent-users');\r\n\r\n    const fundUser = (values, {setSubmitting, resetForm}) => {\r\n        sendFund(values).then(res => {\r\n            setSubmitting(false);\r\n            console.log(res);\r\n            if(res.success) {\r\n                resetForm({});\r\n                dispatch({type: UPDATE_USER_DATA, payload: res.user});\r\n                toast.success('Transaction was completed successfully')\r\n            } else {\r\n                toast.success(res.message);\r\n            }\r\n\r\n        }).catch(err => setSubmitting(false) | toast.error('Internal server error!'))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div id=\"MainContent\" className=\"\">\r\n                <div className=\"Riquadro\">\r\n                    <div className=\"CntSX\">\r\n                        <div className=\"CntDX\">\r\n                            <div className=\"payments\">\r\n                                <div className=\"RiquadroSrc\">\r\n                                    <div className=\"Cnt\">\r\n                                        <div>\r\n                                            <div className=\"page__head\">\r\n                                                <div className=\"page__head-item\"><h1> Transfer Funds</h1></div>\r\n                                            </div>\r\n                                            <div className=\"pt15 pb15\">\r\n                                                <div className=\"divide-holder\">\r\n                                                    <div className=\"one-half pr5\">\r\n                                                        <table className=\"dgStyle\" cellSpacing=\"0\" border=\"0\" id=\"ac_w_PC_PC_grid\"\r\n                                                               style={{borderWidth:'0px', borderStyle:'None', width:'100%',borderCollapse: 'collapse'}}>\r\n                                                            <tbody>\r\n                                                            <tr className=\"dgHdrStyle\">\r\n                                                                <th>Name</th>\r\n                                                                <th>Balance</th>\r\n                                                                <th></th>\r\n                                                            </tr>\r\n                                                            </tbody>\r\n                                                            <tbody>\r\n                                                            {users && !error && users.map((row, i) =>\r\n                                                                <tr className=\"dgItemStyle\" key={i}>\r\n                                                                    <td align=\"center\">{ row.username }</td>\r\n                                                                    <td align=\"center\">{ formatNumber(row.balance) }</td>\r\n                                                                    <td align=\"center\" onClick={() => setUser(row)}>\r\n                                                                        <img src=\"/img/SendFastSport.png\" style={{ cursor: 'pointer'}} />\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            )}\r\n                                                            {users && users.length === 0 &&\r\n                                                            <tr className=\"dgItemStyle\">\r\n                                                                <td colSpan=\"4\">\r\n                                                                    No result found\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                            }\r\n                                                            {!users &&\r\n                                                                <tr className=\"dgItemStyle\">\r\n                                                                    <td colSpan=\"4\">\r\n                                                                        Loading...\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            }\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </div>\r\n                                                    <div className=\"one-half\">\r\n                                                        <Formik\r\n                                                            enableReinitialize={true}\r\n                                                            initialValues={{\r\n                                                                username: user?.username || '',\r\n                                                                amount: '',\r\n                                                                notes: '',\r\n                                                                type: 'top-up',\r\n                                                                action: 'deposit'\r\n                                                            }}\r\n                                                            validationSchema={FormSchema}\r\n                                                            children={(props) => <TransferForm {...props} />}\r\n                                                            onSubmit={fundUser}\r\n                                                        />\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Account\\NewUser.js",["694"],"import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {Formik} from \"formik\";\r\nimport {UserForm} from \"../Components/UserForm\";\r\nimport * as Yup from \"yup\";\r\nimport {addUser} from \"../../Services/apis\";\r\nimport {toast} from \"react-toastify\";\r\nimport moment from \"moment\";\r\nimport {formattedPhoneNumber} from \"../../Utils/helpers\";\r\n\r\nconst UserSchema = Yup.object().shape({\r\n    first_name: Yup.string()\r\n        .min(3, \"Minimum 3 letters\")\r\n        .required(\"Enter first name\"),\r\n    last_name: Yup.string()\r\n        .min(3, \"Minimum 3 letters\")\r\n        .required(\"Enter first name\"),\r\n    email: Yup.string()\r\n        .email(\"Wrong email format\")\r\n        .required(\"Enter an email address\"),\r\n    // phone_number: Yup.string()\r\n    //     .required(\"Please provide a valid phone number\"),\r\n    username: Yup.string()\r\n        .min(3, \"Minimum 3 letters\")\r\n        .required(\"Enter a username\"),\r\n    password: Yup.string()\r\n        .min(3, \"Minimum 3 letters\")\r\n        .required(\"Enter a password\"),\r\n});\r\n\r\nexport default function PersonalData({history, location}) {\r\n    const urlParam = new URLSearchParams(location.search);\r\n    const usertype = urlParam.get('usertype');\r\n    const {user} = useSelector(state => state.auth);\r\n\r\n    const submitForm = (values, {setSubmitting, resetForm}) => {\r\n        values.username = formattedPhoneNumber(values.username);\r\n\r\n        const data = {...values}; //clone form data\r\n        // data.date_of_birth = moment(values.date_of_birth).format('DD/MM/YYYY'); // change date of birth format\r\n\r\n        addUser(data).then(res => {\r\n            setSubmitting(false);\r\n            if(res.success) {\r\n                resetForm({})\r\n                toast.success('User details has been submitted successfully');\r\n            } else {\r\n                toast.error(`Something went wrong. Unable to save new ${usertype}!`);\r\n            }\r\n        }).catch(err => setSubmitting(false) | toast.error('Internal server error'));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div id=\"MainContent\" className=\"\">\r\n                <div className=\"Riquadro\">\r\n                    <div className=\"CntSX\">\r\n                        <div className=\"CntDX\">\r\n                            <div id=\"s_w_PC_PC_panelSquare\">\r\n                                <div className=\"RiquadroNews Reg\">\r\n                                    <div className=\"Cnt\">\r\n                                        <div>\r\n                                            <div id=\"s_w_PC_PC_upDati\">\r\n                                                <Formik\r\n                                                    enableReinitialize={true}\r\n                                                    initialValues={{\r\n                                                        country:'160',\r\n                                                        state: '',\r\n                                                        language: 'EN',\r\n                                                        currency: 'KSH',\r\n                                                        first_name:'',\r\n                                                        last_name:'',\r\n                                                        date_of_birth:'',\r\n                                                        gender:'Male',\r\n                                                        address:'',\r\n                                                        phone_number:'',\r\n                                                        email:'',\r\n                                                        username: '',\r\n                                                        password: '',\r\n                                                        user_type: usertype,\r\n                                                        parent_agent: user.id\r\n                                                    }}\r\n                                                    validationSchema={UserSchema}\r\n                                                    children={(props) => <UserForm {...props} history={history} />}\r\n                                                    onSubmit={submitForm}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"BtmSX\">\r\n                                        <div className=\"BtmDX\"></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"BtmSX\">\r\n                        <div className=\"BtmDX\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Account\\BetDetail.js",["695","696","697"],"import React, {useEffect, useState} from \"react\";\r\nimport {findCoupon, processCashout} from \"../../Services/apis\";\r\nimport {formatDate, formatNumber} from \"../../Utils/helpers\";\r\nimport BetListOutcome from \"../Components/BetListOutcome\";\r\nimport { printTicket} from \"../../Utils/couponHelpers\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {reloadCoupon} from \"../../Redux/actions\";\r\n\r\nexport default function BetDetail({match, history}) {\r\n    const betslip_id = match.params.betslip;\r\n    const dispatch = useDispatch();\r\n    const [betslip, setBetslip] = useState(null);\r\n    const {SportsbookGlobalVariable} = useSelector((state) => state.sportsBook);\r\n    const [cashoutModal, setCashoutModal] = useState(false);\r\n    const [processing, setProcessing] = useState(false);\r\n    const [settled, setSettled] = useState(false);\r\n    const {user} = useSelector(state => state.auth);\r\n\r\n    const getBetslip = () => {\r\n        findCoupon(betslip_id).then(res => {\r\n            if (res.message === 'found') {\r\n                setBetslip(res.coupon);\r\n            } else {\r\n                history.goBack();\r\n            }\r\n        }).catch(err => {} );\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (betslip_id) {\r\n            getBetslip();\r\n        }\r\n    }, [betslip_id]);\r\n\r\n    const doCashout = () => {\r\n        setProcessing(true);\r\n        setCashoutModal(false);\r\n        processCashout(betslip_id).then(res => {\r\n            setProcessing(false);\r\n            if (res.success) {\r\n                setSettled(true);\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div id=\"MainContent\" className=\"\">\r\n            <div className=\"Riquadro\">\r\n                <div className=\"CntSX\">\r\n                    <div className=\"CntDX\">\r\n                        <div id=\"ac_w_PC_PC_panelSquare\">\r\n                            <span className=\"noBetFound\"></span>\r\n                            <div id=\"ac_w_PC_PC_panel_DataGrid\">\r\n                                <div className=\"NormalPageContent\">\r\n                                    <table cellPadding=\"0\" cellSpacing=\"0\" width=\"100%\" align=\"center\">\r\n                                        <tbody>\r\n                                        <tr>\r\n                                            <td colSpan=\"4\" id=\"tdData\">\r\n                                                <table cellSpacing=\"1\" cellPadding=\"0\" width=\"100%\" align=\"center\">\r\n                                                    <tbody>\r\n                                                    <tr>\r\n                                                        <td className=\"SectionTitle\" colSpan=\"3\">Betslip</td>\r\n                                                        <td className=\"SectionTitle\" style={{textAlign: \"right\"}}>\r\n                                                            <a href=\"javascript:;\" onClick={() => history.goBack()} >\r\n                                                                <i className=\"fa fa-caret-left fa-2x fa-fw\" />\r\n                                                            </a>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className=\"cellaSx\" width=\"40%\">Betslip ID</td>\r\n                                                        <td className=\"cellaDx\">{betslip?.betslip_id}</td>\r\n                                                        <td className=\"cellaSx\">&nbsp;</td>\r\n                                                        <td className=\"cellaDx\">&nbsp;</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className=\"cellaSx\" width=\"40%\">Coupon Status</td>\r\n                                                        <td className=\"cellaDx\">{betslip?.status === 0 ? 'Running' : 'Settled - Close'}</td>\r\n                                                        <td className=\"cellaSx\">&nbsp;</td>\r\n                                                        <td className=\"cellaDx\">&nbsp;</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className=\"cellaSx\">User</td>\r\n                                                        <td className=\"cellaDx\">{betslip?.user.code + ' ' + betslip?.user.username}</td>\r\n                                                        <td className=\"cellaSx\">&nbsp;</td>\r\n                                                        <td className=\"cellaDx\">&nbsp;</td>\r\n                                                    </tr>\r\n\r\n                                                    <tr>\r\n                                                        <td className=\"cellaSx\">Date</td>\r\n                                                        <td className=\"cellaDx\">{formatDate(betslip?.created_at, 'DD/MM/YYYY HH:mm:ss')}</td>\r\n                                                        <td className=\"cellaSx\">&nbsp;</td>\r\n                                                        <td className=\"cellaDx\">&nbsp;</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className=\"cellaSx\">Bet Type</td>\r\n                                                        <td className=\"cellaDx\">{betslip?.event_type === 'jackpot' ? 'Jackpot' : betslip?.bet_type}</td>\r\n                                                        <td className=\"cellaSx\">&nbsp;</td>\r\n                                                        <td className=\"cellaDx\">&nbsp;</td>\r\n                                                    </tr>\r\n                                                   {/* <tr>\r\n                                                        <td className=\"cellaSx\">Transaction Type</td>\r\n                                                        <td className=\"cellaDx\">User Account</td>\r\n                                                        <td className=\"cellaSx\">&nbsp;</td>\r\n                                                        <td className=\"cellaDx\">&nbsp;</td>\r\n                                                    </tr>*/}\r\n\r\n\r\n                                                    {/*<tr>\r\n                                                        <td className=\"cellaSx\">Pending</td>\r\n                                                        <td className=\"cellaDx\">&nbsp;</td>\r\n                                                        <td className=\"cellaSx\"></td>\r\n                                                        <td className=\"cellaDx\"><span\r\n                                                            id=\"ac_w_PC_PC_lblImportoOriginale\"></span>&nbsp;</td>\r\n                                                    </tr>*/}\r\n\r\n\r\n                                                    </tbody>\r\n                                                </table>\r\n\r\n                                                <table id=\"ac_w_PC_PC_tbl_DettagliScommessa\" cellPadding=\"0\"\r\n                                                       cellSpacing=\"1\" width=\"100%\" align=\"center\">\r\n                                                    <tbody>\r\n                                                    <tr>\r\n                                                        <td className=\"SectionTitle\" colSpan=\"2\">Detail</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className=\"cellaSx\" width=\"40%\">Status</td>\r\n                                                        <td className=\"cellaDx\">\r\n                                                            {\r\n                                                                {\r\n                                                                    0: <span className=\"\">Running</span>,\r\n                                                                    1: <span className=\"detScoEsitoVin\">Won</span>,\r\n                                                                    2: <span className=\"detScoEsitoPer\">Lost</span>,\r\n                                                                    3: <span className=\"\">Cancel</span>,\r\n                                                                }[betslip?.status]\r\n                                                            }\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className=\"cellaSx\" width=\"40%\"><span\r\n                                                            className=\"detScoIG\">Stake</span></td>\r\n                                                        <td className=\"cellaDx\">\r\n                                                            <span className=\"detScoIG\">{SportsbookGlobalVariable.Currency}&nbsp;{formatNumber(betslip?.stake)}</span>\r\n                                                            <div></div>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    {betslip?.bet_type !== 'Jackpot' &&\r\n                                                    <tr>\r\n                                                        <td className=\"cellaSx\">Bonus</td>\r\n                                                        <td className=\"cellaDx\">\r\n                                                            {SportsbookGlobalVariable.Currency}&nbsp;\r\n                                                            {\r\n                                                                {\r\n                                                                    'Split': `${formatNumber(betslip?.min_bonus)} / ${formatNumber(betslip?.bonus)}`,\r\n                                                                    'Combo': `${formatNumber(betslip?.min_bonus)} / ${formatNumber(betslip?.bonus)}`\r\n                                                                }[betslip?.bet_type] || formatNumber(betslip?.bonus)\r\n                                                            }\r\n                                                        </td>\r\n                                                    </tr>}\r\n                                                    <tr id=\"ac_w_PC_PC_trVincita\">\r\n                                                        <td className=\"cellaSx\" width=\"40%\"><span\r\n                                                            className=\"detScoVP\">Winnings</span></td>\r\n                                                        <td className=\"cellaDx\"><span className=\"detScoVP\">\r\n                                                            {SportsbookGlobalVariable.Currency}&nbsp;\r\n                                                            {betslip?.bet_type === 'Jackpot' && formatNumber(betslip?.winnings) }\r\n\r\n                                                            {\r\n                                                                betslip?.status === 0 ? (\r\n                                                                    {\r\n                                                                        'Split': `${formatNumber(betslip?.min_winnings)} / ${formatNumber(betslip?.pot_winnings)}`,\r\n                                                                        'Combo': `${formatNumber(betslip?.min_winnings)} / ${formatNumber(betslip?.pot_winnings)}`\r\n                                                                    }[betslip?.bet_type] || formatNumber(betslip?.pot_winnings)\r\n                                                                ) : formatNumber(betslip?.winnings)\r\n                                                            }\r\n                                                        </span>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    {betslip?.bet_type !== 'Jackpot' &&\r\n                                                    <tr id=\"ac_w_PC_PC_trQuota\">\r\n                                                        <td className=\"cellaSx\">\r\n                                                            <span className=\"detScoOdd\">Odd</span></td>\r\n                                                        <td className=\"cellaDx\">\r\n                                                            <span className=\"detScoOdd\">\r\n                                                                 {\r\n                                                                     {\r\n                                                                         'Split': `${formatNumber(betslip?.min_oods)} / ${formatNumber(betslip?.odds)}`,\r\n                                                                         'Combo': `${formatNumber(betslip?.min_odds)} / ${formatNumber(betslip?.odds)}`\r\n                                                                     }[betslip?.bet_type] || formatNumber(betslip?.odds)\r\n                                                                 }\r\n                                                            </span>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    }\r\n\r\n                                                    {betslip?.cashout > 0 && betslip.event_type !== 'jackpot' && betslip?.status === 0 &&\r\n                                                    <tr id=\"ac_w_PC_PC_trCashout\" className=\"rowCashout\">\r\n                                                        <td className=\"cellaSx\">\r\n                                                            <span className=\"detCashOut\">Cashout</span>\r\n                                                        </td>\r\n                                                        <td className=\"cellaDx\">\r\n                                                            {processing ?\r\n                                                                <span className=\"txt-darkgreen\">Processing...</span>\r\n                                                                :\r\n                                                                settled ?\r\n                                                                    <span className=\"txt-darkgreen\">Settled</span>\r\n                                                                    :\r\n                                                                        <div id=\"ac_w_PC_PC_pnlCashout\"\r\n                                                                             className=\"cashout\">\r\n                                                                            <div>\r\n                                                                                <div\r\n                                                                                    className=\"pnlConfirm enableConfirm\"\r\n                                                                                    onClick={() => setCashoutModal(true)}>\r\n                                                                                    <div\r\n                                                                                        className=\"value\">{formatNumber(betslip?.cashout)} ₦\r\n                                                                                    </div>\r\n                                                                                    <div\r\n                                                                                        className=\"btnConfirm\"/>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n\r\n                                                            }\r\n                                                        </td>\r\n                                                    </tr>}\r\n                                                    {/*<tr id=\"ac_w_PC_PC_betDetailDate\">\r\n                                                        <td className=\"cellaSx\" width=\"40%\">Payment Date</td>\r\n                                                        <td className=\"cellaDx\">26/10/2020 21:18:00</td>\r\n                                                    </tr>*/}\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td colSpan=\"4\">\r\n                                            </td>\r\n                                        </tr>\r\n\r\n                                        <tr>\r\n                                            <td colSpan=\"4\">\r\n\r\n                                            </td>\r\n                                        </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n\r\n                                <div className=\"RiquadroNews\">\r\n                                    <div className=\"TopSX\">\r\n                                        <div className=\"TopDX\"></div>\r\n                                    </div>\r\n                                    <div className=\"Cnt\">\r\n                                        <div>\r\n                                            {betslip?.system_bets.length > 0 &&\r\n                                                <>\r\n                                                    <table cellSpacing=\"1\" cellPadding=\"0\" width=\"100%\" align=\"center\"\r\n                                                           border=\"0\">\r\n                                                        <tbody>\r\n                                                        <tr>\r\n                                                            <td className=\"SectionTitle\">Bets</td>\r\n                                                        </tr>\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                    <table className=\"dgStyle\" cellSpacing=\"0\" align=\"Center\" border=\"0\"\r\n                                                           id=\"ac_w_PC_PC_dg_ElencoEventi\"\r\n                                                           style={{\r\n                                                               borderWidth: '0px',\r\n                                                               borderStyle: 'None',\r\n                                                               width: '100%',\r\n                                                               borderCollapse: 'collapse'\r\n                                                           }}>\r\n                                                        <tbody>\r\n                                                        <tr className=\"dgSubHdrStyle\">\r\n                                                            <th><span>Combination Type</span></th>\r\n                                                            <th><span>No of Combinations</span></th>\r\n                                                            <th><span>Amount</span></th>\r\n                                                            <th><span>Pot. Winnings</span></th>\r\n                                                            <th><span>Status</span></th>\r\n                                                            <th><span>Pot. Bonus</span></th>\r\n                                                            <th><span>Winning</span></th>\r\n                                                            <th><span>Payment Date</span></th>\r\n                                                        </tr>\r\n                                                        {betslip?.system_bets.map(combo =>\r\n                                                        <tr key={`combo-${combo.id}`} style={{textAlign: \"center\"}}>\r\n                                                            <td><span>{combo.combination_type}</span></td>\r\n                                                            <td><span>{combo.no_of_combos}</span></td>\r\n                                                            <td><span><span>{combo.no_of_combos}</span> x <span>₦{combo.min_stake}</span></span></td>\r\n                                                            <td><span className=\"cell-content ng-isolate-scope\">₦{formatNumber(combo.min_win)}</span></td>\r\n                                                            <td><span><BetListOutcome outcome={betslip.status} /></span></td>\r\n                                                            <td><span>₦{formatNumber(combo?.min_bonus)}</span></td>\r\n                                                            <td><span>{combo.status === 0 ? ' - ' : formatNumber(combo?.winnings)}</span></td>\r\n                                                            <td><span>{combo.payment_date ? formatDate(combo.payment_date, 'MMM DD, YYYY') : '-'}</span></td>\r\n                                                        </tr>)}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </>\r\n                                            }\r\n                                            <table cellSpacing=\"1\" cellPadding=\"0\" width=\"100%\" align=\"center\"\r\n                                                   border=\"0\">\r\n                                                <tbody>\r\n                                                <tr>\r\n                                                    <td className=\"SectionTitle\">Event List</td>\r\n                                                </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                            <div>\r\n                                                <table className=\"dgStyle\" cellSpacing=\"0\" align=\"Center\" border=\"0\"\r\n                                                       id=\"ac_w_PC_PC_dg_ElencoEventi\"\r\n                                                       style={{\r\n                                                           borderWidth: '0px',\r\n                                                           borderStyle: 'None',\r\n                                                           width: '100%',\r\n                                                           borderCollapse: 'collapse'\r\n                                                       }}>\r\n                                                    <tbody>\r\n                                                    <tr className=\"dgSubHdrStyle\">\r\n                                                        <th >Event</th>\r\n                                                        <th >Start Date</th>\r\n                                                        <th >Quota Class</th>\r\n                                                        <th >Type</th>\r\n                                                        <th >Odds</th>\r\n                                                        <th className=\"BetDetailRisultato\" >HT Score</th>\r\n                                                        <th className=\"BetDetailRisultato\" >Result</th>\r\n                                                        <th >Outcome</th>\r\n                                                    </tr>\r\n                                                    {betslip?.selections.map((selection, i) =>\r\n                                                        <tr className=\"dgItemStyle\" key={selection.provider_id}>\r\n                                                            <td>\r\n                                                                {selection.event}\r\n                                                            </td>\r\n                                                            <td align=\"center\">{formatDate(selection.start_date, 'DD/MM/YYYY HH:mm')}</td>\r\n                                                            <td align=\"center\">\r\n                                                                {selection?.market_name}\r\n                                                            </td>\r\n                                                            <td align=\"center\">{selection?.odd_name}</td>\r\n                                                            <td align=\"center\">{selection.odds}</td>\r\n                                                            <td className=\"BetDetailRisultato\" align=\"center\" style={{whiteSpace:'nowrap'}}>\r\n                                                                <span title=\"Final Result\">{selection?.ht_score}</span>\r\n                                                            </td>\r\n                                                            <td className=\"BetDetailRisultato\" align=\"center\" style={{whiteSpace:'nowrap'}}>\r\n                                                                <span title=\"Final Result\">{selection?.score}</span>\r\n                                                            </td>\r\n                                                            <td align=\"center\">\r\n                                                                <BetListOutcome outcome={selection.status} />\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    )}\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n\r\n                                            <table className=\"SearchButtonsStyle\">\r\n                                                <tbody>\r\n                                                <tr>\r\n                                                    <td className=\"tdSrcSX\">\r\n                                                        {betslip?.event_type !== 'jackpot' && !betslip?.tipster_id && betslip?.active_selections_count !== 0 &&\r\n\r\n                                                        <input\r\n                                                            type=\"button\"\r\n                                                            name=\"ac$w$PC$PC$btnTorna\"\r\n                                                            value=\"Print Ticket\"\r\n                                                            id=\"ac_w_PC_PC_btnTorna\"\r\n                                                            onClick={() => printTicket(betslip?.betslip_id)}\r\n                                                            className=\"button\" /> }\r\n                                                    </td>\r\n\r\n                                                    <td className=\"tdSrcDX\">\r\n                                                        {user?.role !== 'Player' && <input\r\n                                                            type=\"button\"\r\n                                                            name=\"ac$w$PC$PC$btnTorna\"\r\n                                                            value=\"Back\"\r\n                                                            id=\"ac_w_PC_PC_btnTorna\"\r\n                                                            onClick={() => history.goBack()}\r\n                                                            className=\"button\" />}\r\n                                                    </td>\r\n                                                </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n\r\n                                            <div className=\"divBetDetailsRebet\">\r\n                                                {betslip?.event_type !== 'jackpot' &&\r\n                                                <input\r\n                                                    type=\"button\"\r\n                                                    name=\"ac$w$PC$PC$btnRebet\"\r\n                                                    value=\"Rebet\"\r\n                                                    onClick={() => dispatch(reloadCoupon(betslip?.betslip_id, 'rebet')) | history.push('/')}\r\n                                                    id=\"ac_w_PC_PC_btnRebet\" className=\"button\"/>\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"BtmSX\">\r\n                                        <div className=\"BtmDX\"></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n            {cashoutModal && <div className=\"cashoutPopup\" id=\"cashoutPopup\">\r\n                <div className=\"popupBG\"></div>\r\n                <div className=\"popupContent\">\r\n                    <div className=\"titlePopup\">Confirm Cashout\r\n                        <div className=\"closePopup\" onClick={() => setCashoutModal(false)}></div>\r\n                    </div>\r\n                    <div className=\"mainContent\">\r\n                        <div className=\"highText\">You are Cashing Out {betslip?.cashout} ₦</div>\r\n                        <div className=\"mainText\">Are you sure?</div>\r\n                    </div>\r\n                    <div className=\"btnPanel\">\r\n                        <div className=\"confirmButton\" onClick={doCashout}>Yes</div>\r\n                        <div className=\"cancelButton\">Cancel</div>\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Account\\Withdrawal.js",["698","699"],"import React, { useState} from \"react\";\r\nimport {Formik, Field} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {postWithdrawal} from \"../../Services/apis\";\r\nimport {UPDATE_USER_BALANCE} from \"../../Redux/types\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport '../../Assets/scss/_payments.scss';\r\nimport {toast} from \"react-toastify\";\r\n\r\nconst FormSchema = Yup.object().shape({\r\n    amount: Yup.number().min(100, 'Missing amount')\r\n        .required(\"Enter an amount\"),\r\n});\r\n\r\nexport function Withdrawal({history}) {\r\n    const [details, setDetails] = useState(null);\r\n    const [errMsg, setErrMsg] = useState(null);\r\n    const dispatch = useDispatch();\r\n\r\n    const submitForm = (values, {setSubmitting, resetForm}) => {\r\n        postWithdrawal(values).then(res => {\r\n            setSubmitting(false);\r\n            if (res.success) {\r\n\r\n                dispatch({type: UPDATE_USER_BALANCE, payload: res.balance});\r\n\r\n                toast.success('Withdrawal request has been sent');\r\n\r\n                resetForm({\r\n                    amount: '',\r\n                })\r\n            } else {\r\n                toast.error(res.message || res.error_message);\r\n            }\r\n        }).catch(err => {\r\n            setSubmitting(false);\r\n            if (err.response.status === 422){\r\n                let errors = Object.values(err.response.data.errors);\r\n                errors = errors.flat();\r\n                toast.error(errors);\r\n            } else {\r\n                toast.error(err.message);\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div id=\"MainContent\" className=\"\">\r\n                <div className=\"Riquadro\">\r\n                    <div className=\"CntSX\">\r\n                        <div className=\"CntDX\">\r\n                            <div className=\"payments\">\r\n                                <div className=\"RiquadroSrc\">\r\n                                    <div className=\"Cnt\">\r\n                                        <div>\r\n                                            <div className=\"page__head\">\r\n                                                <div className=\"page__head-item\"><h1> Withdraw Funds</h1></div>\r\n                                                <div className=\"page__head-item txt-r\"> All fields are\r\n                                                    required\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"page__body pt15 pb15\">\r\n                                                <div className=\"divide-holder\">\r\n                                                    <div className=\"one-half\">\r\n                                                        <Formik\r\n                                                            enableReinitialize={true}\r\n                                                            initialValues={{\r\n                                                                amount: ''\r\n                                                            }}\r\n                                                            validationSchema={FormSchema}\r\n                                                            children={(props) => <Form {...props} data={details} errMsg={errMsg} />}\r\n                                                            onSubmit={submitForm}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"txt-deepgray mt20\">\r\n                                                        <h3 className=\"txt-darkgreen\"> Bank Transfer</h3>\r\n                                                        <strong>Withdrawal via Bank Transfer is for Free.</strong> Withdrawals via bank\r\n                                                        transfer take up to 24 hours after authorisation and are only\r\n                                                        actioned during banking hours. If your bank account is not\r\n                                                        listed above, kindly add your bank account details below.\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Form({\r\n                  errors,\r\n                  touched,\r\n                  setFieldValue,\r\n                  handleSubmit,\r\n                  isSubmitting,\r\n                  isValid,\r\n                  values,\r\n                  errMsg\r\n              }) {\r\n    const {SportsbookGlobalVariable} = useSelector((state) => state.sportsBook);\r\n\r\n    const updateAmount = (value) => {\r\n        if (value === 0) {\r\n            setFieldValue('amount', value);\r\n            return;\r\n        }\r\n        let currentAmount = amount;\r\n        if (currentAmount === ''){\r\n            currentAmount = 0;\r\n        }\r\n        setFieldValue('amount', currentAmount + value);\r\n    }\r\n\r\n    const {amount} = values;\r\n\r\n\r\n    return (\r\n\r\n        <form className=\"form\" onSubmit={handleSubmit}>\r\n            {/*<div className=\"info-box green\">{paymentSuccess}</div>*/}\r\n            {errMsg && <div className=\"callout red mb15\">{errMsg}</div>}\r\n\r\n            <div className=\"form-row mt25\">\r\n                <div className=\"form-label\"><strong> Withdrawal Amount ({SportsbookGlobalVariable.Currency})</strong></div>\r\n                <div className={`form-input ${errors.amount ? 'error' : ''}`}>\r\n                    <Field name=\"amount\"\r\n                           className=\"big\" type=\"number\"\r\n                           step=\"100\" maxLength=\"5\" min=\"100\" max=\"10000\"\r\n                           value={amount} onChange={(e) => setFieldValue('amount', e.target.value)}\r\n                    />\r\n                    <div className=\"form-input--stake\"> Min 100</div>\r\n                </div>\r\n                {errors.amount && touched.amount ? (\r\n                    <div className=\"form--error\">{errors.amount}</div>\r\n                ) : null}\r\n                <div className=\"quickstake mt10\">\r\n                    <div className=\"quickstake__item\" onClick={() => updateAmount(0)}> Clear</div>\r\n                    <div className=\"quickstake__item\" onClick={() => updateAmount(100)}> +100</div>\r\n                    <div className=\"quickstake__item\" onClick={() => updateAmount(200)}> +200</div>\r\n                    <div className=\"quickstake__item\" onClick={() => updateAmount(500)}> +500</div>\r\n                    <div className=\"quickstake__item\" onClick={() => updateAmount(1000)}> +1000</div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"form-row txt-deepgray disclaimer\">\r\n                <p> Disclaimer</p> {process.env.REACT_APP_NAME} accepts no\r\n                responsibility should you make a deposit into any account other than that of the\r\n                Company, or enter your own account details incorrectly when requesting a withdrawal. It\r\n                is your responsibility to ensure that you add your correct customer data as indicated on\r\n                our site instructions and the correct {process.env.REACT_APP_NAME} account or payment details. In the event\r\n                that an error occurs {process.env.REACT_APP_NAME} accepts no responsibility for recovering these funds and\r\n                your account will NOT be credited.\r\n            </div>\r\n            {errMsg && <div className=\"callout red mb15\">{errMsg}</div>}\r\n            <button\r\n                type=\"submit\"\r\n                className=\"btn green mt20 mb20\"\r\n                disabled={!isValid && isSubmitting}>\r\n                Make Withdrawal {isSubmitting && <i className={`fa fa-spin fa-spinner`}/> }\r\n            </button>\r\n        </form>\r\n    );\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\UserMenu.js",["700"],"import {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nexport default function UserMenu({user}) {\r\n    return (\r\n        <div className=\"uxr-drop\" id=\"account-menu\">\r\n            <ul className=\"uxr-ul\">\r\n                <li className=\"uxr-li-head\">My Account </li>\r\n                <li className=\"uxr-li-link\"><NavLink title=\"Bet List\" to=\"/Account/BetList\">Bet List</NavLink></li>\r\n                <li className=\"uxr-li-link\"><NavLink title=\"Jackpot Bet List\" to=\"/Account/JackpotBets\">Jackpot Bet List</NavLink></li>\r\n                <li className=\"uxr-li-link\"><NavLink title=\"Transactions List\" to=\"/Account/TransactionList\">Transactions List</NavLink></li>\r\n                <li className=\"uxr-li-link\"><NavLink title=\"Active Bonus\" to=\"/Account/Bonuses\">Bonuses</NavLink></li>\r\n                <li className=\"uxr-li-link\"><NavLink title=\"Transactions List\" to=\"/Account/BonusTransactionList\">Bonus Transaction List</NavLink></li>\r\n\r\n                {(user.role === 'Master Agent' || user.role === 'Super Agent' || user.role === 'Agent' || user.role === 'Shop') &&\r\n                <li className=\"uxr-li-link\">\r\n                    <NavLink to=\"/Account/SportFinancial\" className=\"level-2\">\r\n                        Sport Financial\r\n                    </NavLink>\r\n                </li>}\r\n                {user.role !== 'Cashier' &&\r\n                <>\r\n                    <li className=\"uxr-li-link\"><NavLink title=\"Deposit\" to=\"/Account/Deposit\">Deposit</NavLink></li>\r\n                    <li className=\"uxr-li-link\"><NavLink title=\"Withdraw\" to=\"/Account/Withdraw\">Withdraw</NavLink></li>\r\n                    <li className=\"uxr-li-link\"><NavLink title=\"Messages\" to=\"/Account/Messages\">Messages</NavLink></li>\r\n                </>\r\n                }\r\n                {(user.role === 'Master Agent' || user.role === 'Super Agent' || user.role === 'Agent' || user.role === 'Shop') &&\r\n                <>\r\n                    <li className=\"uxr-li-head\">PDR</li>\r\n                    <li className=\"uxr-li-link\">\r\n                        <NavLink to=\"/Account/NewUser?usertype=player\">New User</NavLink>\r\n                    </li>\r\n                    {(user.role === 'Master Agent' || user.role === 'Super Agent' || user.role === 'Agent') &&\r\n                    <li className=\"uxr-li-link\">\r\n                        <NavLink to=\"/Account/NewUser?usertype=shop\">\r\n                            New Shop\r\n                        </NavLink>\r\n                    </li>}\r\n                    {(user.role === 'Master Agent' || user.role === 'Super Agent') &&\r\n                    <li className=\"uxr-li-link\">\r\n                        <NavLink to=\"/Account/NewUser?usertype=agent\">\r\n                            New Agent\r\n                        </NavLink>\r\n                    </li>}\r\n                    <li className=\"uxr-li-link\">\r\n                        <a href=\"https://globalbet.virtual-horizon.com/engine/backoffice/login_BU.htm#accounts\"\r\n                           target=\"_blank\" className=\"level-2\">\r\n                            Virtual Credit\r\n                        </a>\r\n                    </li>\r\n                    <li className=\"uxr-li-link\">\r\n                        <NavLink to=\"/Account/AgencyList\">\r\n                            Agency List\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"uxr-li-link\">\r\n                        <NavLink to=\"/Account/TransferFunds\">\r\n                            Transfer Funds\r\n                        </NavLink>\r\n                    </li>\r\n                </>\r\n                }\r\n\r\n                <li className=\"uxr-li-head\">Account Detail</li>\r\n\r\n                {user.role !== 'Cashier' && <li className=\"uxr-li-link\"><NavLink to=\"/Account/PersonalInfo\">Change Personal Data</NavLink></li>}\r\n                <li className=\"uxr-li-link\"><NavLink to=\"/Account/ChangePassword\" >Change Password</NavLink></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Utils\\laravel-echo.js",["701"],"import Echo from 'laravel-echo';\r\n\r\nimport * as Pusher from 'pusher-js';\r\n\r\nexport const LEcho = new Echo({\r\n    broadcaster: 'pusher',\r\n    key: process.env.REACT_APP_PUSHER_APP_KEY,\r\n    cluster: process.env.REACT_APP_PUSHER_APP_CLUSTER,\r\n    wsHost: process.env.NODE_ENV !== 'production' ? window.location.hostname : 'www.betteck.com',\r\n    wsPort:            process.env.NODE_ENV !== 'production' ? 6001 : 6002,\r\n    wssPort:           process.env.NODE_ENV !== 'production' ? 6001 : 6002,\r\n    forceTLS: false,\r\n    disableStats: true,\r\n    encrypted:         process.env.NODE_ENV === 'production',\r\n    enabledTransports: ['ws', 'wss'],\r\n});\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\CouponCheck.js",[],"C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\SmartBet.js",["702","703","704"],"import React, {useState} from 'react';\r\nimport {findCode, findFixture} from \"../../Services/apis\";\r\nimport {addToCoupon} from \"../../Redux/actions\";\r\nimport {createID} from \"../../Utils/couponHelpers\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {openFastCode} from \"../../Utils/helpers\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nexport default function SmartBet() {\r\n    const [fixture, setFixture] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [eventSearch, setEventSearch] = useState({\r\n        event_id: '',\r\n        code: ''\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    const findEvent = () => {\r\n        if(eventSearch.event_id.length === 4) {\r\n            setLoading(true);\r\n            document.getElementById('FastCodeField').focus();\r\n            findFixture(eventSearch.event_id).then(res => {\r\n                setLoading(false);\r\n                if(!res.message){\r\n                    setFixture(res);\r\n                }else{\r\n                    toast.error(res.message);\r\n                    setEventSearch({...eventSearch, event_id: ''});\r\n                    document.getElementById('code').focus();\r\n                }\r\n            }).catch(err => setLoading(false) | toast.error('Something went wrong. Please try again'));\r\n        }\r\n    }\r\n\r\n    const reset = () => {\r\n        setFixture('');\r\n        setEventSearch({\r\n            event_id: '',\r\n            code: ''\r\n        })\r\n        document.getElementById('code').focus();\r\n    }\r\n\r\n    const search = (e) => {\r\n        e.preventDefault();\r\n\r\n        findCode(eventSearch).then(res => {\r\n            if(res.message === 'found'){\r\n                reset();\r\n\r\n                let fixture = res.data.fixture\r\n\r\n                dispatch(addToCoupon(fixture, res.data.market_id, res.data.market_name, res.data.odd, res.data.odd_id, res.data.odd_name,\r\n                    createID(fixture.provider_id, res.data.market_id, res.data.odd_name, res.data.odd_id), fixture.fixture_type))\r\n            }else{\r\n                reset();\r\n            }\r\n        }).catch();\r\n    }\r\n    return (\r\n        <div className=\"single-block closed\">\r\n            <div className=\"block-title toggle-title\">\r\n                <img src=\"/img/arrow-down.png\" alt=\"\"\r\n                     className=\"title-icon closed\" />\r\n                <span>SMARTBET</span>\r\n                <div className=\"quick-btn\">\r\n                    <a href=\"javascript:;\" onClick={openFastCode} className=\"quick-btn-link\"></a>\r\n                </div>\r\n            </div>\r\n            <div className=\"block-content smartbet\">\r\n                <form onSubmit={search} name=\"fastslip2\">\r\n                    <input\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        name=\"code\"\r\n                        id=\"code\"\r\n                        maxLength={4}\r\n                        value={eventSearch.event_id}\r\n                        onChange={(e) => setEventSearch({...eventSearch, event_id: e.target.value})}\r\n                        onKeyUp={findEvent}\r\n                    />\r\n                    <input type=\"submit\" name=\"entercode\" id=\"entercode\" />\r\n                    <input\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        id=\"FastCodeField\"\r\n                        value={eventSearch.code}\r\n                        onChange={(e) => setEventSearch({...eventSearch, code: e.target.value})}\r\n                        onKeyPress={(e) => {\r\n                            if(e.key === 'Enter'){\r\n                                search(e);\r\n                            }\r\n                        }}\r\n                    />\r\n                    <div className=\"doc-button\">\r\n                        <i className=\"far fa-file-pdf\" aria-hidden=\"true\"></i>\r\n                    </div>\r\n                </form>\r\n                <span id=\"evento2\" className=\"match-name\">{fixture?.event_name}</span>\r\n                {loading && <i className={`fa fa-spin fa-spinner`} /> }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\BetSlip.js",["705","706","707"],"import React from 'react';\r\n\r\nimport {loadCoupon, todaysBet} from \"../../Services/apis\";\r\nimport {groupTournament} from \"../../Utils/couponHelpers\";\r\nimport {LOADING, SET_COUPON_DATA, SET_TODAYS_BET} from \"../../Redux/types\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {toast} from \"react-toastify\";\r\nimport CurrentBetslip from \"./Coupon/CurrentBetslip\";\r\n\r\nexport default function BetSlip() {\r\n    const {coupon, todaysBets} = useSelector((state) => state.couponData);\r\n    const {isAuthenticated, user} = useSelector((state) => state.auth);\r\n    const [code, setCode] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const findCoupon = (e) => {\r\n        e.preventDefault();\r\n        if (code !== '') {\r\n            dispatch({type: LOADING});\r\n            loadCoupon(code, 'booking').then(res => {\r\n                dispatch({type: LOADING});\r\n                if (res.message === 'found' && res.coupon.selections.length) {\r\n                    let couponData = res.coupon;\r\n                    couponData.tournaments = groupTournament(couponData.selections);\r\n                    // couponData.fixtures = groupSelections(couponData.selections);\r\n                    dispatch({type: SET_COUPON_DATA, payload: couponData});\r\n                } else {\r\n                    alert('Unable to rebet the selected coupon because all the events are expired');\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    const getTodayBet = () => {\r\n        todaysBet().then(res => {\r\n            if(res.length)\r\n                dispatch({type: SET_TODAYS_BET, payload: res});\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated) {\r\n            getTodayBet();\r\n        }\r\n    }, [isAuthenticated]);\r\n\r\n\r\n    return (\r\n        <div className=\"single-block betslip-holder active\">\r\n            <div className=\"block-title\">\r\n                <img src=\"/img/list-icon.png\" alt=\"\" className=\"title-icon\" />\r\n                <div className=\"match-count selectionss\">{coupon.selections.length}</div>\r\n                <span>Betslip</span>\r\n            </div>\r\n            <div className=\"betslip active\">\r\n                {coupon.selections.length > 0 ?\r\n                    <CurrentBetslip coupon={coupon} dispatch={dispatch} user={user} />\r\n                    :\r\n                <div className=\"single-block\" id=\"reservedCoupons\">\r\n                    <div className=\"block-content white\">\r\n                        <p>Click on the odds or enter a code to be loaded</p>\r\n                        <form name=\"richiama_coupon_prenotato\" onSubmit={findCoupon}>\r\n                            <input\r\n                                id=\"bookingCode\"\r\n                                name=\"bookingCode\"\r\n                                type=\"text\"\r\n                                placeholder=\"booking code\"\r\n                                autoComplete=\"off\"\r\n                                value={code}\r\n                                onChange={(e) => setCode(e.target.value)}\r\n                            />\r\n                            <input type=\"submit\" value=\"Load\" />\r\n                        </form>\r\n                    </div>\r\n                </div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\QuickBet.js",["708","709","710"],"import React, {useState} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {findFixtureWithOutcomes} from \"../../Services/apis\";\r\nimport {addToCoupon} from \"../../Redux/actions\";\r\nimport {createID} from \"../../Utils/couponHelpers\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nexport default function QuickBet() {\r\n    const [fixture, setFixture] = useState(null);\r\n    const [outcomes, setOutcomes] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [eventId, setEventId] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const findEvent = () => {\r\n        if(eventId.length === 4) {\r\n            setLoading(true);\r\n            setFixture(null);\r\n            setOutcomes([]);\r\n            findFixtureWithOutcomes(eventId).then(res => {\r\n                setLoading(false);\r\n                if(!res.message){\r\n                    setFixture(res);\r\n                    setOutcomes(res.outcomes);\r\n                }else{\r\n                    toast.error(res.message);\r\n                    setEventId('');\r\n                    document.getElementById('code3').focus();\r\n                }\r\n            }).catch(err => setLoading(false) | toast.error('Something went wrong. Please try again'));\r\n        }\r\n    }\r\n\r\n    const selectOutcome = value => {\r\n        const selection = JSON.parse(value);\r\n        dispatch(addToCoupon(fixture, selection.market_id, selection.market_name, selection.odds, selection.odd_id, selection.odd_name,\r\n                        createID(fixture.provider_id, selection.market_id, selection.odd_name, selection.odd_id), fixture.fixture_type))\r\n\r\n        reset();\r\n    }\r\n\r\n    const reset = () => {\r\n        setFixture('');\r\n        setOutcomes([]);\r\n        setEventId('')\r\n        document.getElementById('code3').focus();\r\n    }\r\n\r\n    return (\r\n        <div className=\"single-block closed\">\r\n            <div className=\"block-title toggle-title\">\r\n                <img src=\"/img/arrow-down.png\" alt=\"\"\r\n                     className=\"title-icon closed\" />\r\n                <span>QUICKBET</span>\r\n                <div className=\"quick-btn\">\r\n                    <a href=\"#\" onClick=\"javascript:betcode_splash();\" className=\"quick-btn-link\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"block-content\">\r\n                <form onSubmit=\"return false;\" name=\"fastslip3\">\r\n                    <input type=\"text\" autoComplete=\"off\" name=\"code3\" id=\"code3\"\r\n                           maxLength={4}\r\n                           value={eventId}\r\n                           onChange={(e) => setEventId(e.target.value)}\r\n                           onKeyUp={findEvent}\r\n                    />\r\n                    <input type=\"submit\" id=\"entercode3\" name=\"entercode3\" onClick={findEvent} />\r\n                    <select id=\"segni3\" name=\"pronostico3\" onChange={(e) => {\r\n                        if (e.target.value !== '')\r\n                            selectOutcome(e.target.value)\r\n                    }}>\r\n                        <option value=\"\">--select option--</option>\r\n                        {outcomes.map(outcome => <option key={outcome.odd_id} value={JSON.stringify(outcome)}>{outcome.odd_name + ' ('+outcome.market_name+')'}</option> )}\r\n                    </select>\r\n                </form>\r\n                <span id=\"evento3\" className=\"match-name\">{fixture?.event_name}</span>\r\n                {loading && <i className={`fa fa-spin fa-spinner`} /> }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Utils\\CouponCalculation.js",["711","712","713","714","715","716","717","718","719","720","721","722","723","724","725","726","727","728","729","730","731","732","733","734","735","736"],"import SlotKey from './SlotKey';\r\nimport CalculatedGroup from './CalculatedGroup';\r\nimport CalculatedCoupon from './CalculatedCoupon';\r\nimport {Combination, FastCombination as fastCombination} from './Combination';\r\n// import store from '../Redux/store';\r\n// const { SportsbookGlobalVariable } = store.getState();\r\n\r\nconst BetCouponGroup = (function () {\r\n    function BetCouponGroup() {\r\n    }\r\n    return BetCouponGroup;\r\n})();\r\n\r\nArray.prototype.unique = function (key) {\r\n    var unique = {};\r\n    var distinct = [];\r\n    for (var i = 0; i < this.length; i++) {\r\n        var current = this[i];\r\n        if (typeof (unique[current[key]]) == \"undefined\") {\r\n            distinct.push(current);\r\n        }\r\n        unique[current[key]] = 0;\r\n    }\r\n    return distinct;\r\n};\r\nArray.prototype.sum = function (key) {\r\n    var sum = 0;\r\n    for (var i = 0; i < this.length; i++) {\r\n        var current = this[i];\r\n        sum += current[key];\r\n    }\r\n    return sum;\r\n};\r\nArray.prototype.min = function (key) {\r\n    if (this.length > 1) {\r\n        var res = this.reduce(function (p, v) {\r\n            return (p[key] < v[key] ? p : v);\r\n        });\r\n        return res[key];\r\n    }\r\n    else {\r\n        var x = this[0];\r\n        return x[key];\r\n    }\r\n};\r\nArray.prototype.max = function (key) {\r\n    if (this.length > 1) {\r\n        var res = this.reduce(function (p, v) {\r\n            return (p[key] > v[key] ? p : v);\r\n        });\r\n        return res[key];\r\n    }\r\n    else {\r\n        var x = this[0];\r\n        return x[key];\r\n    }\r\n};\r\nArray.prototype.take = function (count) {\r\n    return this.slice(0, count);\r\n};\r\nArray.prototype.sortAsc = function (key) {\r\n    return this.sort(function (a, b) {\r\n        if (a[key] > b[key])\r\n            return 1;\r\n        if (a[key] < b[key])\r\n            return -1;\r\n        return 0;\r\n    });\r\n};\r\nArray.prototype.sortMultipleAsc = function (key1, key2, key3) {\r\n    var cmp = function (a, b) {\r\n        if (a > b)\r\n            return +1;\r\n        if (a < b)\r\n            return -1;\r\n        return 0;\r\n    };\r\n    return this.sort(function (a, b) {\r\n        return cmp(a[key1], b[key1]) || cmp(a[key2], b[key2]) || cmp(a[key3], b[key3]);\r\n    });\r\n};\r\nArray.prototype.sortDesc = function (key) {\r\n    return this.sort(function (a, b) {\r\n        if (a[key] > b[key])\r\n            return -1;\r\n        if (a[key] < b[key])\r\n            return 1;\r\n        return 0;\r\n    });\r\n};\r\nArray.prototype.remove = function (key, match) {\r\n    for (var index = 0; index < this.length; index++) {\r\n        var current = this[index];\r\n        if (current[key] == match) {\r\n            this.splice(index, 1);\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n};\r\nArray.prototype.removeAll = function (key, match) {\r\n    var count = 0;\r\n    for (var index = 0; index < this.length; index++) {\r\n        var current = this[index];\r\n        if (current[key] == match) {\r\n            this.splice(index, 1);\r\n            count++;\r\n        }\r\n    }\r\n    return count;\r\n};\r\nArray.prototype.find = function (predicate) {\r\n    // 1. Let O be ? ToObject(this value).\r\n    if (this == null) {\r\n        throw TypeError('\"this\" is null or not defined');\r\n    }\r\n    var o = Object(this);\r\n    // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n    var len = o.length >>> 0;\r\n    // 3. If IsCallable(predicate) is false, throw a TypeError exception.\r\n    if (typeof predicate !== 'function') {\r\n        throw TypeError('predicate must be a function');\r\n    }\r\n    // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n    var thisArg = arguments[1];\r\n    // 5. Let k be 0.\r\n    var k = 0;\r\n    // 6. Repeat, while k < len\r\n    while (k < len) {\r\n        // a. Let Pk be ! ToString(k).\r\n        // b. Let kValue be ? Get(O, Pk).\r\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\r\n        // d. If testResult is true, return kValue.\r\n        var kValue = o[k];\r\n        if (predicate.call(thisArg, kValue, k, o)) {\r\n            return kValue;\r\n        }\r\n        // e. Increase k by 1.\r\n        k++;\r\n    }\r\n    // 7. Return undefined.\r\n    return undefined;\r\n};\r\n\r\nexport default class CouponCalculation {\r\n    // const coupon;\r\n\r\n    getSlotKeyFromString = function (key) {\r\n        var splitKey = key.split(\"_\");\r\n        var matchId = parseInt(splitKey[0]);\r\n        var index = parseInt(splitKey[1]);\r\n        return new SlotKey(matchId, index);\r\n    };\r\n    getOddsForSlotKeyMap = function (coupon) {\r\n        var oddsForSlotKeyMap = {};\r\n        for (var i = 0; i < coupon.selections.length; i++) {\r\n            var odd = coupon.selections[i];\r\n            var keys = [];\r\n            for (var key in oddsForSlotKeyMap) {\r\n                var slotKey = this.getSlotKeyFromString(key);\r\n                if (slotKey.MatchId === odd.provider_id && slotKey.Index === 0)\r\n                    keys.push(slotKey);\r\n                else if (slotKey.MatchId === odd.provider_id && slotKey.Index > 0)\r\n                    throw new Error(\"Mixed CompatibilityLevel on odds\");\r\n            }\r\n            if (keys.length > 1)\r\n                throw new Error(\"Wrong oddsForSlotKeyMap construction\");\r\n            if (keys.length === 0) {\r\n                var sk = new SlotKey(odd.provider_id, 0);\r\n                var x = [];\r\n                x.push(odd);\r\n                oddsForSlotKeyMap[sk.getKey()] = x;\r\n            }\r\n            else {\r\n                var sk = keys[0];\r\n                var currentSK = oddsForSlotKeyMap[sk.getKey()];\r\n                currentSK.push(odd);\r\n            }\r\n        }\r\n        return oddsForSlotKeyMap;\r\n    };\r\n    calcCombinations = function (coupon) {\r\n        // console.log('calculating combinations');\r\n        var maxCombinationForCoupon = Math.min(process.env.REACT_APP_MaxCombinationsByGrouping, process.env.REACT_APP_MaxCouponCombinations);\r\n        if (coupon.selections.length > 0 && coupon.selections.filter(function (o) { return o.fixed; }).length === coupon.selections.length)\r\n            coupon.selections[0].fixed = false;\r\n        var calculatedCouponGroups = [];\r\n        var oddsForSlotKeyMap = this.getOddsForSlotKeyMap(coupon);\r\n        var bankers = [];\r\n        var nonBankers = [];\r\n        var slotKeyCount = 0;\r\n        var integrale = false;\r\n        var numSelectionsPerEvent = [];\r\n\r\n        for (var key in oddsForSlotKeyMap) {\r\n            var currentSK = oddsForSlotKeyMap[key];\r\n            if (currentSK[0].Fixed)\r\n                bankers.push(currentSK[0]);\r\n            else {\r\n                nonBankers.push(currentSK);\r\n                numSelectionsPerEvent.push(currentSK.length);\r\n            }\r\n            slotKeyCount += 1;\r\n            if (currentSK.length > 1)\r\n                integrale = true;\r\n        }\r\n        var firstGroup = bankers.length > 0 ? bankers.length : 1;\r\n\r\n        for (var groupIndex = 0; groupIndex <= slotKeyCount; groupIndex++) {\r\n            var group = null;\r\n            if (groupIndex > 0) {\r\n                group = new CalculatedGroup(groupIndex);\r\n                if (groupIndex < firstGroup)\r\n                    group.Combinations = 0;\r\n            }\r\n            calculatedCouponGroups.push(group);\r\n        }\r\n        if (bankers.length > 0) {\r\n            calculatedCouponGroups[bankers.length].Combinations = 0;\r\n        }\r\n        if (!integrale) {\r\n            for (var k = nonBankers.length; k > 0; k--) {\r\n                var n = nonBankers.length;\r\n                var nc = new Combination().choose(n, k);\r\n                if (maxCombinationForCoupon > nc)\r\n                    calculatedCouponGroups[k + bankers.length].Combinations = nc;\r\n                else\r\n                    calculatedCouponGroups[k + bankers.length].Combinations = -1;\r\n            }\r\n        }\r\n        else {\r\n            for (var k = nonBankers.length; k > 0; k--) {\r\n                var combinationsCount = this.calcCombinationsForCrossCombinationsBetGroup(k, numSelectionsPerEvent, maxCombinationForCoupon);\r\n                calculatedCouponGroups[k + bankers.length].Combinations = combinationsCount;\r\n            }\r\n        }\r\n        const maxPossibleGroupings = this.MaxGrouping(coupon.selections);\r\n        for (var index = 0; index < calculatedCouponGroups.length; index++) {\r\n            if (calculatedCouponGroups[index] == null || calculatedCouponGroups[index].Grouping > maxPossibleGroupings) {\r\n                calculatedCouponGroups.splice(index, 1);\r\n                index--;\r\n            }\r\n        }\r\n        var calculatedCoupon = new CalculatedCoupon();\r\n        calculatedCouponGroups.forEach(function (g) { return calculatedCoupon.Groups.push(g); });\r\n        return calculatedCoupon;\r\n    };\r\n    calcCombinationsForCrossCombinationsBetGroup = function (k, numSelectionsPerEvent, maxCombinationForCoupon) {\r\n        var choosen = fastCombination.chooseFromSets(numSelectionsPerEvent, k);\r\n        if (choosen > maxCombinationForCoupon)\r\n            return -1;\r\n        return choosen;\r\n    };\r\n    calcPotentialWins = function (coupon, bonusList) {\r\n        var maxCombinationForCoupon = Math.min(process.env.REACT_APP_MaxCombinationsByGrouping, process.env.REACT_APP_MaxCouponCombinations);\r\n        var oddsForSlotKeyMap = this.getOddsForSlotKeyMap(coupon);\r\n        var bankers = [];\r\n        var nonBankers = [];\r\n        for (var key in oddsForSlotKeyMap) {\r\n            var currentSK = oddsForSlotKeyMap[key];\r\n            if (currentSK[0].Fixed)\r\n                bankers.push(currentSK[0]);\r\n            else {\r\n                nonBankers.push(currentSK);\r\n            }\r\n        }\r\n\r\n        var maxCombination = [];\r\n        var minCombination = [];\r\n        for (var nonBankerIndex = 0; nonBankerIndex < nonBankers.length; nonBankerIndex++) {\r\n            maxCombination[nonBankerIndex] = nonBankers[nonBankerIndex].sortDesc(\"odds\")[0];\r\n            minCombination[nonBankerIndex] = nonBankers[nonBankerIndex].sortAsc(\"odds\")[0];\r\n        }\r\n        var calculatedCouponGroups = [];\r\n        for (var i = 0; i < coupon.Groupings.length; i++) {\r\n            var betCouponGroup = coupon.Groupings[i];\r\n            if (betCouponGroup.Combinations > 0) {\r\n                \r\n                var calculatedGroup = new CalculatedGroup(betCouponGroup.Grouping);\r\n                calculatedGroup.Combinations = betCouponGroup.Combinations;\r\n                calculatedGroup.StakeForCombination = betCouponGroup.Stake;\r\n                calculatedCouponGroups.push(calculatedGroup);\r\n            }\r\n        }\r\n        if (coupon.Groupings.length === 0 && bankers.length + nonBankers.length === 1) {\r\n            var combinations = 1;\r\n            if (nonBankers.length > 0) {\r\n                combinations = nonBankers[0].length;\r\n            }\r\n            var calculatedGroup = new CalculatedGroup(1);\r\n            calculatedGroup.Combinations = combinations;\r\n            calculatedGroup.StakeForCombination = coupon.stake / combinations;\r\n            calculatedCouponGroups.push(calculatedGroup);\r\n        }\r\n        var bankersValidEventForBonus = 0;\r\n        var bankersTotalOdds = 1.0;\r\n        for (var i = 0; i < bankers.length; i++) {\r\n            var b = bankers[i];\r\n            bankersTotalOdds *= b.odds;\r\n            bankersTotalOdds = Number(bankersTotalOdds.toFixed(10)); // Attempting to work around the javascript precision issue\r\n            if (b.OddValue >= process.env.REACT_APP_MinBonusOdd)\r\n                bankersValidEventForBonus++;\r\n        }\r\n        for (var i = 0; i < calculatedCouponGroups.length; i++) {\r\n            var calculatedGroup = calculatedCouponGroups[i];\r\n            var n = nonBankers.length;\r\n            var k = calculatedGroup.Grouping - bankers.length;\r\n            var nc = new Combination().choose(n, k);\r\n            var maxWinForUnit = 0.0;\r\n            var maxBonusForUnit = 0.0;\r\n            if (maxCombinationForCoupon > nc) {\r\n                var combination = new Combination(n, k);\r\n                for (var j = 0; j < nc; j++) {\r\n                    var validEventsForBonus = bankersValidEventForBonus;\r\n                    var winForUnit = bankersTotalOdds;\r\n                    var combOdds = combination.applyTo(maxCombination);\r\n                    for (var l = 0; l < combOdds.length; l++) {\r\n                        var odd = combOdds[l];\r\n                        winForUnit *= odd.odds;\r\n                        winForUnit = Number(winForUnit.toFixed(10)); // Attempting to work around the javascript precision issue\r\n                        if (odd.odds >= process.env.REACT_APP_MinBonusOdd)\r\n                            validEventsForBonus++;\r\n                    }\r\n                    var percBonus = this.bonusPercentageFromNumberOfEvents(bonusList, validEventsForBonus);\r\n                    maxWinForUnit += winForUnit;\r\n                    maxBonusForUnit += winForUnit * percBonus;\r\n                    combination = combination.successor();\r\n                    calculatedGroup.MaxPercentageBonus = percBonus;\r\n                }\r\n            }\r\n            calculatedGroup.MaxWinForUnit = maxWinForUnit;\r\n            calculatedGroup.MaxBonusForUnit = maxBonusForUnit;\r\n            var minWinForUnit = bankersTotalOdds;\r\n            var minEventForBonus = bankersValidEventForBonus;\r\n            var sortedMinComb = minCombination.sortAsc(\"odds\");\r\n            var subSortedMinComb = sortedMinComb.take(k);\r\n            for (var j = 0; j < subSortedMinComb.length; j++) {\r\n                var odd = subSortedMinComb[j];\r\n                // PS: This multiplication (and possibly all others) suffer from the problem\r\n                // of javascript floating point precision. This results in a total max win which\r\n                // might vary slightly from the server's calculations.\r\n                // A possible solution to this problem are libraries such as BigNumber and big.js\r\n                minWinForUnit *= odd.odds;\r\n                minWinForUnit = Number(minWinForUnit.toFixed(10)); // Attempting to work around the javascript precision issue\r\n                if (odd.odds >= process.env.REACT_APP_MinBonusOdd)\r\n                    minEventForBonus++;\r\n            }\r\n            var minPercBonus = this.bonusPercentageFromNumberOfEvents(bonusList, minEventForBonus);\r\n            calculatedGroup.MinWinForUnit = minWinForUnit;\r\n            calculatedGroup.MinBonusForUnit = minWinForUnit * minPercBonus;\r\n            calculatedGroup.MinPercentageBonus = minPercBonus;\r\n        }\r\n        var calculatedCoupon = new CalculatedCoupon();\r\n        calculatedCouponGroups.forEach(function (g) { return calculatedCoupon.Groups.push(g); });\r\n        return calculatedCoupon;\r\n    };\r\n    bonusPercentageFromNumberOfEvents = function (bonusList, numberOfEvents) {\r\n        if (bonusList.length === 0)\r\n            return 0.0;\r\n        if (numberOfEvents < bonusList.min(\"ticket_length\"))\r\n            return 0.0;\r\n        if (numberOfEvents > bonusList.max(\"ticket_length\")) {\r\n            return 0.0;\r\n        }\r\n        var filteredBonusList = bonusList.filter(function (b) { return b.ticket_length === numberOfEvents; });\r\n        if (filteredBonusList.length > 0) {\r\n            var item = filteredBonusList[0];\r\n            return item.bonus / 100.0;\r\n        }\r\n        throw new Error(\"Can't find the bonus percentage for \" + numberOfEvents + \" events\");\r\n    };\r\n    updateFromCalculatedCoupon = function (betCoupon, calculatedCoupon) {\r\n        if (betCoupon.Groupings.length > 0) {\r\n            for (var i = 0; i < calculatedCoupon.Groups.length; i++) {\r\n                var calculatedGroup = calculatedCoupon.Groups[i];\r\n                var betCouponGroups = betCoupon.Groupings.filter(function (g) { return g.Grouping == calculatedGroup.Grouping; });\r\n                if (betCouponGroups.length > 0) {\r\n                    var betCouponGroup = betCouponGroups[0];\r\n                    betCouponGroup.Combinations = calculatedGroup.Combinations;\r\n                    betCouponGroup.MaxBonus = calculatedGroup.MaxBonus();\r\n                    betCouponGroup.maxWin = calculatedGroup.MaxWin();\r\n                    betCouponGroup.MaxWinNet = calculatedGroup.NetStakeMaxWin(); // Till this point only turnover tax is applied. Witholding tax is applied later\r\n                    betCouponGroup.NetStakeMaxWin = calculatedGroup.NetStakeMaxWin();\r\n                    betCouponGroup.MinBonus = calculatedGroup.MinBonus();\r\n                    betCouponGroup.minWin = calculatedGroup.MinWin();\r\n                    betCouponGroup.MinWinNet = calculatedGroup.NetStakeMinWin(); // Till this point only turnover tax is applied. Witholding tax is applied later\r\n                    betCouponGroup.NetStakeMinWin = calculatedGroup.NetStakeMinWin();\r\n                    betCouponGroup.MinPercentageBonus = calculatedGroup.MinPercentageBonus;\r\n                    betCouponGroup.MaxPercentageBonus = calculatedGroup.MaxPercentageBonus;\r\n                    betCouponGroup.NetStake = calculatedGroup.StakeForCombinationTaxed;\r\n                }\r\n                if (!betCouponGroup.Combinations > 0 && betCouponGroup.Grouping > 0) {\r\n                    betCoupon = this.removeGroup(betCoupon, betCouponGroup);\r\n                }\r\n            }\r\n        }\r\n        //betCoupon.Odds.sortMultipleAsc(\"EventName\", \"TournamentName\", \"MatchName\");\r\n        betCoupon.TotalCombinations = this.getTotalCombinations(betCoupon);\r\n        betCoupon.minWin = this.getMinWin(betCoupon);\r\n        betCoupon.NetStakeMinWin = this.getNetStakeMinWin(betCoupon);\r\n        betCoupon.maxWin = this.getMaxWin(betCoupon);\r\n        betCoupon.NetStakeMaxWin = this.getNetStakeMaxWin(betCoupon);\r\n        betCoupon.minBonus = this.getMinBonus(betCoupon);\r\n        betCoupon.maxBonus = this.getMaxBonus(betCoupon);\r\n        betCoupon.MinPercentageBonus = this.getMinPercentageBonus(betCoupon);\r\n        betCoupon.MaxPercentageBonus = this.getMaxPercentageBonus(betCoupon);\r\n        betCoupon.minOdds = this.getMinOdd(betCoupon);\r\n        betCoupon.maxOdds = this.getMaxOdd(betCoupon);\r\n        return betCoupon;\r\n    };\r\n    MaxGrouping = function (selections) {\r\n        var ret = Number.MAX_VALUE;\r\n        //lottery skip for now\r\n        var compatibleMarketsCount = 0;\r\n        var incompatibleMarketsEventCount = selections.unique(\"provider_id\").length;\r\n        var temp_ret = compatibleMarketsCount + incompatibleMarketsEventCount;\r\n        if (temp_ret > ret)\r\n            return ret;\r\n        else\r\n            return temp_ret;\r\n    };\r\n    getTotalCombinations = function (betCoupon) {\r\n        if (betCoupon.Groupings.length > 0) {\r\n            return betCoupon.Groupings.sum(\"Combinations\");\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    };\r\n    getMinWin = function (betCoupon) {\r\n        if (betCoupon.Groupings.length > 0) {\r\n            return betCoupon.Groupings.min(\"minWin\");\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    };\r\n    getNetStakeMinWin = function (betCoupon) {\r\n        if (betCoupon.Groupings.length > 0) {\r\n            return betCoupon.Groupings.min(\"MinWinNet\");\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    };\r\n    getMinOdd = function (betCoupon) {\r\n        if (betCoupon.Groupings != null && betCoupon.Groupings.length > 0) {\r\n            var minWinGroup = betCoupon.Groupings.filter(function (g) { return g.Stake > 0; }).sort(function (a, b) { return a.minWin - b.minWin; })[0];\r\n            if (minWinGroup !== null) {\r\n                return parseFloat((minWinGroup.minWin / minWinGroup.Stake).toFixed(2));\r\n            }\r\n        }\r\n        return 0;\r\n    };\r\n    getMaxOdd = function (betCoupon) {\r\n        if (betCoupon.Groupings != null && betCoupon.Groupings.length > 0) {\r\n            var maxOddSum = betCoupon.Groupings.filter(function (g) { return g.Stake > 0; }).reduce(function (acc, g) { return acc + (g.maxWin / g.Stake); }, 0);\r\n            return parseFloat(maxOddSum.toFixed(2));\r\n        }\r\n        return 0;\r\n    };\r\n    getMaxWin = function (betCoupon) {\r\n        if (betCoupon.Groupings.length > 0) {\r\n            return betCoupon.Groupings.sum(\"maxWin\");\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    };\r\n    getNetStakeMaxWin = function (betCoupon) {\r\n        if (betCoupon.Groupings.length > 0) {\r\n            return betCoupon.Groupings.sum(\"MaxWinNet\");\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    };\r\n    getMinBonus = function (betCoupon) {\r\n        if (betCoupon.Groupings.length > 0) {\r\n            return betCoupon.Groupings.min(\"MinBonus\");\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    };\r\n    getMaxBonus = function (betCoupon) {\r\n        if (betCoupon.Groupings.length > 0) {\r\n            return betCoupon.Groupings.sum(\"MaxBonus\");\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    };\r\n    getMinPercentageBonus = function (betCoupon) {\r\n        if (betCoupon.Groupings.length > 0) {\r\n            return betCoupon.Groupings.min(\"MinPercentageBonus\");\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    };\r\n    getMaxPercentageBonus = function (betCoupon) {\r\n        if (betCoupon.Groupings.length > 0) {\r\n            return betCoupon.Groupings.max(\"MaxPercentageBonus\");\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    };\r\n    truncateLastRoundedDecimalValue = function (num) {\r\n        var pointerIdx = num.toString().indexOf('.');\r\n        var precisionLength = num.toString().substring(pointerIdx + 1).length;\r\n        var re = new RegExp('^-?\\\\d+(?:\\.\\\\d{0,' + (precisionLength - 1) + '})?');\r\n        return parseFloat(num.toString().match(re)[0]);\r\n    };\r\n    setPossibleCouponStake = function (betCoupon) {\r\n        for (var _d = 0, _e = betCoupon.Groupings; _d < _e.length; _d++) {\r\n            const grpItem = _e[_d];\r\n            if(!grpItem.Stake)\r\n                grpItem.Stake = 0;\r\n            //get ratio of inner stake to get minStake for grouping allowed\r\n            var minInnerStakeAllowed = process.env.REACT_APP_MinGroupingsBetStake;\r\n            if (betCoupon.stake !== 0) {\r\n                var grpStakeRatio = grpItem.Stake / betCoupon.stake;\r\n                grpStakeRatio = this.truncateLastRoundedDecimalValue(grpStakeRatio);\r\n                minInnerStakeAllowed = Math.max(process.env.REACT_APP_MinGroupingsBetStake, (process.env.REACT_APP_MinBetStake * grpStakeRatio));\r\n            }\r\n            if ((process.env.REACT_APP_StakeInnerMod0Combination != null && process.env.REACT_APP_StakeInnerMod0Combination !== 0)) {\r\n                var modValueItem = grpItem.Stake % process.env.REACT_APP_StakeInnerMod0Combination;\r\n                //if correct then continue to next GroupItem\r\n                if (modValueItem !== 0) {\r\n                    //new Stake Value\r\n                    var divValueItem = grpItem.Stake / process.env.REACT_APP_StakeInnerMod0Combination;\r\n                    var rounded = Math.round(divValueItem);\r\n                    if (rounded === 0)\r\n                        rounded = 1;\r\n                    grpItem.Stake = rounded * process.env.REACT_APP_StakeInnerMod0Combination;\r\n                }\r\n                if (grpItem.Stake < minInnerStakeAllowed) {\r\n                    //new Stake Value\r\n                    var divValueItemMin = minInnerStakeAllowed / process.env.REACT_APP_StakeInnerMod0Combination;\r\n                    var roundedMin = Math.ceil(divValueItemMin);\r\n                    if (roundedMin === 0)\r\n                        roundedMin = 1;\r\n                    grpItem.Stake = roundedMin * process.env.REACT_APP_StakeInnerMod0Combination;\r\n                }\r\n            }\r\n            betCoupon.Groupings[_d] = grpItem;\r\n        }\r\n        return betCoupon;\r\n        //recalculate coupon to use set stake values if not updateCouponWithNewValues\r\n    };\r\n    removeGroup = function (betCoupon, betCouponGroup) {\r\n        return betCoupon.Groupings.remove(\"Grouping\", betCouponGroup.Grouping);\r\n    };\r\n    setPossibleGroupings = (betCoupon, calculatedCoupon) => {\r\n        var possibleMissingGrouping = [];\r\n        for (var i = 0; i < calculatedCoupon.Groups.length; i++) {\r\n            var calculatedGroup = calculatedCoupon.Groups[i];\r\n            var combinations = calculatedGroup.Combinations;\r\n            var betCouponGroups = betCoupon.Groupings.filter(function (g) { return g.Grouping == calculatedGroup.Grouping; });\r\n            if (betCouponGroups.length > 1)\r\n                throw new Error(\"Multiple Groupings defined!\");\r\n            //add all groupings\r\n            if (betCouponGroups.length === 0) {\r\n                var newGroup = new BetCouponGroup();\r\n                newGroup.Grouping = calculatedGroup.Grouping;\r\n                newGroup.Combinations = calculatedGroup.Combinations;\r\n                possibleMissingGrouping.push(newGroup);\r\n            }\r\n            if (combinations <= 0 || combinations > betCoupon.BetCouponGlobalVariable.MaxCouponCombinations) {\r\n                if (betCouponGroups.length > 0) {\r\n                    this.removeGroup(betCoupon, betCouponGroups[0]);\r\n                }\r\n            }\r\n            else {\r\n                if (betCouponGroups.length > 0) {\r\n                    betCouponGroups[0].Combinations = combinations;\r\n                }\r\n            }\r\n        }\r\n        // BTK-1297: ensure there is always 1 group selected if possible\r\n        if (betCoupon.Groupings.length === 0 && possibleMissingGrouping.length >= 1) {\r\n            // find the last available grouping which doesn't have grouping 1 or grouping equal\r\n            // to number of odds in the coupon\r\n            var validGroupings = possibleMissingGrouping.filter(function (g) { return g.Grouping > 0 && g.Grouping !== 1 && g.Grouping !== betCoupon.Odds.length; });\r\n            var lastGrouping = validGroupings.pop();\r\n            if (lastGrouping) {\r\n                // create a new grouping based on the one found\r\n                var newGrouping = new BetCouponGroup();\r\n                newGrouping.Combinations = lastGrouping.Combinations;\r\n                newGrouping.Grouping = lastGrouping.Grouping;\r\n                betCoupon.Groupings.push(newGrouping);\r\n                // remove the selected grouping from the list of possibleMissingGroupings\r\n                possibleMissingGrouping = possibleMissingGrouping.filter(function (g) { return g.Grouping !== lastGrouping.Grouping || g.Combinations !== lastGrouping.Combinations; });\r\n            }\r\n        }\r\n        betCoupon.PossibleMissingGroupings = possibleMissingGrouping;\r\n        return betCoupon;\r\n    }\r\n}","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\TransferForm.js",[],"C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\UserForm.js",[],"C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\Coupon\\CurrentBetslip.js",["737","738"],"import React, {Fragment} from 'react';\r\nimport {Multiple} from \"./BetTypes/Multiple\";\r\nimport {Combined} from \"./BetTypes/Combined\";\r\nimport {Split} from \"./BetTypes/Split\";\r\nimport {CANCEL_BET, CONFIRM_BET, SET_COUPON_TYPE, SET_USE_BONUS} from \"../../../Redux/types\";\r\nimport {fastAdd, placeBet, removeSelection} from \"../../../Redux/actions\";\r\nimport {formatNumber} from \"../../../Utils/helpers\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nexport default function CurrentBetslip({coupon, dispatch, user}) {\r\n    const {SportsbookGlobalVariable, SportsbookBonusList} = useSelector((state) => state.sportsBook);\r\n\r\n    return (\r\n        <div id=\"coupon\">\r\n            <div className=\"selections-wrapper\">\r\n                <div className=\"selections\">\r\n                    <div className=\"selection\">Selections <span className=\"selectionss\">{coupon.selections.length}</span></div>\r\n                    <div className=\"max-odd\">Max Odd <span className=\"maxodd\" id=\"quota\">{coupon.totalOdds}</span></div>\r\n                </div>\r\n                <div id=\"couponEvents\">\r\n                    {coupon.tournaments.map(tournament =>\r\n                        <Fragment>\r\n                            <div className=\"tournament-name\">{`${tournament.category} / ${tournament.tournamentName}`}</div>\r\n                            {tournament.fixtures.map(fixture =>\r\n                            <div className=\"single-event\" key={`group-event-${fixture.provider_id}`}>\r\n                                <div className=\"match-info\">\r\n                                    <div className=\"id\">{fixture.event_id}</div>\r\n                                    <div className=\"team-names\">{fixture.event_name}</div>\r\n                                    <div id=\"f_23204141\" className=\"bonus \" style={{ display: 'none' }}>B</div>\r\n                                </div>\r\n                                {fixture.selections.map(selection =>\r\n                                    <div className=\"selected-bet\" key={`selection-${selection.odd_id}`}>\r\n                                        <div className=\"remove-icon\" onClick={() => dispatch(removeSelection(selection))}>\r\n                                            <div className=\"icon-holder\">\r\n                                                <img src=\"/img/cross-red.png\" alt=\"\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"bet\"><span>{coupon?.tipster_id ? '***' : selection.market_name}: {coupon?.tipster_id ? '**' : selection.oddname}</span>\r\n                                            <div className=\"quote-holder\">\r\n                                                <div className=\"quote\" id=\"no_23204141_10_2_\">{selection.odds}</div>\r\n                                                <div className=\"quote old\" id=\"oo_23204141_10_2_\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                            )}\r\n                        </Fragment>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <div className=\"combination-wrapper\">\r\n                <div className=\"select-wrapper\" id=\"cTipi\">\r\n                    <div className=\"combination-type\" id=\"tSingle\"  style={{ display: 'none' }}>Single</div>\r\n                    {coupon.bet_type === 'Split' ?\r\n                        <div className=\"combination-type\" style={{width: '100%'}}>Split Column Bet</div>\r\n                        :\r\n                        <>\r\n                            <div className={`combination-type ${coupon.bet_type === 'Multiple' ? 'active' : ''}`}\r\n                                 id=\"tMultiple\"\r\n                                 onClick={() => {\r\n                                     dispatch({type: SET_COUPON_TYPE, payload: 'Multiple'});\r\n                                     dispatch(fastAdd(0));\r\n                                 }}\r\n                            >Multiple</div>\r\n                            <div className={`combination-type ${coupon.bet_type === 'Combo' ? 'active' : ''}`}\r\n                                 id=\"tCombination\"\r\n                                 onClick={() => {\r\n                                    dispatch({type: SET_COUPON_TYPE, payload: 'Combo'});\r\n                                    dispatch(fastAdd(0))\r\n                                 }}\r\n                            >Combo Bet</div>\r\n                            {/*<div className={`combination-type ${coupon.bet_type === 'Single' ? 'active' : ''}`}\r\n                                 id=\"tMultiple\"\r\n                            >Single</div>\r\n                            <div className={`combination-type ${coupon.bet_type === 'Multiple' ? 'active' : ''}`}\r\n                                 id=\"tCombination\"\r\n                            >Multiple</div>*/}\r\n                        </>\r\n                    }\r\n                </div>\r\n                {\r\n                    {\r\n                        'Combo':  <Combined couponData={coupon} dispatch={dispatch} globalVar={SportsbookGlobalVariable} bonusList={SportsbookBonusList} />,\r\n                        'Split' : <Split couponData={coupon} dispatch={dispatch} globalVar={SportsbookGlobalVariable} bonusList={SportsbookBonusList} />\r\n                    }[coupon.bet_type] || <Multiple couponData={coupon} dispatch={dispatch} globalVar={SportsbookGlobalVariable} />\r\n                }\r\n\r\n\r\n                <div className=\"totals-section\">\r\n                    <div id=\"couponFooter\">\r\n                        {\r\n                            {\r\n                               'Combo' : <table id=\"couponWinningCompositeSystem\" >\r\n                                   <tbody>\r\n                                   <tr>\r\n                                       <td colSpan=\"2\">\r\n                                           Stake <span id=\"totalStake\">{coupon.stake || 0}</span>\r\n                                       </td>\r\n                                   </tr>\r\n                                   <tr>\r\n                                       <td className=\"colored\" colSpan=\"2\">Potential Winnings</td>\r\n                                   </tr>\r\n                                   <tr>\r\n                                       <td>Min Odd <span className=\"minodd\">{coupon.minOdds}</span></td>\r\n                                       <td>Max Odd <span className=\"maxodd\">{coupon.maxOdds}</span></td>\r\n                                   </tr>\r\n                                   <tr>\r\n                                       <td>Mn Bonus <span id=\"minBonus\">{formatNumber(coupon.minBonus)}</span></td>\r\n                                       <td>Mx Bonus <span id=\"maxBonus\">{formatNumber(coupon.maxBonus)}</span></td>\r\n                                   </tr>\r\n                                   <tr>\r\n                                       <td>Mn Win <span id=\"minWin\">{formatNumber(coupon.minWin)}</span></td>\r\n                                       <td>Mx Win <span id=\"maxWin\">{formatNumber(coupon.maxWin)}</span></td>\r\n                                   </tr>\r\n                                   </tbody>\r\n                               </table>,\r\n                               'Split' : <table id=\"couponWinningCompositeIntegral\"  >\r\n                                   <tbody>\r\n                                   {/*<tr>\r\n                                       <td colSpan=\"2\">\r\n                                           Total stake <span id=\"totalStake\">{coupon.totalStake || 0}</span>\r\n                                       </td>\r\n                                   </tr>\r\n                                   <tr>\r\n                                       <td colSpan=\"2\">\r\n                                           Excise Duty <span id=\"totalStake\">{coupon.exciseDuty || 0}</span>\r\n                                       </td>\r\n                                   </tr>*/}\r\n                                   <tr>\r\n                                       <td colSpan=\"2\">\r\n                                        stake <span id=\"totalStake\">{coupon.stake || 0}</span>\r\n                                       </td>\r\n                                   </tr>\r\n                                   <tr>\r\n                                       <td className=\"colored\" colSpan=\"2\">Potential Winnings</td>\r\n                                   </tr>\r\n                                   <tr>\r\n                                       <td>Min Odd <span id=\"minoddIntegral\">{coupon.minOdds?.toFixed(2)}</span></td>\r\n                                       <td>Max Odd <span id=\"maxoddIntegral\">{coupon.maxOdds?.toFixed(2)}</span></td>\r\n                                   </tr>\r\n                                   <tr>\r\n                                       <td>Mn Bonus <span id=\"minBonusIntegral\">{formatNumber(coupon.minBonus)}</span></td>\r\n                                       <td>Mx Bonus <span id=\"maxBonusIntegral\">{formatNumber(coupon.maxBonus)}</span></td>\r\n                                   </tr>\r\n                                   <tr>\r\n                                       <td>Mn Win <span id=\"minWinIntegral\">{formatNumber(coupon.minGrossWin)}</span></td>\r\n                                       <td>Mx Win <span id=\"maxWinIntegral\">{formatNumber(coupon.grossWin)}</span></td>\r\n                                   </tr>\r\n                                   {/* <tr>\r\n                                       <td colSpan=\"2\">Winning Tax Percentage :<span id=\"taxPercentageIntegral\">20%</span></td>\r\n                                   </tr>\r\n                                   <tr>\r\n                                       <td colSpan=\"2\">WTH <span id=\"taxOnWinIntegral\">{formatNumber(coupon.wthTax)}</span></td>\r\n                                   </tr>\r\n                                   <tr>\r\n\r\n                                       <td colSpan=\"2\">Max Win Full<span id=\"maxWinIntegralFull\">0.00</span></td>\r\n                                   </tr>*/}\r\n                                   </tbody>\r\n                               </table>\r\n                            }[coupon.bet_type] || <table id=\"couponWinningSimple\">\r\n                                <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        Stake <span id=\"totalStake\">{coupon.totalStake || 0}</span>\r\n                                    </td>\r\n                                    <td>\r\n                                        Odds <span className=\"maxodd\">{coupon.totalOdds}</span>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"colored\" colSpan=\"2\">Potential Winnings</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td colSpan=\"2\">Bonus <span id=\"multipleBonus\">{formatNumber(coupon.maxBonus)}</span></td>\r\n                                </tr>\r\n\r\n                                </tbody>\r\n                            </table>\r\n                        }\r\n                    </div>\r\n\r\n                    <div>\r\n                        <table>\r\n                            <tbody>\r\n                            <tr>\r\n                                <td colSpan=\"4\" className=\"allow-changes\">\r\n                                    <div className=\"check\">\r\n                                        <input type=\"checkbox\" id=\"allowChangeOdds\" />\r\n                                        <input type=\"hidden\" id=\"livello\" value=\"\" />\r\n                                        <span className=\"checkmark\"></span>\r\n                                    </div>\r\n                                    <span>Allow Odds Changes</span>\r\n                                </td>\r\n                            </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                    <div className=\"totals\">\r\n                        <div className=\"winning\">\r\n                            <div className=\"coupon-potential-winning-label\">\r\n                                Potential Net Win\r\n                            </div>\r\n                            {SportsbookGlobalVariable.Currency} <span id=\"potentialWin\">{formatNumber(coupon.maxWin)}</span>\r\n                            {/*                            <span id=\"potentialWinIntegral\">42825.83</span>\r\n                            <span id=\"potentialWinSystem\" >0</span>*/}\r\n                        </div>\r\n                        {user && user?.bonus_balance >= coupon.stake && parseFloat(coupon.totalOdds) >= process.env.REACT_APP_MIN_BONUS_ODD\r\n                        && coupon.bet_type !== 'Split' && coupon.bet_type !== 'Combo' &&\r\n                        <div className=\"bonus-btn\">\r\n                            <a href=\"javascript:void(0)\" className=\"genBtn\" onClick={async (e) => {\r\n                                await dispatch({type: SET_USE_BONUS})\r\n                                dispatch({type: CONFIRM_BET, payload: true})\r\n                            }}>USE BONUS</a>\r\n                        </div> }\r\n                        <div className=\"buttons\">\r\n                            <div className=\"cancel\" onClick={() => dispatch({type: CANCEL_BET})}>Cancel</div>\r\n                            <div className=\"book\" onClick={(e) => dispatch(placeBet(e, 'booking'))}>Book</div>\r\n                            <div className=\"proceed\" onClick={(e) => dispatch({type: CONFIRM_BET, payload: true})}>Proceed</div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Utils\\Combination.js",["739"],"export const Combination = (function () {\r\n    function Combination(n, k) {\r\n        if (n && k) {\r\n            if (n < 0 || k < 0)\r\n                throw new Error(\"Negative parameter in constructor\");\r\n            this.n = n;\r\n            this.k = k;\r\n            this.data = [];\r\n            for (var i = 0; i < k; i++) {\r\n                this.data[i] = i;\r\n            }\r\n        }\r\n    }\r\n    Combination.prototype.successor = function () {\r\n        if (this.data.length === 0 || this.data[0] === this.n - this.k)\r\n            return null;\r\n        var result = new Combination(this.n, this.k);\r\n        var i = 0;\r\n        for (i = 0; i < this.k; i++)\r\n            result.data[i] = this.data[i];\r\n        for (i = this.k - 1; i > 0 && result.data[i] === this.n - this.k + i;)\r\n            i--;\r\n        result.data[i]++;\r\n        for (var j = i; j < this.k - 1; j++)\r\n            result.data[j + 1] = result.data[j] + 1;\r\n        return result;\r\n    };\r\n    Combination.prototype.first = function () {\r\n        var result = new Combination(this.n, this.k);\r\n        for (var i = 0; i < result.k; ++i)\r\n            result.data[i] = i;\r\n        return result;\r\n    };\r\n    Combination.prototype.applyTo = function (array) {\r\n        if (array.length !== this.n)\r\n            throw new Error(\"Array size not equal to Combination order in ApplyTo()\");\r\n        var result = [];\r\n        for (var i = 0; i < this.k; i++) {\r\n            result[i] = array[this.data[i]];\r\n        }\r\n        return result;\r\n    };\r\n    Combination.prototype.choose = function (n, k) {\r\n        if (n < 0 || k < 0)\r\n            throw new Error(\"Invalid negative parameter in Choose()\");\r\n        if (n < k)\r\n            return 0;\r\n        if (n === k || k === 0)\r\n            return 1;\r\n        var delta = 0, iMax = 0;\r\n        if (k < n - k) {\r\n            delta = n - k;\r\n            iMax = k;\r\n        }\r\n        else {\r\n            delta = k;\r\n            iMax = n - k;\r\n        }\r\n        var result = delta + 1;\r\n        for (var i = 2; i <= iMax; ++i) {\r\n            result = (result * (delta + i)) / i;\r\n        }\r\n        return result;\r\n    };\r\n    return Combination;\r\n})();\r\n\r\nexport const FastCombination = (function () {\r\n    function FastCombination() {\r\n    }\r\n    FastCombination.prototype.create2Darray = function (rows) {\r\n        var arr = [];\r\n        for (var i = 0; i < rows; i++) {\r\n            arr[i] = [];\r\n        }\r\n        return arr;\r\n    };\r\n    FastCombination.prototype.chooseFromSets = function (setSizes, k) {\r\n        var n = setSizes.length;\r\n        if (k === 0 || k > n)\r\n            return 0;\r\n        var result = 0;\r\n        var m = this.create2Darray(k + 1);\r\n        for (var y = 1; y <= (n - k + 1); y++) {\r\n            if (y === 1) {\r\n                for (var x = 1; x <= k; x++) {\r\n                    m[x][y] = setSizes.take(x).reduce(function (product, next) { return product * next; }, 1);\r\n                    result = m[x][y];\r\n                }\r\n            }\r\n            else {\r\n                m[1][y] = setSizes.take(y).reduce(function (a, b) { return a + b; }, 0);\r\n                result = m[1][y];\r\n                for (var x = 2; x <= k; x++) {\r\n                    m[x][y] = m[x][y - 1] + m[x - 1][y] * setSizes[x + y - 2];\r\n                    result = m[x][y];\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    return FastCombination;\r\n})();","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Utils\\CalculatedCoupon.js",[],"C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Utils\\CalculatedGroup.js",[],"C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Utils\\SlotKey.js",[],"C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\Coupon\\BetTypes\\Combined.js",["740"],"import React from \"react\";\r\nimport {fastAdd, updateComboWinningsFromTotal} from \"../../../../Redux/actions\";\r\nimport {SET_COUPON_DATA} from \"../../../../Redux/types\";\r\nimport CouponCalculation from \"../../../../Utils/CouponCalculation\";\r\n// import {calculateBonus} from \"../../../../Utils/couponHelpers\";\r\nimport {formatNumber} from \"../../../../Utils/helpers\";\r\n\r\nexport const Combined = ({couponData, dispatch, globalVar, bonusList}) => {\r\n    const amounts = process.env.REACT_APP_FAST_ADD_AMOUNTS.split(',');\r\n    const couponCalculation = new CouponCalculation();\r\n\r\n    const minMaxWin = (e, combo, i) => {\r\n        let val = e.target.value\r\n        let coupondata = {...couponData};\r\n\r\n        if(val !== '' && val !== 0){\r\n            combo.Stake= val;\r\n            combo.checked = true;\r\n            if (!coupondata.Groupings) {\r\n                coupondata.Groupings = [combo];\r\n            } else {\r\n                coupondata.Groupings.push(combo);\r\n            }\r\n\r\n            const calculatedCoupon = couponCalculation.calcPotentialWins(coupondata, bonusList);\r\n            coupondata = couponCalculation.updateFromCalculatedCoupon(coupondata, calculatedCoupon);\r\n            // update combos with max win\r\n            coupondata.combos.forEach(combo => {\r\n                for (let i = 0; i < coupondata.Groupings.length; i++) {\r\n                    if (combo.Grouping === coupondata.Groupings[i].Grouping) {\r\n                        combo.minWIn = coupondata.Groupings[i].minWin;\r\n                        combo.maxWin = coupondata.Groupings[i].maxWin;\r\n                        combo.Stake  = coupondata.Groupings[i].Stake;\r\n                    }\r\n                }\r\n            })\r\n\r\n\r\n            let total = 0;\r\n\r\n            for (let x = 0; x < coupondata.combos.length; x++) {\r\n                // console.log(coupondata.combos[x].minOdds)\r\n                if(coupondata.combos[x].Stake !== undefined && coupondata.combos[x].Stake !== ''){\r\n                    total += parseFloat(coupondata.combos[x].Combinations) * parseFloat(coupondata.combos[x].Stake)\r\n\r\n                }\r\n            }\r\n\r\n            coupondata.totalStake =  total;\r\n            coupondata.exciseDuty = coupondata.totalStake * 0 / 100;\r\n            coupondata.stake = coupondata.totalStake - coupondata.exciseDuty;\r\n\r\n            return dispatch({type: SET_COUPON_DATA, payload: coupondata});\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"combination-group\">\r\n            <table id=\"tableCombination\">\r\n                <thead>\r\n                <tr>\r\n                    <th className=\"group\">Grp.</th>\r\n                    <th className=\"combination\">Com</th>\r\n                    <th className=\"stake\">Amount</th>\r\n                    <th>Pot. Win.</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody id=\"combinations\">\r\n                {couponData.combos.length > 0 && couponData.combos.map((combo, c_index) =>\r\n\r\n                    <tr key={`combo-${c_index}`}>\r\n                        <td className=\"group\">\r\n                            {combo.Grouping}\r\n                            <div className=\"check\">\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    name={`comb_${c_index}`}\r\n                                    id={`comb_${c_index}`}\r\n                                    checked={combo.checked}\r\n                                    onChange={() => dispatch(updateComboWinningsFromTotal())}\r\n                                />\r\n                                <span className=\"checkmark\" />\r\n                            </div>\r\n                        </td>\r\n                        <td className=\"combination\">{ combo.Combinations }</td>\r\n                        <td className=\"stake\">\r\n                            <input\r\n                                name={`imp_comb_${c_index}`}\r\n                                type=\"text\"\r\n                                maxLength=\"5\"\r\n                                className=\"TextBox\"\r\n                                value={combo.Stake}\r\n                                onChange={(e) => minMaxWin(e, combo, c_index)}\r\n                            />\r\n                        </td>\r\n                        <td className=\"winnings\">\r\n                            <span id={`minw_${c_index}`}>{combo.minWin ? formatNumber(combo.minWin) : 0}</span>\r\n                            <span id={`maxw_${c_index}`}>{combo.maxWin ? formatNumber(combo.maxWin) : 0}</span>\r\n                        </td>\r\n                    </tr>\r\n                )}\r\n                </tbody>\r\n                <tbody>\r\n                <tr>\r\n                    <td colSpan=\"2\" className=\"selections\">Selections: <a className=\"selectionss\">{couponData.selections.length}</a></td>\r\n                    <td colSpan=\"2\" className=\"amount\">\r\n                        <span>Amount:</span>\r\n                        <input\r\n                            id=\"stakeSystem\"\r\n                            type=\"text\"\r\n                            maxLength={5}\r\n                            value={couponData.stake}\r\n                            onChange={(e) => dispatch(updateComboWinningsFromTotal(e.target.value))} />\r\n                        <div onClick={() => dispatch(fastAdd(0))} className=\"small-button\">Clear</div>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td colSpan=\"4\">\r\n                        <div className=\"default-bets\">\r\n                            {amounts && amounts.map(amount => <div key={amount} className=\"single-bet\" onClick={() => dispatch(fastAdd(parseInt(amount)))}>{globalVar.Currency} {amount}</div>)}\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\Coupon\\BetTypes\\Split.js",["741"],"import React from \"react\";\r\nimport {calculateBonus} from \"../../../../Utils/couponHelpers\";\r\nimport {SET_COUPON_DATA} from \"../../../../Redux/types\";\r\n\r\nexport const Split = ({couponData, dispatch, globalVar, bonusList}) => {\r\n    const amounts = process.env.REACT_APP_FAST_ADD_AMOUNTS.split(',');\r\n\r\n    const updateSystemWinnings = (stake, action) => {\r\n        let coupondata = {...couponData};\r\n        coupondata.totalStake = stake;\r\n\r\n        if(stake !== '') {\r\n\r\n            coupondata.exciseDuty = coupondata.totalStake * 0 / 100;\r\n            coupondata.stake = coupondata.totalStake - coupondata.exciseDuty;\r\n            coupondata.minStake = parseFloat(stake) / coupondata.noOfCombos;\r\n\r\n            //calculate winnings\r\n            let minWinnings = parseFloat(coupondata.minOdds) * parseFloat(coupondata.minStake);\r\n            let maxWinnings = parseFloat(coupondata.maxOdds) * parseFloat(coupondata.minStake);\r\n            //calculate bonus\r\n            coupondata.minBonus = calculateBonus(minWinnings, coupondata, globalVar, bonusList);\r\n            coupondata.maxBonus = calculateBonus(maxWinnings, coupondata, globalVar, bonusList);\r\n            coupondata.minGrossWin = parseFloat(coupondata.minBonus) + minWinnings;\r\n            coupondata.minWTH = (coupondata.minGrossWin - coupondata.stake) * process.env.REACT_APP_WTH_PERC / 100;\r\n            coupondata.minWin = coupondata.minGrossWin - coupondata.minWTH;\r\n            coupondata.grossWin = parseFloat(coupondata.maxBonus) + maxWinnings;\r\n            const wthTax = (couponData.grossWin - couponData.stake) * process.env.REACT_APP_WTH_PERC / 100;\r\n            coupondata.wthTax = wthTax < 1 ? 0 : wthTax;\r\n            coupondata.maxWin = coupondata.grossWin - coupondata.wthTax;\r\n        }\r\n        return dispatch({type: SET_COUPON_DATA, payload: coupondata});\r\n\r\n    }\r\n\r\n    return (\r\n        <div data-coupon-split=\"\" className=\"combination-group\">\r\n            <table id=\"tableIntegral\">\r\n                {/*<thead>\r\n                <tr>\r\n                    <th className=\"group\">Grp.</th>\r\n                    <th className=\"combination\">Com</th>\r\n                    <th className=\"stake\">Amount</th>\r\n                    <th>Pot. Win.</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody id=\"combinationsIntegral\">\r\n                <tr>\r\n                    <td className=\"group\">5</td>\r\n                    <td className=\"combination\" id=\"integralCombination\">2</td>\r\n                    <td className=\"stake\">\r\n                        <input id=\"integralSingle\" onChange=\"calculateIntegralFromStake();\" onKeyUp=\"calculateIntegralFromStake();\" type=\"text\" value=\"undefined\" />\r\n                        <input type=\"hidden\" id=\"intMinBonus\" value=\"12.4505\" />\r\n                        <input type=\"hidden\" id=\"intMaxBonus\" value=\"40.786500000000004\" />\r\n                        <input type=\"hidden\" id=\"intMinOdd\" value=\"249.01\" />\r\n                        <input type=\"hidden\" id=\"intMaxOdd\" value=\"815.73\" />\r\n                    </td>\r\n                    <td className=\"winnings\">\r\n                        <span id=\"intVinPotMin\">13073.03</span>\r\n                        <span id=\"intVinPotMax\">42825.83</span>\r\n                    </td>\r\n                </tr>\r\n                </tbody>*/}\r\n                <tbody>\r\n                <tr>\r\n                    <td colSpan=\"2\" className=\"selections\">Selections: <a className=\"selectionss\">{couponData.noOfCombos}</a></td>\r\n                    <td colSpan=\"2\" className=\"amount\">\r\n                        <span>Amount:</span>\r\n                        <input\r\n                            id=\"stakeIntegral\"\r\n                            type=\"text\"\r\n                            value={couponData.stake}\r\n                            maxLength=\"5\"\r\n                            onChange={(e) => updateSystemWinnings(e.target.value,'max')} />\r\n                        <div onClick=\"preReset_int();\" className=\"small-button\">Clear</div>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td colSpan=\"4\">\r\n                        <div className=\"default-bets\">\r\n                            {amounts && amounts.map(amount => <div key={amount} className=\"single-bet\" onClick={() => dispatch(updateSystemWinnings(parseInt(amount), 'max'))}>\r\n                                {amount}\r\n                            </div>)}\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\Components\\Coupon\\BetTypes\\Multiple.js",["742"],"import {fastAdd, updateWinnings} from \"../../../../Redux/actions\";\r\nimport React from \"react\";\r\n\r\nexport const Multiple = ({couponData, dispatch, globalVar}) => {\r\n    const amounts = process.env.REACT_APP_FAST_ADD_AMOUNTS.split(',');\r\n\r\n    return (\r\n        <div className=\"combination-group\">\r\n            <table id=\"tableMultiple\">\r\n                <tbody>\r\n                <tr>\r\n                    <td colSpan=\"2\" className=\"selections\">Selections: <a className=\"selectionss\">{couponData.selections.length}</a></td>\r\n                    <td colSpan=\"2\" className=\"amount\">\r\n                        <span>Amount:</span>\r\n                        <input\r\n                            id=\"stakeMultiple\"\r\n                            type=\"text\"\r\n                            onChange={(e) => dispatch(updateWinnings(e.target.value))}\r\n                            value={couponData.totalStake} />\r\n                        <div onClick={() => dispatch(fastAdd(0))} className=\"small-button\">Clear</div>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td colSpan=\"4\">\r\n                        <div className=\"default-bets\">\r\n                            {amounts && amounts.map(amount => <div key={amount} className=\"single-bet\" onClick={() => dispatch(fastAdd(parseInt(amount)))}> {amount}</div>)}\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\PoolFixtures.js",["743"],"C:\\xampp\\htdocs\\sportsbook\\betteck\\betteck-web\\src\\Views\\WeeklyCoupon.js",["744","745","746","747"],{"ruleId":"748","replacedBy":"749"},{"ruleId":"750","replacedBy":"751"},{"ruleId":"752","severity":1,"message":"753","line":62,"column":11,"nodeType":"754","messageId":"755","endLine":62,"endColumn":27},{"ruleId":"752","severity":1,"message":"756","line":62,"column":29,"nodeType":"754","messageId":"755","endLine":62,"endColumn":46},{"ruleId":"757","severity":1,"message":"758","line":82,"column":6,"nodeType":"759","endLine":82,"endColumn":23,"suggestions":"760"},{"ruleId":"761","severity":1,"message":"762","line":95,"column":33,"nodeType":"763","endLine":95,"endColumn":109},{"ruleId":"764","severity":1,"message":"765","line":95,"column":41,"nodeType":"766","messageId":"767","endLine":95,"endColumn":55},{"ruleId":"768","severity":1,"message":"769","line":73,"column":61,"nodeType":"763","endLine":73,"endColumn":118},{"ruleId":"761","severity":1,"message":"770","line":73,"column":61,"nodeType":"763","endLine":73,"endColumn":118},{"ruleId":"761","severity":1,"message":"762","line":97,"column":37,"nodeType":"763","endLine":98,"endColumn":60},{"ruleId":"764","severity":1,"message":"765","line":98,"column":45,"nodeType":"766","messageId":"767","endLine":98,"endColumn":59},{"ruleId":"761","severity":1,"message":"770","line":25,"column":37,"nodeType":"763","endLine":25,"endColumn":124},{"ruleId":"771","severity":1,"message":"772","line":26,"column":41,"nodeType":"763","endLine":26,"endColumn":107},{"ruleId":"761","severity":1,"message":"770","line":88,"column":29,"nodeType":"763","endLine":88,"endColumn":85},{"ruleId":"757","severity":1,"message":"773","line":57,"column":8,"nodeType":"759","endLine":57,"endColumn":10,"suggestions":"774"},{"ruleId":"757","severity":1,"message":"775","line":75,"column":8,"nodeType":"759","endLine":75,"endColumn":25,"suggestions":"776"},{"ruleId":"761","severity":1,"message":"762","line":282,"column":33,"nodeType":"763","endLine":284,"endColumn":98},{"ruleId":"764","severity":1,"message":"765","line":282,"column":41,"nodeType":"766","messageId":"767","endLine":282,"endColumn":55},{"ruleId":"761","severity":1,"message":"762","line":327,"column":53,"nodeType":"763","endLine":327,"endColumn":78},{"ruleId":"761","severity":1,"message":"762","line":337,"column":45,"nodeType":"763","endLine":341,"endColumn":46},{"ruleId":"764","severity":1,"message":"765","line":337,"column":53,"nodeType":"766","messageId":"767","endLine":337,"endColumn":67},{"ruleId":"757","severity":1,"message":"777","line":29,"column":9,"nodeType":"759","endLine":29,"endColumn":26,"suggestions":"778"},{"ruleId":"752","severity":1,"message":"779","line":1,"column":16,"nodeType":"754","messageId":"755","endLine":1,"endColumn":27},{"ruleId":"752","severity":1,"message":"780","line":8,"column":9,"nodeType":"754","messageId":"755","endLine":8,"endColumn":27},{"ruleId":"781","severity":1,"message":"782","line":64,"column":41,"nodeType":"763","endLine":65,"endColumn":80},{"ruleId":"752","severity":1,"message":"783","line":12,"column":23,"nodeType":"754","messageId":"755","endLine":12,"endColumn":28},{"ruleId":"752","severity":1,"message":"784","line":1,"column":26,"nodeType":"754","messageId":"755","endLine":1,"endColumn":34},{"ruleId":"752","severity":1,"message":"785","line":12,"column":11,"nodeType":"754","messageId":"755","endLine":12,"endColumn":19},{"ruleId":"752","severity":1,"message":"786","line":44,"column":30,"nodeType":"754","messageId":"755","endLine":44,"endColumn":39},{"ruleId":"757","severity":1,"message":"777","line":55,"column":8,"nodeType":"759","endLine":55,"endColumn":25,"suggestions":"787"},{"ruleId":"761","severity":1,"message":"762","line":65,"column":29,"nodeType":"763","endLine":65,"endColumn":69},{"ruleId":"761","severity":1,"message":"762","line":71,"column":77,"nodeType":"763","endLine":71,"endColumn":114},{"ruleId":"761","severity":1,"message":"762","line":235,"column":53,"nodeType":"763","endLine":235,"endColumn":65},{"ruleId":"752","severity":1,"message":"788","line":16,"column":20,"nodeType":"754","messageId":"755","endLine":16,"endColumn":29},{"ruleId":"757","severity":1,"message":"777","line":35,"column":8,"nodeType":"759","endLine":35,"endColumn":18,"suggestions":"789"},{"ruleId":"752","severity":1,"message":"790","line":82,"column":35,"nodeType":"754","messageId":"755","endLine":82,"endColumn":41},{"ruleId":"791","severity":1,"message":"792","line":30,"column":23,"nodeType":"766","messageId":"793","endLine":30,"endColumn":24,"suggestions":"794"},{"ruleId":"791","severity":1,"message":"792","line":31,"column":19,"nodeType":"766","messageId":"793","endLine":31,"endColumn":20,"suggestions":"795"},{"ruleId":"791","severity":1,"message":"792","line":31,"column":21,"nodeType":"766","messageId":"793","endLine":31,"endColumn":22,"suggestions":"796"},{"ruleId":"797","severity":1,"message":"798","line":148,"column":68,"nodeType":"799","messageId":"800","endLine":176,"endColumn":14},{"ruleId":"771","severity":1,"message":"772","line":8,"column":20,"nodeType":"763","endLine":8,"endColumn":89},{"ruleId":"771","severity":1,"message":"772","line":9,"column":20,"nodeType":"763","endLine":9,"endColumn":89},{"ruleId":"771","severity":1,"message":"772","line":10,"column":20,"nodeType":"763","endLine":10,"endColumn":89},{"ruleId":"771","severity":1,"message":"772","line":11,"column":20,"nodeType":"763","endLine":11,"endColumn":89},{"ruleId":"771","severity":1,"message":"772","line":12,"column":20,"nodeType":"763","endLine":12,"endColumn":89},{"ruleId":"801","severity":1,"message":"802","line":128,"column":17,"nodeType":"803","messageId":"804","endLine":128,"endColumn":23},{"ruleId":"801","severity":1,"message":"802","line":137,"column":17,"nodeType":"803","messageId":"804","endLine":137,"endColumn":23},{"ruleId":"761","severity":1,"message":"770","line":83,"column":33,"nodeType":"763","endLine":83,"endColumn":64},{"ruleId":"761","severity":1,"message":"770","line":86,"column":33,"nodeType":"763","endLine":86,"endColumn":74},{"ruleId":"761","severity":1,"message":"770","line":92,"column":33,"nodeType":"763","endLine":92,"endColumn":64},{"ruleId":"752","severity":1,"message":"783","line":11,"column":23,"nodeType":"754","messageId":"755","endLine":11,"endColumn":28},{"ruleId":"761","severity":1,"message":"762","line":33,"column":21,"nodeType":"763","endLine":33,"endColumn":34},{"ruleId":"757","severity":1,"message":"805","line":50,"column":8,"nodeType":"759","endLine":50,"endColumn":27,"suggestions":"806"},{"ruleId":"757","severity":1,"message":"807","line":54,"column":8,"nodeType":"759","endLine":54,"endColumn":21,"suggestions":"808"},{"ruleId":"757","severity":1,"message":"805","line":97,"column":8,"nodeType":"759","endLine":97,"endColumn":20,"suggestions":"809"},{"ruleId":"757","severity":1,"message":"810","line":28,"column":8,"nodeType":"759","endLine":28,"endColumn":11,"suggestions":"811"},{"ruleId":"761","severity":1,"message":"762","line":56,"column":53,"nodeType":"763","endLine":56,"endColumn":76},{"ruleId":"764","severity":1,"message":"765","line":56,"column":61,"nodeType":"766","messageId":"767","endLine":56,"endColumn":75},{"ruleId":"761","severity":1,"message":"762","line":59,"column":53,"nodeType":"763","endLine":59,"endColumn":76},{"ruleId":"764","severity":1,"message":"765","line":59,"column":61,"nodeType":"766","messageId":"767","endLine":59,"endColumn":75},{"ruleId":"757","severity":1,"message":"777","line":68,"column":8,"nodeType":"759","endLine":68,"endColumn":15,"suggestions":"812"},{"ruleId":"757","severity":1,"message":"813","line":22,"column":8,"nodeType":"759","endLine":22,"endColumn":28,"suggestions":"814"},{"ruleId":"757","severity":1,"message":"815","line":32,"column":8,"nodeType":"759","endLine":32,"endColumn":17,"suggestions":"816"},{"ruleId":"761","severity":1,"message":"762","line":54,"column":45,"nodeType":"763","endLine":54,"endColumn":68},{"ruleId":"764","severity":1,"message":"765","line":54,"column":53,"nodeType":"766","messageId":"767","endLine":54,"endColumn":67},{"ruleId":"761","severity":1,"message":"762","line":57,"column":45,"nodeType":"763","endLine":57,"endColumn":68},{"ruleId":"764","severity":1,"message":"765","line":57,"column":53,"nodeType":"766","messageId":"767","endLine":57,"endColumn":67},{"ruleId":"761","severity":1,"message":"762","line":60,"column":45,"nodeType":"763","endLine":60,"endColumn":68},{"ruleId":"764","severity":1,"message":"765","line":60,"column":53,"nodeType":"766","messageId":"767","endLine":60,"endColumn":67},{"ruleId":"761","severity":1,"message":"762","line":63,"column":45,"nodeType":"763","endLine":63,"endColumn":68},{"ruleId":"764","severity":1,"message":"765","line":63,"column":53,"nodeType":"766","messageId":"767","endLine":63,"endColumn":67},{"ruleId":"761","severity":1,"message":"762","line":66,"column":45,"nodeType":"763","endLine":66,"endColumn":68},{"ruleId":"764","severity":1,"message":"765","line":66,"column":53,"nodeType":"766","messageId":"767","endLine":66,"endColumn":67},{"ruleId":"761","severity":1,"message":"762","line":74,"column":53,"nodeType":"763","endLine":78,"endColumn":54},{"ruleId":"764","severity":1,"message":"765","line":74,"column":61,"nodeType":"766","messageId":"767","endLine":74,"endColumn":75},{"ruleId":"757","severity":1,"message":"817","line":33,"column":8,"nodeType":"759","endLine":33,"endColumn":10,"suggestions":"818"},{"ruleId":"761","severity":1,"message":"770","line":247,"column":37,"nodeType":"763","endLine":247,"endColumn":83},{"ruleId":"761","severity":1,"message":"770","line":248,"column":37,"nodeType":"763","endLine":248,"endColumn":84},{"ruleId":"757","severity":1,"message":"810","line":27,"column":8,"nodeType":"759","endLine":27,"endColumn":10,"suggestions":"819"},{"ruleId":"752","severity":1,"message":"783","line":7,"column":18,"nodeType":"754","messageId":"755","endLine":7,"endColumn":23},{"ruleId":"752","severity":1,"message":"820","line":18,"column":12,"nodeType":"754","messageId":"755","endLine":18,"endColumn":19},{"ruleId":"757","severity":1,"message":"821","line":39,"column":8,"nodeType":"759","endLine":39,"endColumn":10,"suggestions":"822"},{"ruleId":"757","severity":1,"message":"821","line":48,"column":8,"nodeType":"759","endLine":48,"endColumn":10,"suggestions":"823"},{"ruleId":"757","severity":1,"message":"824","line":87,"column":8,"nodeType":"759","endLine":87,"endColumn":17,"suggestions":"825"},{"ruleId":"757","severity":1,"message":"826","line":61,"column":8,"nodeType":"759","endLine":61,"endColumn":16,"suggestions":"827"},{"ruleId":"761","severity":1,"message":"770","line":129,"column":65,"nodeType":"763","endLine":129,"endColumn":87},{"ruleId":"757","severity":1,"message":"828","line":73,"column":8,"nodeType":"759","endLine":73,"endColumn":10,"suggestions":"829"},{"ruleId":"752","severity":1,"message":"830","line":6,"column":36,"nodeType":"754","messageId":"755","endLine":6,"endColumn":46},{"ruleId":"757","severity":1,"message":"831","line":59,"column":8,"nodeType":"759","endLine":59,"endColumn":10,"suggestions":"832"},{"ruleId":"761","severity":1,"message":"762","line":349,"column":53,"nodeType":"763","endLine":350,"endColumn":65},{"ruleId":"771","severity":1,"message":"772","line":351,"column":57,"nodeType":"763","endLine":352,"endColumn":88},{"ruleId":"761","severity":1,"message":"762","line":362,"column":53,"nodeType":"763","endLine":362,"endColumn":84},{"ruleId":"752","severity":1,"message":"833","line":24,"column":12,"nodeType":"754","messageId":"755","endLine":24,"endColumn":21},{"ruleId":"752","severity":1,"message":"834","line":25,"column":12,"nodeType":"754","messageId":"755","endLine":25,"endColumn":18},{"ruleId":"757","severity":1,"message":"835","line":48,"column":8,"nodeType":"759","endLine":48,"endColumn":10,"suggestions":"836"},{"ruleId":"757","severity":1,"message":"837","line":52,"column":8,"nodeType":"759","endLine":52,"endColumn":10,"suggestions":"838"},{"ruleId":"757","severity":1,"message":"831","line":59,"column":8,"nodeType":"759","endLine":59,"endColumn":10,"suggestions":"839"},{"ruleId":"761","severity":1,"message":"762","line":349,"column":53,"nodeType":"763","endLine":350,"endColumn":65},{"ruleId":"771","severity":1,"message":"772","line":351,"column":57,"nodeType":"763","endLine":352,"endColumn":88},{"ruleId":"761","severity":1,"message":"762","line":362,"column":53,"nodeType":"763","endLine":362,"endColumn":84},{"ruleId":"840","severity":1,"message":"841","line":85,"column":9,"nodeType":"842","messageId":"843","endLine":117,"endColumn":10},{"ruleId":"757","severity":1,"message":"844","line":128,"column":8,"nodeType":"759","endLine":128,"endColumn":10,"suggestions":"845"},{"ruleId":"761","severity":1,"message":"762","line":169,"column":49,"nodeType":"763","endLine":171,"endColumn":80},{"ruleId":"752","severity":1,"message":"780","line":6,"column":5,"nodeType":"754","messageId":"755","endLine":6,"endColumn":23},{"ruleId":"757","severity":1,"message":"846","line":39,"column":8,"nodeType":"759","endLine":39,"endColumn":25,"suggestions":"847"},{"ruleId":"771","severity":1,"message":"772","line":120,"column":21,"nodeType":"763","endLine":120,"endColumn":121},{"ruleId":"781","severity":1,"message":"782","line":184,"column":33,"nodeType":"763","endLine":186,"endColumn":213},{"ruleId":"761","severity":1,"message":"762","line":212,"column":33,"nodeType":"763","endLine":212,"endColumn":85},{"ruleId":"761","severity":1,"message":"762","line":22,"column":70,"nodeType":"763","endLine":22,"endColumn":108},{"ruleId":"761","severity":1,"message":"762","line":23,"column":70,"nodeType":"763","endLine":23,"endColumn":128},{"ruleId":"761","severity":1,"message":"762","line":25,"column":70,"nodeType":"763","endLine":25,"endColumn":82},{"ruleId":"761","severity":1,"message":"762","line":26,"column":70,"nodeType":"763","endLine":26,"endColumn":82},{"ruleId":"761","severity":1,"message":"762","line":27,"column":70,"nodeType":"763","endLine":27,"endColumn":130},{"ruleId":"761","severity":1,"message":"762","line":71,"column":59,"nodeType":"763","endLine":71,"endColumn":129},{"ruleId":"761","severity":1,"message":"762","line":77,"column":59,"nodeType":"763","endLine":77,"endColumn":127},{"ruleId":"761","severity":1,"message":"762","line":78,"column":59,"nodeType":"763","endLine":78,"endColumn":116},{"ruleId":"752","severity":1,"message":"783","line":16,"column":23,"nodeType":"754","messageId":"755","endLine":16,"endColumn":28},{"ruleId":"761","severity":1,"message":"762","line":28,"column":44,"nodeType":"763","endLine":28,"endColumn":143},{"ruleId":"764","severity":1,"message":"765","line":28,"column":52,"nodeType":"766","messageId":"767","endLine":28,"endColumn":66},{"ruleId":"761","severity":1,"message":"762","line":63,"column":17,"nodeType":"763","endLine":63,"endColumn":48},{"ruleId":"752","severity":1,"message":"783","line":17,"column":27,"nodeType":"754","messageId":"755","endLine":17,"endColumn":32},{"ruleId":"757","severity":1,"message":"805","line":33,"column":8,"nodeType":"759","endLine":33,"endColumn":22,"suggestions":"848"},{"ruleId":"752","severity":1,"message":"849","line":65,"column":11,"nodeType":"754","messageId":"755","endLine":65,"endColumn":15},{"ruleId":"761","severity":1,"message":"762","line":49,"column":25,"nodeType":"763","endLine":49,"endColumn":136},{"ruleId":"764","severity":1,"message":"765","line":49,"column":33,"nodeType":"766","messageId":"767","endLine":49,"endColumn":47},{"ruleId":"752","severity":1,"message":"850","line":2,"column":9,"nodeType":"754","messageId":"755","endLine":2,"endColumn":16},{"ruleId":"752","severity":1,"message":"851","line":2,"column":18,"nodeType":"754","messageId":"755","endLine":2,"endColumn":33},{"ruleId":"752","severity":1,"message":"852","line":3,"column":9,"nodeType":"754","messageId":"755","endLine":3,"endColumn":19},{"ruleId":"752","severity":1,"message":"853","line":4,"column":9,"nodeType":"754","messageId":"755","endLine":4,"endColumn":13},{"ruleId":"752","severity":1,"message":"854","line":6,"column":9,"nodeType":"754","messageId":"755","endLine":6,"endColumn":16},{"ruleId":"752","severity":1,"message":"855","line":12,"column":12,"nodeType":"754","messageId":"755","endLine":12,"endColumn":16},{"ruleId":"752","severity":1,"message":"856","line":12,"column":18,"nodeType":"754","messageId":"755","endLine":12,"endColumn":25},{"ruleId":"752","severity":1,"message":"857","line":14,"column":12,"nodeType":"754","messageId":"755","endLine":14,"endColumn":18},{"ruleId":"761","severity":1,"message":"762","line":105,"column":33,"nodeType":"763","endLine":108,"endColumn":36},{"ruleId":"764","severity":1,"message":"765","line":105,"column":41,"nodeType":"766","messageId":"767","endLine":105,"endColumn":55},{"ruleId":"757","severity":1,"message":"858","line":39,"column":8,"nodeType":"759","endLine":39,"endColumn":17,"suggestions":"859"},{"ruleId":"761","severity":1,"message":"770","line":59,"column":17,"nodeType":"763","endLine":59,"endColumn":20},{"ruleId":"801","severity":1,"message":"802","line":395,"column":13,"nodeType":"803","messageId":"804","endLine":395,"endColumn":19},{"ruleId":"801","severity":1,"message":"802","line":398,"column":13,"nodeType":"803","messageId":"804","endLine":398,"endColumn":19},{"ruleId":"801","severity":1,"message":"802","line":401,"column":13,"nodeType":"803","messageId":"804","endLine":401,"endColumn":19},{"ruleId":"801","severity":1,"message":"802","line":404,"column":13,"nodeType":"803","messageId":"804","endLine":404,"endColumn":19},{"ruleId":"801","severity":1,"message":"802","line":407,"column":13,"nodeType":"803","messageId":"804","endLine":407,"endColumn":19},{"ruleId":"801","severity":1,"message":"802","line":410,"column":13,"nodeType":"803","messageId":"804","endLine":410,"endColumn":19},{"ruleId":"801","severity":1,"message":"802","line":413,"column":13,"nodeType":"803","messageId":"804","endLine":413,"endColumn":19},{"ruleId":"801","severity":1,"message":"802","line":416,"column":13,"nodeType":"803","messageId":"804","endLine":416,"endColumn":19},{"ruleId":"801","severity":1,"message":"802","line":419,"column":13,"nodeType":"803","messageId":"804","endLine":419,"endColumn":19},{"ruleId":"801","severity":1,"message":"802","line":422,"column":13,"nodeType":"803","messageId":"804","endLine":422,"endColumn":19},{"ruleId":"801","severity":1,"message":"802","line":429,"column":13,"nodeType":"803","messageId":"804","endLine":429,"endColumn":19},{"ruleId":"801","severity":1,"message":"802","line":432,"column":13,"nodeType":"803","messageId":"804","endLine":432,"endColumn":19},{"ruleId":"801","severity":1,"message":"802","line":437,"column":13,"nodeType":"803","messageId":"804","endLine":437,"endColumn":19},{"ruleId":"801","severity":1,"message":"802","line":440,"column":13,"nodeType":"803","messageId":"804","endLine":440,"endColumn":19},{"ruleId":"801","severity":1,"message":"802","line":443,"column":13,"nodeType":"803","messageId":"804","endLine":443,"endColumn":19},{"ruleId":"801","severity":1,"message":"802","line":446,"column":13,"nodeType":"803","messageId":"804","endLine":446,"endColumn":19},{"ruleId":"752","severity":1,"message":"860","line":12,"column":21,"nodeType":"754","messageId":"755","endLine":12,"endColumn":31},{"ruleId":"768","severity":1,"message":"769","line":47,"column":25,"nodeType":"763","endLine":47,"endColumn":103},{"ruleId":"761","severity":1,"message":"770","line":47,"column":25,"nodeType":"763","endLine":47,"endColumn":103},{"ruleId":"768","severity":1,"message":"769","line":48,"column":25,"nodeType":"763","endLine":48,"endColumn":53},{"ruleId":"761","severity":1,"message":"770","line":48,"column":25,"nodeType":"763","endLine":48,"endColumn":53},{"ruleId":"768","severity":1,"message":"769","line":49,"column":25,"nodeType":"763","endLine":49,"endColumn":53},{"ruleId":"761","severity":1,"message":"770","line":49,"column":25,"nodeType":"763","endLine":49,"endColumn":53},{"ruleId":"768","severity":1,"message":"769","line":50,"column":25,"nodeType":"763","endLine":50,"endColumn":54},{"ruleId":"761","severity":1,"message":"770","line":50,"column":25,"nodeType":"763","endLine":50,"endColumn":54},{"ruleId":"761","severity":1,"message":"770","line":56,"column":29,"nodeType":"763","endLine":56,"endColumn":47},{"ruleId":"761","severity":1,"message":"770","line":59,"column":29,"nodeType":"763","endLine":59,"endColumn":32},{"ruleId":"761","severity":1,"message":"770","line":62,"column":29,"nodeType":"763","endLine":62,"endColumn":33},{"ruleId":"757","severity":1,"message":"861","line":29,"column":8,"nodeType":"759","endLine":29,"endColumn":14,"suggestions":"862"},{"ruleId":"761","severity":1,"message":"762","line":48,"column":33,"nodeType":"763","endLine":48,"endColumn":89},{"ruleId":"764","severity":1,"message":"765","line":48,"column":41,"nodeType":"766","messageId":"767","endLine":48,"endColumn":55},{"ruleId":"771","severity":1,"message":"772","line":220,"column":45,"nodeType":"763","endLine":222,"endColumn":82},{"ruleId":"771","severity":1,"message":"772","line":227,"column":45,"nodeType":"763","endLine":229,"endColumn":82},{"ruleId":"771","severity":1,"message":"772","line":235,"column":45,"nodeType":"763","endLine":237,"endColumn":82},{"ruleId":"771","severity":1,"message":"772","line":242,"column":45,"nodeType":"763","endLine":244,"endColumn":82},{"ruleId":"771","severity":1,"message":"772","line":249,"column":45,"nodeType":"763","endLine":251,"endColumn":82},{"ruleId":"752","severity":1,"message":"863","line":9,"column":5,"nodeType":"754","messageId":"755","endLine":9,"endColumn":12},{"ruleId":"752","severity":1,"message":"783","line":22,"column":18,"nodeType":"754","messageId":"755","endLine":22,"endColumn":23},{"ruleId":"761","severity":1,"message":"770","line":39,"column":25,"nodeType":"763","endLine":42,"endColumn":26},{"ruleId":"768","severity":1,"message":"769","line":78,"column":49,"nodeType":"763","endLine":78,"endColumn":129},{"ruleId":"761","severity":1,"message":"762","line":78,"column":49,"nodeType":"763","endLine":78,"endColumn":129},{"ruleId":"764","severity":1,"message":"765","line":78,"column":112,"nodeType":"766","messageId":"767","endLine":78,"endColumn":126},{"ruleId":"768","severity":1,"message":"769","line":79,"column":49,"nodeType":"763","endLine":79,"endColumn":85},{"ruleId":"761","severity":1,"message":"762","line":79,"column":49,"nodeType":"763","endLine":79,"endColumn":85},{"ruleId":"752","severity":1,"message":"864","line":6,"column":14,"nodeType":"754","messageId":"755","endLine":6,"endColumn":22},{"ruleId":"752","severity":1,"message":"783","line":25,"column":23,"nodeType":"754","messageId":"755","endLine":25,"endColumn":28},{"ruleId":"761","severity":1,"message":"762","line":49,"column":21,"nodeType":"763","endLine":49,"endColumn":33},{"ruleId":"768","severity":1,"message":"769","line":106,"column":49,"nodeType":"763","endLine":108,"endColumn":63},{"ruleId":"761","severity":1,"message":"762","line":106,"column":49,"nodeType":"763","endLine":108,"endColumn":63},{"ruleId":"768","severity":1,"message":"769","line":109,"column":49,"nodeType":"763","endLine":109,"endColumn":86},{"ruleId":"761","severity":1,"message":"762","line":109,"column":49,"nodeType":"763","endLine":109,"endColumn":86},{"ruleId":"757","severity":1,"message":"865","line":36,"column":8,"nodeType":"759","endLine":36,"endColumn":10,"suggestions":"866"},{"ruleId":"761","severity":1,"message":"762","line":212,"column":65,"nodeType":"763","endLine":212,"endColumn":110},{"ruleId":"764","severity":1,"message":"765","line":212,"column":73,"nodeType":"766","messageId":"767","endLine":212,"endColumn":87},{"ruleId":"761","severity":1,"message":"762","line":242,"column":65,"nodeType":"763","endLine":242,"endColumn":110},{"ruleId":"764","severity":1,"message":"765","line":242,"column":73,"nodeType":"766","messageId":"767","endLine":242,"endColumn":87},{"ruleId":"761","severity":1,"message":"762","line":283,"column":65,"nodeType":"763","endLine":283,"endColumn":110},{"ruleId":"764","severity":1,"message":"765","line":283,"column":73,"nodeType":"766","messageId":"767","endLine":283,"endColumn":87},{"ruleId":"757","severity":1,"message":"828","line":72,"column":8,"nodeType":"759","endLine":72,"endColumn":10,"suggestions":"867"},{"ruleId":"761","severity":1,"message":"762","line":109,"column":73,"nodeType":"763","endLine":112,"endColumn":77},{"ruleId":"764","severity":1,"message":"765","line":109,"column":81,"nodeType":"766","messageId":"767","endLine":109,"endColumn":95},{"ruleId":"771","severity":1,"message":"772","line":71,"column":73,"nodeType":"763","endLine":71,"endColumn":138},{"ruleId":"752","severity":1,"message":"868","line":8,"column":8,"nodeType":"754","messageId":"755","endLine":8,"endColumn":14},{"ruleId":"757","severity":1,"message":"869","line":33,"column":8,"nodeType":"759","endLine":33,"endColumn":20,"suggestions":"870"},{"ruleId":"761","severity":1,"message":"762","line":65,"column":61,"nodeType":"763","endLine":65,"endColumn":118},{"ruleId":"764","severity":1,"message":"765","line":65,"column":69,"nodeType":"766","messageId":"767","endLine":65,"endColumn":83},{"ruleId":"752","severity":1,"message":"871","line":16,"column":21,"nodeType":"754","messageId":"755","endLine":16,"endColumn":31},{"ruleId":"752","severity":1,"message":"872","line":17,"column":20,"nodeType":"754","messageId":"755","endLine":17,"endColumn":29},{"ruleId":"781","severity":1,"message":"782","line":47,"column":25,"nodeType":"763","endLine":48,"endColumn":64},{"ruleId":"752","severity":1,"message":"873","line":3,"column":13,"nodeType":"754","messageId":"755","endLine":3,"endColumn":19},{"ruleId":"768","severity":1,"message":"769","line":67,"column":21,"nodeType":"763","endLine":67,"endColumn":94},{"ruleId":"761","severity":1,"message":"762","line":67,"column":21,"nodeType":"763","endLine":67,"endColumn":94},{"ruleId":"764","severity":1,"message":"765","line":67,"column":29,"nodeType":"766","messageId":"767","endLine":67,"endColumn":43},{"ruleId":"752","severity":1,"message":"874","line":8,"column":9,"nodeType":"754","messageId":"755","endLine":8,"endColumn":14},{"ruleId":"752","severity":1,"message":"875","line":12,"column":20,"nodeType":"754","messageId":"755","endLine":12,"endColumn":30},{"ruleId":"757","severity":1,"message":"876","line":46,"column":8,"nodeType":"759","endLine":46,"endColumn":25,"suggestions":"877"},{"ruleId":"768","severity":1,"message":"769","line":56,"column":21,"nodeType":"763","endLine":56,"endColumn":101},{"ruleId":"761","severity":1,"message":"762","line":56,"column":21,"nodeType":"763","endLine":56,"endColumn":101},{"ruleId":"764","severity":1,"message":"765","line":56,"column":41,"nodeType":"766","messageId":"767","endLine":56,"endColumn":71},{"ruleId":"878","severity":1,"message":"879","line":14,"column":1,"nodeType":"880","messageId":"881","endLine":25,"endColumn":2},{"ruleId":"878","severity":1,"message":"879","line":26,"column":1,"nodeType":"880","messageId":"881","endLine":33,"endColumn":2},{"ruleId":"878","severity":1,"message":"879","line":34,"column":1,"nodeType":"880","messageId":"881","endLine":45,"endColumn":2},{"ruleId":"878","severity":1,"message":"879","line":46,"column":1,"nodeType":"880","messageId":"881","endLine":57,"endColumn":2},{"ruleId":"878","severity":1,"message":"879","line":58,"column":1,"nodeType":"880","messageId":"881","endLine":60,"endColumn":2},{"ruleId":"878","severity":1,"message":"879","line":61,"column":1,"nodeType":"880","messageId":"881","endLine":69,"endColumn":2},{"ruleId":"878","severity":1,"message":"879","line":70,"column":1,"nodeType":"880","messageId":"881","endLine":81,"endColumn":2},{"ruleId":"878","severity":1,"message":"879","line":82,"column":1,"nodeType":"880","messageId":"881","endLine":90,"endColumn":2},{"ruleId":"878","severity":1,"message":"879","line":91,"column":1,"nodeType":"880","messageId":"881","endLine":100,"endColumn":2},{"ruleId":"882","severity":1,"message":"883","line":94,"column":26,"nodeType":"884","messageId":"881","endLine":94,"endColumn":28},{"ruleId":"878","severity":1,"message":"879","line":101,"column":1,"nodeType":"880","messageId":"881","endLine":111,"endColumn":2},{"ruleId":"882","severity":1,"message":"883","line":105,"column":26,"nodeType":"884","messageId":"881","endLine":105,"endColumn":28},{"ruleId":"878","severity":1,"message":"879","line":112,"column":1,"nodeType":"880","messageId":"881","endLine":143,"endColumn":2},{"ruleId":"885","severity":1,"message":"886","line":175,"column":21,"nodeType":"754","messageId":"887","endLine":175,"endColumn":23},{"ruleId":"885","severity":1,"message":"888","line":232,"column":22,"nodeType":"754","messageId":"887","endLine":232,"endColumn":23},{"ruleId":"885","severity":1,"message":"889","line":290,"column":17,"nodeType":"754","messageId":"887","endLine":290,"endColumn":32},{"ruleId":"885","severity":1,"message":"890","line":297,"column":18,"nodeType":"754","messageId":"887","endLine":297,"endColumn":19},{"ruleId":"885","severity":1,"message":"890","line":304,"column":18,"nodeType":"754","messageId":"887","endLine":304,"endColumn":19},{"ruleId":"885","severity":1,"message":"889","line":305,"column":17,"nodeType":"754","messageId":"887","endLine":305,"endColumn":32},{"ruleId":"885","severity":1,"message":"891","line":337,"column":22,"nodeType":"754","messageId":"887","endLine":337,"endColumn":23},{"ruleId":"885","severity":1,"message":"892","line":338,"column":21,"nodeType":"754","messageId":"887","endLine":338,"endColumn":24},{"ruleId":"797","severity":1,"message":"893","line":376,"column":66,"nodeType":"894","messageId":"800","endLine":376,"endColumn":129},{"ruleId":"882","severity":1,"message":"883","line":376,"column":99,"nodeType":"884","messageId":"881","endLine":376,"endColumn":101},{"ruleId":"791","severity":1,"message":"895","line":513,"column":40,"nodeType":"766","messageId":"793","endLine":513,"endColumn":41,"suggestions":"896"},{"ruleId":"797","severity":1,"message":"893","line":561,"column":62,"nodeType":"894","messageId":"800","endLine":561,"endColumn":125},{"ruleId":"882","severity":1,"message":"883","line":561,"column":95,"nodeType":"884","messageId":"881","endLine":561,"endColumn":97},{"ruleId":"761","severity":1,"message":"762","line":213,"column":29,"nodeType":"763","endLine":216,"endColumn":32},{"ruleId":"764","severity":1,"message":"765","line":213,"column":37,"nodeType":"766","messageId":"767","endLine":213,"endColumn":57},{"ruleId":"885","severity":1,"message":"897","line":94,"column":26,"nodeType":"754","messageId":"887","endLine":94,"endColumn":27},{"ruleId":"761","severity":1,"message":"770","line":106,"column":72,"nodeType":"763","endLine":106,"endColumn":99},{"ruleId":"761","severity":1,"message":"770","line":66,"column":72,"nodeType":"763","endLine":66,"endColumn":99},{"ruleId":"761","severity":1,"message":"770","line":12,"column":72,"nodeType":"763","endLine":12,"endColumn":99},{"ruleId":"752","severity":1,"message":"783","line":19,"column":18,"nodeType":"754","messageId":"755","endLine":19,"endColumn":23},{"ruleId":"752","severity":1,"message":"898","line":5,"column":35,"nodeType":"754","messageId":"755","endLine":5,"endColumn":42},{"ruleId":"752","severity":1,"message":"899","line":7,"column":9,"nodeType":"754","messageId":"755","endLine":7,"endColumn":20},{"ruleId":"752","severity":1,"message":"900","line":10,"column":9,"nodeType":"754","messageId":"755","endLine":10,"endColumn":19},{"ruleId":"752","severity":1,"message":"783","line":18,"column":18,"nodeType":"754","messageId":"755","endLine":18,"endColumn":23},"no-native-reassign",["901"],"no-negated-in-lhs",["902"],"no-unused-vars","'getRemainingTime' is assigned a value but never used.","Identifier","unusedVar","'getLastActiveTime' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["903"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useCallback has missing dependencies: 'coupon' and 'dispatch'. Either include them or remove the dependency array. You can also do a functional update 'setCoupon(c => ...)' if you only need 'coupon' in the 'setCoupon' call.",["904"],"React Hook useEffect has missing dependencies: 'activeJackpot.fixtures' and 'addToJackpot'. Either include them or remove the dependency array.",["905"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["906"],"'useCallback' is defined but never used.","'SHOW_DEPOSIT_MODAL' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'error' is assigned a value but never used.","'useState' is defined but never used.","'dispatch' is assigned a value but never used.","'errorData' is assigned a value but never used.",["907"],"'setOtpRef' is assigned a value but never used.",["908"],"'gender' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\-.","unnecessaryEscape",["909","910"],["911","912"],["913","914"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'coupon', 'coupon', 'updated', 'updated'.","ArrowFunctionExpression","unsafeRefs","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","React Hook useEffect has a missing dependency: 'getSports'. Either include it or remove the dependency array.",["915"],"React Hook useEffect has a missing dependency: 'getFixtures'. Either include it or remove the dependency array.",["916"],["917"],"React Hook useEffect has a missing dependency: 'find'. Either include it or remove the dependency array.",["918"],["919"],"React Hook useEffect has a missing dependency: 'tournaments'. Either include it or remove the dependency array.",["920"],"React Hook useEffect has a missing dependency: 'findTipster'. Either include it or remove the dependency array.",["921"],"React Hook useEffect has a missing dependency: 'filterData'. Either include it or remove the dependency array. You can also do a functional update 'setFilterData(f => ...)' if you only need 'filterData' in the 'setFilterData' call.",["922"],["923"],"'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchFixture'. Either include it or remove the dependency array.",["924"],["925"],"React Hook useEffect has a missing dependency: 'markets'. Either include it or remove the dependency array.",["926"],"React Hook useEffect has missing dependencies: 'activeSport' and 'filterSports'. Either include them or remove the dependency array.",["927"],"React Hook useEffect has a missing dependency: 'fetchBetList'. Either include it or remove the dependency array.",["928"],"'SHOW_MODAL' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchTransactions'. Either include it or remove the dependency array.",["929"],"'countries' is assigned a value but never used.","'states' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'personalData'. Either include it or remove the dependency array. You can also do a functional update 'setPersonalData(p => ...)' if you only need 'personalData' in the 'setPersonalData' call.",["930"],"React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.",["931"],["932"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'activeTab' and 'getGateway'. Either include them or remove the dependency array.",["933"],"React Hook useEffect has missing dependencies: 'dispatch' and 'user.username'. Either include them or remove the dependency array.",["934"],["935"],"'goTo' is assigned a value but never used.","'LOADING' is defined but never used.","'SET_COUPON_DATA' is defined but never used.","'loadCoupon' is defined but never used.","'Http' is defined but never used.","'fastAdd' is defined but never used.","'sent' is assigned a value but never used.","'setSent' is assigned a value but never used.","'coupon' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'oddsData'. Either include it or remove the dependency array.",["936"],"'setMarkets' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getNumbers'. Either include it or remove the dependency array.",["937"],"'groupBy' is defined but never used.","'getStats' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchResult'. Either include it or remove the dependency array.",["938"],["939"],"'moment' is defined but never used.","React Hook useEffect has a missing dependency: 'getBetslip'. Either include it or remove the dependency array.",["940"],"'setDetails' is assigned a value but never used.","'setErrMsg' is assigned a value but never used.","'Pusher' is defined but never used.","'toast' is defined but never used.","'todaysBets' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getTodayBet'. Either include it or remove the dependency array.",["941"],"no-extend-native","Array prototype is read only, properties should not be added.","AssignmentExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","no-redeclare","'sk' is already defined.","redeclared","'k' is already defined.","'calculatedGroup' is already defined.","'i' is already defined.","'j' is already defined.","'odd' is already defined.","Function declared in a loop contains unsafe references to variable(s) 'calculatedGroup'.","FunctionExpression","Unnecessary escape character: \\..",["942","943"],"'x' is already defined.","'getOdds' is defined but never used.","'addToCoupon' is defined but never used.","'CANCEL_BET' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"944","fix":"945"},{"desc":"946","fix":"947"},{"desc":"948","fix":"949"},{"desc":"950","fix":"951"},{"desc":"950","fix":"952"},{"desc":"953","fix":"954"},{"messageId":"955","fix":"956","desc":"957"},{"messageId":"958","fix":"959","desc":"960"},{"messageId":"955","fix":"961","desc":"957"},{"messageId":"958","fix":"962","desc":"960"},{"messageId":"955","fix":"963","desc":"957"},{"messageId":"958","fix":"964","desc":"960"},{"desc":"965","fix":"966"},{"desc":"967","fix":"968"},{"desc":"969","fix":"970"},{"desc":"971","fix":"972"},{"desc":"973","fix":"974"},{"desc":"975","fix":"976"},{"desc":"977","fix":"978"},{"desc":"979","fix":"980"},{"desc":"981","fix":"982"},{"desc":"983","fix":"984"},{"desc":"983","fix":"985"},{"desc":"986","fix":"987"},{"desc":"988","fix":"989"},{"desc":"990","fix":"991"},{"desc":"992","fix":"993"},{"desc":"994","fix":"995"},{"desc":"996","fix":"997"},{"desc":"992","fix":"998"},{"desc":"999","fix":"1000"},{"desc":"1001","fix":"1002"},{"desc":"1003","fix":"1004"},{"desc":"1005","fix":"1006"},{"desc":"1007","fix":"1008"},{"desc":"1009","fix":"1010"},{"desc":"990","fix":"1011"},{"desc":"1012","fix":"1013"},{"desc":"1014","fix":"1015"},{"messageId":"955","fix":"1016","desc":"957"},{"messageId":"958","fix":"1017","desc":"960"},"Update the dependencies array to be: [dispatch, isAuthenticated]",{"range":"1018","text":"1019"},"Update the dependencies array to be: [coupon, dispatch]",{"range":"1020","text":"1021"},"Update the dependencies array to be: [activeJackpot.fixtures, addToJackpot, coupon.autopick]",{"range":"1022","text":"1023"},"Update the dependencies array to be: [history, isAuthenticated]",{"range":"1024","text":"1025"},{"range":"1026","text":"1025"},"Update the dependencies array to be: [history, username]",{"range":"1027","text":"1028"},"removeEscape",{"range":"1029","text":"1030"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1031","text":"1032"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"1033","text":"1030"},{"range":"1034","text":"1032"},{"range":"1035","text":"1030"},{"range":"1036","text":"1032"},"Update the dependencies array to be: [activeOdds, getSports, range]",{"range":"1037","text":"1038"},"Update the dependencies array to be: [activeSport, getFixtures]",{"range":"1039","text":"1040"},"Update the dependencies array to be: [activeDate, getSports]",{"range":"1041","text":"1042"},"Update the dependencies array to be: [find, q]",{"range":"1043","text":"1044"},"Update the dependencies array to be: [history, sport]",{"range":"1045","text":"1046"},"Update the dependencies array to be: [dispatch, sid, tid, tournaments]",{"range":"1047","text":"1048"},"Update the dependencies array to be: [findTipster, user_id]",{"range":"1049","text":"1050"},"Update the dependencies array to be: [filterData]",{"range":"1051","text":"1052"},"Update the dependencies array to be: [find]",{"range":"1053","text":"1054"},"Update the dependencies array to be: [fetchFixture]",{"range":"1055","text":"1056"},{"range":"1057","text":"1056"},"Update the dependencies array to be: [fixture, markets]",{"range":"1058","text":"1059"},"Update the dependencies array to be: [activeSport, filterSports, sports]",{"range":"1060","text":"1061"},"Update the dependencies array to be: [fetchBetList]",{"range":"1062","text":"1063"},"Update the dependencies array to be: [fetchTransactions]",{"range":"1064","text":"1065"},"Update the dependencies array to be: [personalData]",{"range":"1066","text":"1067"},"Update the dependencies array to be: [init]",{"range":"1068","text":"1069"},{"range":"1070","text":"1065"},"Update the dependencies array to be: [activeTab, getGateway]",{"range":"1071","text":"1072"},"Update the dependencies array to be: [dispatch, isAuthenticated, user.username]",{"range":"1073","text":"1074"},"Update the dependencies array to be: [activePeriod, getSports]",{"range":"1075","text":"1076"},"Update the dependencies array to be: [newOdds, oddsData]",{"range":"1077","text":"1078"},"Update the dependencies array to be: [data, getNumbers]",{"range":"1079","text":"1080"},"Update the dependencies array to be: [fetchResult]",{"range":"1081","text":"1082"},{"range":"1083","text":"1063"},"Update the dependencies array to be: [betslip_id, getBetslip]",{"range":"1084","text":"1085"},"Update the dependencies array to be: [getTodayBet, isAuthenticated]",{"range":"1086","text":"1087"},{"range":"1088","text":"1030"},{"range":"1089","text":"1032"},[2667,2684],"[dispatch, isAuthenticated]",[1938,1940],"[coupon, dispatch]",[2596,2613],"[activeJackpot.fixtures, addToJackpot, coupon.autopick]",[1192,1209],"[history, isAuthenticated]",[1826,1843],[1144,1154],"[history, username]",[889,890],"",[889,889],"\\",[920,921],[920,920],[922,923],[922,922],[1893,1912],"[activeOdds, getSports, range]",[1972,1985],"[activeSport, getFixtures]",[3517,3529],"[activeDate, getSports]",[896,899],"[find, q]",[2395,2402],"[history, sport]",[807,827],"[dispatch, sid, tid, tournaments]",[1123,1132],"[findTipster, user_id]",[1140,1142],"[filterData]",[758,760],"[find]",[1512,1514],"[fetchFixture]",[1695,1697],[3441,3450],"[fixture, markets]",[2129,2137],"[activeSport, filterSports, sports]",[2476,2478],"[fetchBetList]",[1971,1973],"[fetchTransactions]",[1756,1758],"[personalData]",[1811,1813],"[init]",[1986,1988],[4933,4935],"[activeTab, getGateway]",[1632,1649],"[dispatch, isAuthenticated, user.username]",[1218,1232],"[activePeriod, getSports]",[1645,1654],"[newOdds, oddsData]",[773,779],"[data, getNumbers]",[1307,1309],"[fetchResult]",[2456,2458],[1273,1285],"[betslip_id, getBetslip]",[1766,1783],"[getTodayBet, isAuthenticated]",[21555,21556],[21555,21555]]